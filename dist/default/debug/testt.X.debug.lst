

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Thu Dec 26 20:30:29 2019

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     7                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1
    16                           	psect	text7,global,reloc=2,class=CODE,delta=1
    17                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text10,global,reloc=2,class=CODE,delta=1
    20                           	psect	text11,global,reloc=2,class=CODE,delta=1
    21                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    22                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    23  0000                     
    24                           ; Version 2.10
    25                           ; Generated 31/07/2019 GMT
    26                           ; 
    27                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    28                           ; All rights reserved.
    29                           ; 
    30                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    31                           ; 
    32                           ; Redistribution and use in source and binary forms, with or without modification, are
    33                           ; permitted provided that the following conditions are met:
    34                           ; 
    35                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    36                           ;        conditions and the following disclaimer.
    37                           ; 
    38                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    39                           ;        of conditions and the following disclaimer in the documentation and/or other
    40                           ;        materials provided with the distribution.
    41                           ; 
    42                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    43                           ;        software without specific prior written permission.
    44                           ; 
    45                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    46                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    47                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    48                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    49                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    50                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    51                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    52                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    53                           ; 
    54                           ; 
    55                           ; Code-generator required, PIC18F4520 Definitions
    56                           ; 
    57                           ; SFR Addresses
    58  0000                     _LATBbits	set	3978
    59  0000                     _LATDbits	set	3980
    60  0000                     _LATB	set	3978
    61  0000                     _TRISB	set	3987
    62  0000                     _LATD	set	3980
    63  0000                     _TRISD	set	3989
    64  0000                     _TRISA	set	3986
    65  0000                     _ADCON0bits	set	4034
    66  0000                     _ADRESL	set	4035
    67  0000                     _ADRESH	set	4036
    68  0000                     _ADCON2bits	set	4032
    69  0000                     _ADCON2	set	4032
    70  0000                     _ADCON1	set	4033
    71  0000                     _ADFM	set	32263
    72                           
    73                           ; #config settings
    74  0000                     
    75                           	psect	cinit
    76  006454                     __pcinit:
    77                           	opt callstack 0
    78  006454                     start_initialization:
    79                           	opt callstack 0
    80  006454                     __initialization:
    81                           	opt callstack 0
    82                           
    83                           ; Clear objects allocated to BANK1 (144 bytes)
    84  006454  EE01  F000         	lfsr	0,__pbssBANK1
    85  006458  0E90               	movlw	144
    86  00645A                     clear_0:
    87  00645A  6AEE               	clrf	postinc0,c
    88  00645C  06E8               	decf	wreg,f,c
    89  00645E  E1FD               	bnz	clear_0
    90                           
    91                           ; Clear objects allocated to COMRAM (12 bytes)
    92  006460  EE00  F03F         	lfsr	0,__pbssCOMRAM
    93  006464  0E0C               	movlw	12
    94  006466                     clear_1:
    95  006466  6AEE               	clrf	postinc0,c
    96  006468  06E8               	decf	wreg,f,c
    97  00646A  E1FD               	bnz	clear_1
    98  00646C                     end_of_initialization:
    99                           	opt callstack 0
   100  00646C                     __end_of__initialization:
   101                           	opt callstack 0
   102  00646C  0100               	movlb	0
   103  00646E  EF5B  F03C         	goto	_main	;jump to C main() function
   104                           
   105                           	psect	bssCOMRAM
   106  00003F                     __pbssCOMRAM:
   107                           	opt callstack 0
   108  00003F                     _original:
   109                           	opt callstack 0
   110  00003F                     	ds	12
   111                           
   112                           	psect	bssBANK1
   113  000100                     __pbssBANK1:
   114                           	opt callstack 0
   115  000100                     _rgb:
   116                           	opt callstack 0
   117  000100                     	ds	144
   118                           
   119                           	psect	cstackCOMRAM
   120  000001                     __pcstackCOMRAM:
   121                           	opt callstack 0
   122  000001                     ?_ADC_Read:
   123                           	opt callstack 0
   124  000001                     ?___wmul:
   125                           	opt callstack 0
   126  000001                     ?___awdiv:
   127                           	opt callstack 0
   128  000001                     ADC_Read@channle:
   129                           	opt callstack 0
   130  000001                     ___wmul@multiplier:
   131                           	opt callstack 0
   132  000001                     ___awdiv@dividend:
   133                           	opt callstack 0
   134                           
   135                           ; 2 bytes @ 0x0
   136  000001                     	ds	2
   137  000003                     ??_ADC_Read:
   138  000003                     ___wmul@multiplicand:
   139                           	opt callstack 0
   140  000003                     ___awdiv@divisor:
   141                           	opt callstack 0
   142                           
   143                           ; 2 bytes @ 0x2
   144  000003                     	ds	2
   145  000005                     ___awdiv@counter:
   146                           	opt callstack 0
   147  000005                     ADC_Read@digital:
   148                           	opt callstack 0
   149  000005                     ___wmul@product:
   150                           	opt callstack 0
   151                           
   152                           ; 2 bytes @ 0x4
   153  000005                     	ds	1
   154  000006                     ___awdiv@sign:
   155                           	opt callstack 0
   156                           
   157                           ; 1 bytes @ 0x5
   158  000006                     	ds	1
   159  000007                     initial@i:
   160                           	opt callstack 0
   161  000007                     ___awdiv@quotient:
   162                           	opt callstack 0
   163                           
   164                           ; 2 bytes @ 0x6
   165  000007                     	ds	2
   166  000009                     rotate_r@val:
   167                           	opt callstack 0
   168  000009                     rotate_l@val:
   169                           	opt callstack 0
   170  000009                     rotate_top@val:
   171                           	opt callstack 0
   172  000009                     rotate_bot@val:
   173                           	opt callstack 0
   174  000009                     rotate_sidetop@val:
   175                           	opt callstack 0
   176  000009                     rotate_sidebot@val:
   177                           	opt callstack 0
   178                           
   179                           ; 2 bytes @ 0x8
   180  000009                     	ds	2
   181  00000B                     ??_rotate_r:
   182  00000B                     ??_rotate_l:
   183  00000B                     ??_rotate_top:
   184  00000B                     ??_rotate_bot:
   185  00000B                     ??_rotate_sidetop:
   186  00000B                     ??_rotate_sidebot:
   187                           
   188                           ; 1 bytes @ 0xA
   189  00000B                     	ds	1
   190  00000C                     rotate_r@buf:
   191                           	opt callstack 0
   192  00000C                     rotate_l@buf:
   193                           	opt callstack 0
   194  00000C                     rotate_top@buf:
   195                           	opt callstack 0
   196  00000C                     rotate_bot@buf:
   197                           	opt callstack 0
   198  00000C                     rotate_sidetop@buf:
   199                           	opt callstack 0
   200  00000C                     rotate_sidebot@buf:
   201                           	opt callstack 0
   202                           
   203                           ; 2 bytes @ 0xB
   204  00000C                     	ds	2
   205  00000E                     rotate_r@buf_255:
   206                           	opt callstack 0
   207  00000E                     rotate_l@buf_275:
   208                           	opt callstack 0
   209  00000E                     rotate_top@buf_295:
   210                           	opt callstack 0
   211  00000E                     rotate_bot@buf_315:
   212                           	opt callstack 0
   213  00000E                     rotate_sidetop@buf_335:
   214                           	opt callstack 0
   215  00000E                     rotate_sidebot@buf_355:
   216                           	opt callstack 0
   217                           
   218                           ; 2 bytes @ 0xD
   219  00000E                     	ds	2
   220  000010                     rotate_r@tempa:
   221                           	opt callstack 0
   222  000010                     rotate_l@tempa:
   223                           	opt callstack 0
   224  000010                     rotate_top@tempa:
   225                           	opt callstack 0
   226  000010                     rotate_bot@tempa:
   227                           	opt callstack 0
   228  000010                     rotate_sidetop@tempa:
   229                           	opt callstack 0
   230  000010                     rotate_sidebot@tempa:
   231                           	opt callstack 0
   232                           
   233                           ; 6 bytes @ 0xF
   234  000010                     	ds	6
   235  000016                     rotate_r@tempb:
   236                           	opt callstack 0
   237  000016                     rotate_l@tempb:
   238                           	opt callstack 0
   239  000016                     rotate_top@tempb:
   240                           	opt callstack 0
   241  000016                     rotate_bot@tempb:
   242                           	opt callstack 0
   243  000016                     rotate_sidetop@tempb:
   244                           	opt callstack 0
   245  000016                     rotate_sidebot@tempb:
   246                           	opt callstack 0
   247                           
   248                           ; 6 bytes @ 0x15
   249  000016                     	ds	6
   250  00001C                     rotate_r@tempc:
   251                           	opt callstack 0
   252  00001C                     rotate_l@tempc:
   253                           	opt callstack 0
   254  00001C                     rotate_top@tempc:
   255                           	opt callstack 0
   256  00001C                     rotate_bot@tempc:
   257                           	opt callstack 0
   258  00001C                     rotate_sidetop@tempc:
   259                           	opt callstack 0
   260  00001C                     rotate_sidebot@tempc:
   261                           	opt callstack 0
   262                           
   263                           ; 6 bytes @ 0x1B
   264  00001C                     	ds	6
   265  000022                     rotate_r@tempd:
   266                           	opt callstack 0
   267  000022                     rotate_l@tempd:
   268                           	opt callstack 0
   269  000022                     rotate_top@tempd:
   270                           	opt callstack 0
   271  000022                     rotate_bot@tempd:
   272                           	opt callstack 0
   273  000022                     rotate_sidetop@tempd:
   274                           	opt callstack 0
   275  000022                     rotate_sidebot@tempd:
   276                           	opt callstack 0
   277                           
   278                           ; 6 bytes @ 0x21
   279  000022                     	ds	6
   280  000028                     ??_main:
   281                           
   282                           ; 1 bytes @ 0x27
   283  000028                     	ds	1
   284  000029                     main@temp:
   285                           	opt callstack 0
   286                           
   287                           ; 2 bytes @ 0x28
   288  000029                     	ds	2
   289  00002B                     main@val:
   290                           	opt callstack 0
   291                           
   292                           ; 2 bytes @ 0x2A
   293  00002B                     	ds	2
   294  00002D                     main@val_385:
   295                           	opt callstack 0
   296                           
   297                           ; 2 bytes @ 0x2C
   298  00002D                     	ds	2
   299  00002F                     main@val_387:
   300                           	opt callstack 0
   301                           
   302                           ; 2 bytes @ 0x2E
   303  00002F                     	ds	2
   304  000031                     main@val_389:
   305                           	opt callstack 0
   306                           
   307                           ; 2 bytes @ 0x30
   308  000031                     	ds	2
   309  000033                     main@val_391:
   310                           	opt callstack 0
   311                           
   312                           ; 2 bytes @ 0x32
   313  000033                     	ds	2
   314  000035                     main@val_393:
   315                           	opt callstack 0
   316                           
   317                           ; 2 bytes @ 0x34
   318  000035                     	ds	2
   319  000037                     main@j:
   320                           	opt callstack 0
   321                           
   322                           ; 2 bytes @ 0x36
   323  000037                     	ds	2
   324  000039                     main@index:
   325                           	opt callstack 0
   326                           
   327                           ; 2 bytes @ 0x38
   328  000039                     	ds	2
   329  00003B                     main@turn:
   330                           	opt callstack 0
   331                           
   332                           ; 2 bytes @ 0x3A
   333  00003B                     	ds	2
   334  00003D                     main@i:
   335                           	opt callstack 0
   336                           
   337                           ; 2 bytes @ 0x3C
   338  00003D                     	ds	2
   339                           
   340 ;;
   341 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   342 ;;
   343 ;; *************** function _main *****************
   344 ;; Defined at:
   345 ;;		line 416 in file "newmain.c"
   346 ;; Parameters:    Size  Location     Type
   347 ;;		None
   348 ;; Auto vars:     Size  Location     Type
   349 ;;  val             2   52[COMRAM] int 
   350 ;;  val             2   50[COMRAM] int 
   351 ;;  val             2   48[COMRAM] int 
   352 ;;  val             2   46[COMRAM] int 
   353 ;;  val             2   44[COMRAM] int 
   354 ;;  val             2   42[COMRAM] int 
   355 ;;  index           2   56[COMRAM] int 
   356 ;;  temp            2   40[COMRAM] int 
   357 ;;  i               2   60[COMRAM] int 
   358 ;;  turn            2   58[COMRAM] int 
   359 ;;  j               2   54[COMRAM] int 
   360 ;; Return value:  Size  Location     Type
   361 ;;                  1    wreg      void 
   362 ;; Registers used:
   363 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   364 ;; Tracked objects:
   365 ;;		On entry : 0/0
   366 ;;		On exit  : 0/0
   367 ;;		Unchanged: 0/0
   368 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   369 ;;      Params:         0       0       0       0       0       0       0
   370 ;;      Locals:        22       0       0       0       0       0       0
   371 ;;      Temps:          1       0       0       0       0       0       0
   372 ;;      Totals:        23       0       0       0       0       0       0
   373 ;;Total ram usage:       23 bytes
   374 ;; Hardware stack levels required when called:    2
   375 ;; This function calls:
   376 ;;		_ADC_Initialize
   377 ;;		_ADC_Read
   378 ;;		___awdiv
   379 ;;		___wmul
   380 ;;		_initial
   381 ;;		_rotate_bot
   382 ;;		_rotate_l
   383 ;;		_rotate_r
   384 ;;		_rotate_sidebot
   385 ;;		_rotate_sidetop
   386 ;;		_rotate_top
   387 ;; This function is called by:
   388 ;;		Startup code after reset
   389 ;; This function uses a non-reentrant model
   390 ;;
   391                           
   392                           	psect	text0
   393  0078B6                     __ptext0:
   394                           	opt callstack 0
   395  0078B6                     _main:
   396                           	opt callstack 29
   397  0078B6                     
   398                           ;newmain.c: 417:     initial();
   399  0078B6  EC7A  F03A         	call	_initial	;wreg free
   400  0078BA                     
   401                           ;newmain.c: 418:     ADC_Initialize();
   402  0078BA  EC1D  F032         	call	_ADC_Initialize	;wreg free
   403  0078BE                     
   404                           ;newmain.c: 419:     TRISD =0;
   405  0078BE  0E00               	movlw	0
   406  0078C0  6E95               	movwf	149,c	;volatile
   407  0078C2                     
   408                           ;newmain.c: 420:     LATD = 0;
   409  0078C2  0E00               	movlw	0
   410  0078C4  6E8C               	movwf	140,c	;volatile
   411  0078C6                     
   412                           ;newmain.c: 421:     TRISB =0;
   413  0078C6  0E00               	movlw	0
   414  0078C8  6E93               	movwf	147,c	;volatile
   415  0078CA                     
   416                           ;newmain.c: 422:     LATB = 0;
   417  0078CA  0E00               	movlw	0
   418  0078CC  6E8A               	movwf	138,c	;volatile
   419  0078CE                     
   420                           ;newmain.c: 423:     LATDbits.LATD3 = 1;
   421  0078CE  868C               	bsf	140,3,c	;volatile
   422  0078D0                     
   423                           ;newmain.c: 424:     int i = 0;
   424  0078D0  0E00               	movlw	0
   425  0078D2  6E3E               	movwf	(main@i+1)^0,c
   426  0078D4  0E00               	movlw	0
   427  0078D6  6E3D               	movwf	main@i^0,c
   428  0078D8                     
   429                           ;newmain.c: 425:     int j;;newmain.c: 426:     for(j=0; j<6; j++){
   430  0078D8  0E00               	movlw	0
   431  0078DA  6E38               	movwf	(main@j+1)^0,c
   432  0078DC  0E00               	movlw	0
   433  0078DE  6E37               	movwf	main@j^0,c
   434  0078E0                     l2720:
   435                           
   436                           ;newmain.c: 429:         original[j] = 0;
   437  0078E0  90D8               	bcf	status,0,c
   438  0078E2  3437               	rlcf	main@j^0,w,c
   439  0078E4  6ED9               	movwf	fsr2l,c
   440  0078E6  3438               	rlcf	(main@j+1)^0,w,c
   441  0078E8  6EDA               	movwf	fsr2h,c
   442  0078EA  0E3F               	movlw	low _original
   443  0078EC  26D9               	addwf	fsr2l,f,c
   444  0078EE  0E00               	movlw	high _original
   445  0078F0  22DA               	addwfc	fsr2h,f,c
   446  0078F2  0E00               	movlw	0
   447  0078F4  6EDE               	movwf	postinc2,c
   448  0078F6  0E00               	movlw	0
   449  0078F8  6EDD               	movwf	postdec2,c
   450  0078FA                     
   451                           ;newmain.c: 430:     }
   452  0078FA  4A37               	infsnz	main@j^0,f,c
   453  0078FC  2A38               	incf	(main@j+1)^0,f,c
   454  0078FE  BE38               	btfsc	(main@j+1)^0,7,c
   455  007900  EF8B  F03C         	goto	u1531
   456  007904  5038               	movf	(main@j+1)^0,w,c
   457  007906  E109               	bnz	u1530
   458  007908  0E06               	movlw	6
   459  00790A  5C37               	subwf	main@j^0,w,c
   460  00790C  A0D8               	btfss	status,0,c
   461  00790E  EF8B  F03C         	goto	u1531
   462  007912  EF8D  F03C         	goto	u1530
   463  007916                     u1531:
   464  007916  EF70  F03C         	goto	l2720
   465  00791A                     u1530:
   466  00791A                     l2726:
   467                           
   468                           ;newmain.c: 431:     int turn = 0;
   469  00791A  0E00               	movlw	0
   470  00791C  6E3C               	movwf	(main@turn+1)^0,c
   471  00791E  0E00               	movlw	0
   472  007920  6E3B               	movwf	main@turn^0,c
   473  007922                     l2728:
   474                           
   475                           ;newmain.c: 434:             if(turn == 0) {
   476  007922  503B               	movf	main@turn^0,w,c
   477  007924  103C               	iorwf	(main@turn+1)^0,w,c
   478  007926  A4D8               	btfss	status,2,c
   479  007928  EF98  F03C         	goto	u1541
   480  00792C  EF9A  F03C         	goto	u1540
   481  007930                     u1541:
   482  007930  EFC4  F03C         	goto	l2736
   483  007934                     u1540:
   484  007934                     
   485                           ;newmain.c: 435:                 int val = ADC_Read(0);
   486  007934  0E00               	movlw	0
   487  007936  6E02               	movwf	(ADC_Read@channle+1)^0,c
   488  007938  0E00               	movlw	0
   489  00793A  6E01               	movwf	ADC_Read@channle^0,c
   490  00793C  EC4C  F032         	call	_ADC_Read	;wreg free
   491  007940  C001  F02B         	movff	?_ADC_Read,main@val
   492  007944  C002  F02C         	movff	?_ADC_Read+1,main@val+1
   493  007948                     
   494                           ;newmain.c: 436:                 rotate_top(val/300);
   495  007948  C02B  F001         	movff	main@val,___awdiv@dividend
   496  00794C  C02C  F002         	movff	main@val+1,___awdiv@dividend+1
   497  007950  0E01               	movlw	1
   498  007952  6E04               	movwf	(___awdiv@divisor+1)^0,c
   499  007954  0E2C               	movlw	44
   500  007956  6E03               	movwf	___awdiv@divisor^0,c
   501  007958  EC6E  F032         	call	___awdiv	;wreg free
   502  00795C  C001  F009         	movff	?___awdiv,rotate_top@val
   503  007960  C002  F00A         	movff	?___awdiv+1,rotate_top@val+1
   504  007964  EC33  F039         	call	_rotate_top	;wreg free
   505  007968                     
   506                           ;newmain.c: 437:                 original[0] = val/300;
   507  007968  C02B  F001         	movff	main@val,___awdiv@dividend
   508  00796C  C02C  F002         	movff	main@val+1,___awdiv@dividend+1
   509  007970  0E01               	movlw	1
   510  007972  6E04               	movwf	(___awdiv@divisor+1)^0,c
   511  007974  0E2C               	movlw	44
   512  007976  6E03               	movwf	___awdiv@divisor^0,c
   513  007978  EC6E  F032         	call	___awdiv	;wreg free
   514  00797C  C001  F03F         	movff	?___awdiv,_original	;volatile
   515  007980  C002  F040         	movff	?___awdiv+1,_original+1	;volatile
   516                           
   517                           ;newmain.c: 438:             }
   518  007984  EFC7  F03D         	goto	l2776
   519  007988                     l2736:
   520  007988  043B               	decf	main@turn^0,w,c
   521  00798A  103C               	iorwf	(main@turn+1)^0,w,c
   522  00798C  A4D8               	btfss	status,2,c
   523  00798E  EFCB  F03C         	goto	u1551
   524  007992  EFCD  F03C         	goto	u1550
   525  007996                     u1551:
   526  007996  EFF7  F03C         	goto	l2744
   527  00799A                     u1550:
   528  00799A                     
   529                           ;newmain.c: 440:                 int val = ADC_Read(1);
   530  00799A  0E00               	movlw	0
   531  00799C  6E02               	movwf	(ADC_Read@channle+1)^0,c
   532  00799E  0E01               	movlw	1
   533  0079A0  6E01               	movwf	ADC_Read@channle^0,c
   534  0079A2  EC4C  F032         	call	_ADC_Read	;wreg free
   535  0079A6  C001  F02D         	movff	?_ADC_Read,main@val_385
   536  0079AA  C002  F02E         	movff	?_ADC_Read+1,main@val_385+1
   537  0079AE                     
   538                           ;newmain.c: 441:                 rotate_bot(val/300);
   539  0079AE  C02D  F001         	movff	main@val_385,___awdiv@dividend
   540  0079B2  C02E  F002         	movff	main@val_385+1,___awdiv@dividend+1
   541  0079B6  0E01               	movlw	1
   542  0079B8  6E04               	movwf	(___awdiv@divisor+1)^0,c
   543  0079BA  0E2C               	movlw	44
   544  0079BC  6E03               	movwf	___awdiv@divisor^0,c
   545  0079BE  EC6E  F032         	call	___awdiv	;wreg free
   546  0079C2  C001  F009         	movff	?___awdiv,rotate_bot@val
   547  0079C6  C002  F00A         	movff	?___awdiv+1,rotate_bot@val+1
   548  0079CA  ECD0  F032         	call	_rotate_bot	;wreg free
   549  0079CE                     
   550                           ;newmain.c: 442:                 original[1] = val/300;
   551  0079CE  C02D  F001         	movff	main@val_385,___awdiv@dividend
   552  0079D2  C02E  F002         	movff	main@val_385+1,___awdiv@dividend+1
   553  0079D6  0E01               	movlw	1
   554  0079D8  6E04               	movwf	(___awdiv@divisor+1)^0,c
   555  0079DA  0E2C               	movlw	44
   556  0079DC  6E03               	movwf	___awdiv@divisor^0,c
   557  0079DE  EC6E  F032         	call	___awdiv	;wreg free
   558  0079E2  C001  F041         	movff	?___awdiv,_original+2	;volatile
   559  0079E6  C002  F042         	movff	?___awdiv+1,_original+3	;volatile
   560                           
   561                           ;newmain.c: 443:             }
   562  0079EA  EFC7  F03D         	goto	l2776
   563  0079EE                     l2744:
   564  0079EE  0E02               	movlw	2
   565  0079F0  183B               	xorwf	main@turn^0,w,c
   566  0079F2  103C               	iorwf	(main@turn+1)^0,w,c
   567  0079F4  A4D8               	btfss	status,2,c
   568  0079F6  EFFF  F03C         	goto	u1561
   569  0079FA  EF01  F03D         	goto	u1560
   570  0079FE                     u1561:
   571  0079FE  EF2B  F03D         	goto	l2752
   572  007A02                     u1560:
   573  007A02                     
   574                           ;newmain.c: 445:                 int val = ADC_Read(6);
   575  007A02  0E00               	movlw	0
   576  007A04  6E02               	movwf	(ADC_Read@channle+1)^0,c
   577  007A06  0E06               	movlw	6
   578  007A08  6E01               	movwf	ADC_Read@channle^0,c
   579  007A0A  EC4C  F032         	call	_ADC_Read	;wreg free
   580  007A0E  C001  F02F         	movff	?_ADC_Read,main@val_387
   581  007A12  C002  F030         	movff	?_ADC_Read+1,main@val_387+1
   582  007A16                     
   583                           ;newmain.c: 446:                 rotate_r(val/300);
   584  007A16  C02F  F001         	movff	main@val_387,___awdiv@dividend
   585  007A1A  C030  F002         	movff	main@val_387+1,___awdiv@dividend+1
   586  007A1E  0E01               	movlw	1
   587  007A20  6E04               	movwf	(___awdiv@divisor+1)^0,c
   588  007A22  0E2C               	movlw	44
   589  007A24  6E03               	movwf	___awdiv@divisor^0,c
   590  007A26  EC6E  F032         	call	___awdiv	;wreg free
   591  007A2A  C001  F009         	movff	?___awdiv,rotate_r@val
   592  007A2E  C002  F00A         	movff	?___awdiv+1,rotate_r@val+1
   593  007A32  EC5E  F035         	call	_rotate_r	;wreg free
   594  007A36                     
   595                           ;newmain.c: 447:                 original[2] = val/300;
   596  007A36  C02F  F001         	movff	main@val_387,___awdiv@dividend
   597  007A3A  C030  F002         	movff	main@val_387+1,___awdiv@dividend+1
   598  007A3E  0E01               	movlw	1
   599  007A40  6E04               	movwf	(___awdiv@divisor+1)^0,c
   600  007A42  0E2C               	movlw	44
   601  007A44  6E03               	movwf	___awdiv@divisor^0,c
   602  007A46  EC6E  F032         	call	___awdiv	;wreg free
   603  007A4A  C001  F043         	movff	?___awdiv,_original+4	;volatile
   604  007A4E  C002  F044         	movff	?___awdiv+1,_original+5	;volatile
   605                           
   606                           ;newmain.c: 448:             }
   607  007A52  EFC7  F03D         	goto	l2776
   608  007A56                     l2752:
   609  007A56  0E03               	movlw	3
   610  007A58  183B               	xorwf	main@turn^0,w,c
   611  007A5A  103C               	iorwf	(main@turn+1)^0,w,c
   612  007A5C  A4D8               	btfss	status,2,c
   613  007A5E  EF33  F03D         	goto	u1571
   614  007A62  EF35  F03D         	goto	u1570
   615  007A66                     u1571:
   616  007A66  EF5F  F03D         	goto	l2760
   617  007A6A                     u1570:
   618  007A6A                     
   619                           ;newmain.c: 450:                 int val = ADC_Read(7);
   620  007A6A  0E00               	movlw	0
   621  007A6C  6E02               	movwf	(ADC_Read@channle+1)^0,c
   622  007A6E  0E07               	movlw	7
   623  007A70  6E01               	movwf	ADC_Read@channle^0,c
   624  007A72  EC4C  F032         	call	_ADC_Read	;wreg free
   625  007A76  C001  F031         	movff	?_ADC_Read,main@val_389
   626  007A7A  C002  F032         	movff	?_ADC_Read+1,main@val_389+1
   627  007A7E                     
   628                           ;newmain.c: 451:                 rotate_l(val/300);
   629  007A7E  C031  F001         	movff	main@val_389,___awdiv@dividend
   630  007A82  C032  F002         	movff	main@val_389+1,___awdiv@dividend+1
   631  007A86  0E01               	movlw	1
   632  007A88  6E04               	movwf	(___awdiv@divisor+1)^0,c
   633  007A8A  0E2C               	movlw	44
   634  007A8C  6E03               	movwf	___awdiv@divisor^0,c
   635  007A8E  EC6E  F032         	call	___awdiv	;wreg free
   636  007A92  C001  F009         	movff	?___awdiv,rotate_l@val
   637  007A96  C002  F00A         	movff	?___awdiv+1,rotate_l@val+1
   638  007A9A  EC17  F034         	call	_rotate_l	;wreg free
   639  007A9E                     
   640                           ;newmain.c: 452:                 original[3] = val/300;
   641  007A9E  C031  F001         	movff	main@val_389,___awdiv@dividend
   642  007AA2  C032  F002         	movff	main@val_389+1,___awdiv@dividend+1
   643  007AA6  0E01               	movlw	1
   644  007AA8  6E04               	movwf	(___awdiv@divisor+1)^0,c
   645  007AAA  0E2C               	movlw	44
   646  007AAC  6E03               	movwf	___awdiv@divisor^0,c
   647  007AAE  EC6E  F032         	call	___awdiv	;wreg free
   648  007AB2  C001  F045         	movff	?___awdiv,_original+6	;volatile
   649  007AB6  C002  F046         	movff	?___awdiv+1,_original+7	;volatile
   650                           
   651                           ;newmain.c: 453:             }
   652  007ABA  EFC7  F03D         	goto	l2776
   653  007ABE                     l2760:
   654  007ABE  0E04               	movlw	4
   655  007AC0  183B               	xorwf	main@turn^0,w,c
   656  007AC2  103C               	iorwf	(main@turn+1)^0,w,c
   657  007AC4  A4D8               	btfss	status,2,c
   658  007AC6  EF67  F03D         	goto	u1581
   659  007ACA  EF69  F03D         	goto	u1580
   660  007ACE                     u1581:
   661  007ACE  EF93  F03D         	goto	l2768
   662  007AD2                     u1580:
   663  007AD2                     
   664                           ;newmain.c: 455:                 int val = ADC_Read(4);
   665  007AD2  0E00               	movlw	0
   666  007AD4  6E02               	movwf	(ADC_Read@channle+1)^0,c
   667  007AD6  0E04               	movlw	4
   668  007AD8  6E01               	movwf	ADC_Read@channle^0,c
   669  007ADA  EC4C  F032         	call	_ADC_Read	;wreg free
   670  007ADE  C001  F033         	movff	?_ADC_Read,main@val_391
   671  007AE2  C002  F034         	movff	?_ADC_Read+1,main@val_391+1
   672  007AE6                     
   673                           ;newmain.c: 456:                 rotate_sidetop(val/300);
   674  007AE6  C033  F001         	movff	main@val_391,___awdiv@dividend
   675  007AEA  C034  F002         	movff	main@val_391+1,___awdiv@dividend+1
   676  007AEE  0E01               	movlw	1
   677  007AF0  6E04               	movwf	(___awdiv@divisor+1)^0,c
   678  007AF2  0E2C               	movlw	44
   679  007AF4  6E03               	movwf	___awdiv@divisor^0,c
   680  007AF6  EC6E  F032         	call	___awdiv	;wreg free
   681  007AFA  C001  F009         	movff	?___awdiv,rotate_sidetop@val
   682  007AFE  C002  F00A         	movff	?___awdiv+1,rotate_sidetop@val+1
   683  007B02  ECEC  F037         	call	_rotate_sidetop	;wreg free
   684  007B06                     
   685                           ;newmain.c: 457:                 original[4] = val/300;
   686  007B06  C033  F001         	movff	main@val_391,___awdiv@dividend
   687  007B0A  C034  F002         	movff	main@val_391+1,___awdiv@dividend+1
   688  007B0E  0E01               	movlw	1
   689  007B10  6E04               	movwf	(___awdiv@divisor+1)^0,c
   690  007B12  0E2C               	movlw	44
   691  007B14  6E03               	movwf	___awdiv@divisor^0,c
   692  007B16  EC6E  F032         	call	___awdiv	;wreg free
   693  007B1A  C001  F047         	movff	?___awdiv,_original+8	;volatile
   694  007B1E  C002  F048         	movff	?___awdiv+1,_original+9	;volatile
   695                           
   696                           ;newmain.c: 458:             }
   697  007B22  EFC7  F03D         	goto	l2776
   698  007B26                     l2768:
   699  007B26  0E05               	movlw	5
   700  007B28  183B               	xorwf	main@turn^0,w,c
   701  007B2A  103C               	iorwf	(main@turn+1)^0,w,c
   702  007B2C  A4D8               	btfss	status,2,c
   703  007B2E  EF9B  F03D         	goto	u1591
   704  007B32  EF9D  F03D         	goto	u1590
   705  007B36                     u1591:
   706  007B36  EFC7  F03D         	goto	l149
   707  007B3A                     u1590:
   708  007B3A                     
   709                           ;newmain.c: 460:                 int val = ADC_Read(5);
   710  007B3A  0E00               	movlw	0
   711  007B3C  6E02               	movwf	(ADC_Read@channle+1)^0,c
   712  007B3E  0E05               	movlw	5
   713  007B40  6E01               	movwf	ADC_Read@channle^0,c
   714  007B42  EC4C  F032         	call	_ADC_Read	;wreg free
   715  007B46  C001  F035         	movff	?_ADC_Read,main@val_393
   716  007B4A  C002  F036         	movff	?_ADC_Read+1,main@val_393+1
   717  007B4E                     
   718                           ;newmain.c: 461:                 rotate_sidebot(val/300);
   719  007B4E  C035  F001         	movff	main@val_393,___awdiv@dividend
   720  007B52  C036  F002         	movff	main@val_393+1,___awdiv@dividend+1
   721  007B56  0E01               	movlw	1
   722  007B58  6E04               	movwf	(___awdiv@divisor+1)^0,c
   723  007B5A  0E2C               	movlw	44
   724  007B5C  6E03               	movwf	___awdiv@divisor^0,c
   725  007B5E  EC6E  F032         	call	___awdiv	;wreg free
   726  007B62  C001  F009         	movff	?___awdiv,rotate_sidebot@val
   727  007B66  C002  F00A         	movff	?___awdiv+1,rotate_sidebot@val+1
   728  007B6A  ECA5  F036         	call	_rotate_sidebot	;wreg free
   729  007B6E                     
   730                           ;newmain.c: 462:                 original[5] = val/300;
   731  007B6E  C035  F001         	movff	main@val_393,___awdiv@dividend
   732  007B72  C036  F002         	movff	main@val_393+1,___awdiv@dividend+1
   733  007B76  0E01               	movlw	1
   734  007B78  6E04               	movwf	(___awdiv@divisor+1)^0,c
   735  007B7A  0E2C               	movlw	44
   736  007B7C  6E03               	movwf	___awdiv@divisor^0,c
   737  007B7E  EC6E  F032         	call	___awdiv	;wreg free
   738  007B82  C001  F049         	movff	?___awdiv,_original+10	;volatile
   739  007B86  C002  F04A         	movff	?___awdiv+1,_original+11	;volatile
   740  007B8A  EFC7  F03D         	goto	l2776
   741  007B8E                     l149:
   742  007B8E                     l2776:
   743                           
   744                           ;newmain.c: 466:         LATDbits.LATD0 = rgb[i].r;
   745  007B8E  C03D  F001         	movff	main@i,___wmul@multiplier
   746  007B92  C03E  F002         	movff	main@i+1,___wmul@multiplier+1
   747  007B96  0E00               	movlw	0
   748  007B98  6E04               	movwf	(___wmul@multiplicand+1)^0,c
   749  007B9A  0E06               	movlw	6
   750  007B9C  6E03               	movwf	___wmul@multiplicand^0,c
   751  007B9E  EC39  F032         	call	___wmul	;wreg free
   752  007BA2  0E00               	movlw	low _rgb
   753  007BA4  2401               	addwf	?___wmul^0,w,c
   754  007BA6  6ED9               	movwf	fsr2l,c
   755  007BA8  0E01               	movlw	high _rgb
   756  007BAA  2002               	addwfc	(?___wmul+1)^0,w,c
   757  007BAC  6EDA               	movwf	fsr2h,c
   758  007BAE  50DF               	movf	indf2,w,c
   759  007BB0  6E28               	movwf	??_main^0,c
   760  007BB2  508C               	movf	140,w,c	;volatile
   761  007BB4  1828               	xorwf	??_main^0,w,c
   762  007BB6  0BFE               	andlw	-2
   763  007BB8  1828               	xorwf	??_main^0,w,c
   764  007BBA  6E8C               	movwf	140,c	;volatile
   765  007BBC                     
   766                           ;newmain.c: 467:         LATDbits.LATD1 = rgb[i].g;
   767  007BBC  C03D  F001         	movff	main@i,___wmul@multiplier
   768  007BC0  C03E  F002         	movff	main@i+1,___wmul@multiplier+1
   769  007BC4  0E00               	movlw	0
   770  007BC6  6E04               	movwf	(___wmul@multiplicand+1)^0,c
   771  007BC8  0E06               	movlw	6
   772  007BCA  6E03               	movwf	___wmul@multiplicand^0,c
   773  007BCC  EC39  F032         	call	___wmul	;wreg free
   774  007BD0  0E02               	movlw	low (_rgb+2)
   775  007BD2  2401               	addwf	?___wmul^0,w,c
   776  007BD4  6ED9               	movwf	fsr2l,c
   777  007BD6  0E01               	movlw	high (_rgb+2)
   778  007BD8  2002               	addwfc	(?___wmul+1)^0,w,c
   779  007BDA  6EDA               	movwf	fsr2h,c
   780  007BDC  50DF               	movf	indf2,w,c
   781  007BDE  6E28               	movwf	??_main^0,c
   782  007BE0  4628               	rlncf	??_main^0,f,c
   783  007BE2  508C               	movf	140,w,c	;volatile
   784  007BE4  1828               	xorwf	??_main^0,w,c
   785  007BE6  0BFD               	andlw	-3
   786  007BE8  1828               	xorwf	??_main^0,w,c
   787  007BEA  6E8C               	movwf	140,c	;volatile
   788  007BEC                     
   789                           ;newmain.c: 468:         LATDbits.LATD2 = rgb[i].b;
   790  007BEC  C03D  F001         	movff	main@i,___wmul@multiplier
   791  007BF0  C03E  F002         	movff	main@i+1,___wmul@multiplier+1
   792  007BF4  0E00               	movlw	0
   793  007BF6  6E04               	movwf	(___wmul@multiplicand+1)^0,c
   794  007BF8  0E06               	movlw	6
   795  007BFA  6E03               	movwf	___wmul@multiplicand^0,c
   796  007BFC  EC39  F032         	call	___wmul	;wreg free
   797  007C00  0E04               	movlw	low (_rgb+4)
   798  007C02  2401               	addwf	?___wmul^0,w,c
   799  007C04  6ED9               	movwf	fsr2l,c
   800  007C06  0E01               	movlw	high (_rgb+4)
   801  007C08  2002               	addwfc	(?___wmul+1)^0,w,c
   802  007C0A  6EDA               	movwf	fsr2h,c
   803  007C0C  50DF               	movf	indf2,w,c
   804  007C0E  6E28               	movwf	??_main^0,c
   805  007C10  4628               	rlncf	??_main^0,f,c
   806  007C12  4628               	rlncf	??_main^0,f,c
   807  007C14  508C               	movf	140,w,c	;volatile
   808  007C16  1828               	xorwf	??_main^0,w,c
   809  007C18  0BFB               	andlw	-5
   810  007C1A  1828               	xorwf	??_main^0,w,c
   811  007C1C  6E8C               	movwf	140,c	;volatile
   812  007C1E                     
   813                           ;newmain.c: 469:         int index;;newmain.c: 470:         if(i==0) index = 9;
   814  007C1E  503D               	movf	main@i^0,w,c
   815  007C20  103E               	iorwf	(main@i+1)^0,w,c
   816  007C22  A4D8               	btfss	status,2,c
   817  007C24  EF16  F03E         	goto	u1601
   818  007C28  EF18  F03E         	goto	u1600
   819  007C2C                     u1601:
   820  007C2C  EF1E  F03E         	goto	l2786
   821  007C30                     u1600:
   822  007C30  0E00               	movlw	0
   823  007C32  6E3A               	movwf	(main@index+1)^0,c
   824  007C34  0E09               	movlw	9
   825  007C36  6E39               	movwf	main@index^0,c
   826  007C38  EF4D  F03E         	goto	l2798
   827  007C3C                     l2786:
   828  007C3C  043D               	decf	main@i^0,w,c
   829  007C3E  103E               	iorwf	(main@i+1)^0,w,c
   830  007C40  A4D8               	btfss	status,2,c
   831  007C42  EF25  F03E         	goto	u1611
   832  007C46  EF27  F03E         	goto	u1610
   833  007C4A                     u1611:
   834  007C4A  EF2D  F03E         	goto	l2790
   835  007C4E                     u1610:
   836  007C4E  0E00               	movlw	0
   837  007C50  6E3A               	movwf	(main@index+1)^0,c
   838  007C52  0E08               	movlw	8
   839  007C54  6E39               	movwf	main@index^0,c
   840  007C56  EF4D  F03E         	goto	l2798
   841  007C5A                     l2790:
   842  007C5A  0E02               	movlw	2
   843  007C5C  183D               	xorwf	main@i^0,w,c
   844  007C5E  103E               	iorwf	(main@i+1)^0,w,c
   845  007C60  A4D8               	btfss	status,2,c
   846  007C62  EF35  F03E         	goto	u1621
   847  007C66  EF37  F03E         	goto	u1620
   848  007C6A                     u1621:
   849  007C6A  EF3D  F03E         	goto	l2794
   850  007C6E                     u1620:
   851  007C6E  0E00               	movlw	0
   852  007C70  6E3A               	movwf	(main@index+1)^0,c
   853  007C72  0E0B               	movlw	11
   854  007C74  6E39               	movwf	main@index^0,c
   855  007C76  EF4D  F03E         	goto	l2798
   856  007C7A                     l2794:
   857  007C7A  0E03               	movlw	3
   858  007C7C  183D               	xorwf	main@i^0,w,c
   859  007C7E  103E               	iorwf	(main@i+1)^0,w,c
   860  007C80  A4D8               	btfss	status,2,c
   861  007C82  EF45  F03E         	goto	u1631
   862  007C86  EF47  F03E         	goto	u1630
   863  007C8A                     u1631:
   864  007C8A  EF4D  F03E         	goto	l158
   865  007C8E                     u1630:
   866  007C8E  0E00               	movlw	0
   867  007C90  6E3A               	movwf	(main@index+1)^0,c
   868  007C92  0E0A               	movlw	10
   869  007C94  6E39               	movwf	main@index^0,c
   870  007C96  EF4D  F03E         	goto	l2798
   871  007C9A                     l158:
   872  007C9A                     l2798:
   873                           
   874                           ;newmain.c: 474:         LATBbits.LATB0 = rgb[index].r;
   875  007C9A  C039  F001         	movff	main@index,___wmul@multiplier
   876  007C9E  C03A  F002         	movff	main@index+1,___wmul@multiplier+1
   877  007CA2  0E00               	movlw	0
   878  007CA4  6E04               	movwf	(___wmul@multiplicand+1)^0,c
   879  007CA6  0E06               	movlw	6
   880  007CA8  6E03               	movwf	___wmul@multiplicand^0,c
   881  007CAA  EC39  F032         	call	___wmul	;wreg free
   882  007CAE  0E00               	movlw	low _rgb
   883  007CB0  2401               	addwf	?___wmul^0,w,c
   884  007CB2  6ED9               	movwf	fsr2l,c
   885  007CB4  0E01               	movlw	high _rgb
   886  007CB6  2002               	addwfc	(?___wmul+1)^0,w,c
   887  007CB8  6EDA               	movwf	fsr2h,c
   888  007CBA  50DF               	movf	indf2,w,c
   889  007CBC  6E28               	movwf	??_main^0,c
   890  007CBE  508A               	movf	138,w,c	;volatile
   891  007CC0  1828               	xorwf	??_main^0,w,c
   892  007CC2  0BFE               	andlw	-2
   893  007CC4  1828               	xorwf	??_main^0,w,c
   894  007CC6  6E8A               	movwf	138,c	;volatile
   895  007CC8                     
   896                           ;newmain.c: 475:         LATBbits.LATB1 = rgb[index].g;
   897  007CC8  C039  F001         	movff	main@index,___wmul@multiplier
   898  007CCC  C03A  F002         	movff	main@index+1,___wmul@multiplier+1
   899  007CD0  0E00               	movlw	0
   900  007CD2  6E04               	movwf	(___wmul@multiplicand+1)^0,c
   901  007CD4  0E06               	movlw	6
   902  007CD6  6E03               	movwf	___wmul@multiplicand^0,c
   903  007CD8  EC39  F032         	call	___wmul	;wreg free
   904  007CDC  0E02               	movlw	low (_rgb+2)
   905  007CDE  2401               	addwf	?___wmul^0,w,c
   906  007CE0  6ED9               	movwf	fsr2l,c
   907  007CE2  0E01               	movlw	high (_rgb+2)
   908  007CE4  2002               	addwfc	(?___wmul+1)^0,w,c
   909  007CE6  6EDA               	movwf	fsr2h,c
   910  007CE8  50DF               	movf	indf2,w,c
   911  007CEA  6E28               	movwf	??_main^0,c
   912  007CEC  4628               	rlncf	??_main^0,f,c
   913  007CEE  508A               	movf	138,w,c	;volatile
   914  007CF0  1828               	xorwf	??_main^0,w,c
   915  007CF2  0BFD               	andlw	-3
   916  007CF4  1828               	xorwf	??_main^0,w,c
   917  007CF6  6E8A               	movwf	138,c	;volatile
   918  007CF8                     
   919                           ;newmain.c: 476:         LATBbits.LATB2 = rgb[index].b;
   920  007CF8  C039  F001         	movff	main@index,___wmul@multiplier
   921  007CFC  C03A  F002         	movff	main@index+1,___wmul@multiplier+1
   922  007D00  0E00               	movlw	0
   923  007D02  6E04               	movwf	(___wmul@multiplicand+1)^0,c
   924  007D04  0E06               	movlw	6
   925  007D06  6E03               	movwf	___wmul@multiplicand^0,c
   926  007D08  EC39  F032         	call	___wmul	;wreg free
   927  007D0C  0E04               	movlw	low (_rgb+4)
   928  007D0E  2401               	addwf	?___wmul^0,w,c
   929  007D10  6ED9               	movwf	fsr2l,c
   930  007D12  0E01               	movlw	high (_rgb+4)
   931  007D14  2002               	addwfc	(?___wmul+1)^0,w,c
   932  007D16  6EDA               	movwf	fsr2h,c
   933  007D18  50DF               	movf	indf2,w,c
   934  007D1A  6E28               	movwf	??_main^0,c
   935  007D1C  4628               	rlncf	??_main^0,f,c
   936  007D1E  4628               	rlncf	??_main^0,f,c
   937  007D20  508A               	movf	138,w,c	;volatile
   938  007D22  1828               	xorwf	??_main^0,w,c
   939  007D24  0BFB               	andlw	-5
   940  007D26  1828               	xorwf	??_main^0,w,c
   941  007D28  6E8A               	movwf	138,c	;volatile
   942  007D2A                     
   943                           ;newmain.c: 477:         _delay((unsigned long)((5)*(20000000/4000000.0)));
   944  007D2A  0E08               	movlw	8
   945  007D2C                     u1717:
   946  007D2C  2EE8               	decfsz	wreg,f,c
   947  007D2E  D7FE               	bra	u1717
   948  007D30  F000               	nop	
   949  007D32                     
   950                           ;newmain.c: 478:         LATDbits.LATD0 = 1;
   951  007D32  808C               	bsf	140,0,c	;volatile
   952  007D34                     
   953                           ;newmain.c: 479:         LATDbits.LATD1 = 1;
   954  007D34  828C               	bsf	140,1,c	;volatile
   955  007D36                     
   956                           ;newmain.c: 480:         LATDbits.LATD2 = 1;
   957  007D36  848C               	bsf	140,2,c	;volatile
   958  007D38                     
   959                           ;newmain.c: 481:         LATBbits.LATB0 = 1;
   960  007D38  808A               	bsf	138,0,c	;volatile
   961  007D3A                     
   962                           ;newmain.c: 482:         LATBbits.LATB1 = 1;
   963  007D3A  828A               	bsf	138,1,c	;volatile
   964  007D3C                     
   965                           ;newmain.c: 483:         LATBbits.LATB2 = 1;
   966  007D3C  848A               	bsf	138,2,c	;volatile
   967  007D3E                     
   968                           ;newmain.c: 484:         int temp = LATDbits.LATD6;
   969  007D3E  BC8C               	btfsc	140,6,c	;volatile
   970  007D40  EFA4  F03E         	goto	u1641
   971  007D44  EFA8  F03E         	goto	u1640
   972  007D48                     u1641:
   973  007D48  6A28               	clrf	??_main^0,c
   974  007D4A  2A28               	incf	??_main^0,f,c
   975  007D4C  EFA9  F03E         	goto	u1648
   976  007D50                     u1640:
   977  007D50  6A28               	clrf	??_main^0,c
   978  007D52                     u1648:
   979  007D52  5028               	movf	??_main^0,w,c
   980  007D54  6E29               	movwf	main@temp^0,c
   981  007D56  6A2A               	clrf	(main@temp+1)^0,c
   982  007D58                     
   983                           ;newmain.c: 485:         LATDbits.LATD6 = LATDbits.LATD5;
   984  007D58  AA8C               	btfss	140,5,c	;volatile
   985  007D5A  D002               	bra	u1655
   986  007D5C  8C8C               	bsf	140,6,c	;volatile
   987  007D5E  D001               	bra	u1657
   988  007D60                     u1655:
   989  007D60  9C8C               	bcf	140,6,c	;volatile
   990  007D62                     u1657:
   991  007D62                     
   992                           ;newmain.c: 486:         LATDbits.LATD5 = LATDbits.LATD4;
   993  007D62  A88C               	btfss	140,4,c	;volatile
   994  007D64  D002               	bra	u1665
   995  007D66  8A8C               	bsf	140,5,c	;volatile
   996  007D68  D001               	bra	u1667
   997  007D6A                     u1665:
   998  007D6A  9A8C               	bcf	140,5,c	;volatile
   999  007D6C                     u1667:
  1000  007D6C                     
  1001                           ;newmain.c: 487:         LATDbits.LATD4 = LATDbits.LATD3;
  1002  007D6C  A68C               	btfss	140,3,c	;volatile
  1003  007D6E  D002               	bra	u1675
  1004  007D70  888C               	bsf	140,4,c	;volatile
  1005  007D72  D001               	bra	u1677
  1006  007D74                     u1675:
  1007  007D74  988C               	bcf	140,4,c	;volatile
  1008  007D76                     u1677:
  1009  007D76                     
  1010                           ;newmain.c: 488:         LATDbits.LATD3 = temp;
  1011  007D76  B029               	btfsc	main@temp^0,0,c
  1012  007D78  D002               	bra	u1685
  1013  007D7A  968C               	bcf	140,3,c	;volatile
  1014  007D7C  D001               	bra	u1686
  1015  007D7E                     u1685:
  1016  007D7E  868C               	bsf	140,3,c	;volatile
  1017  007D80                     u1686:
  1018  007D80                     
  1019                           ;newmain.c: 489:         i++;
  1020  007D80  4A3D               	infsnz	main@i^0,f,c
  1021  007D82  2A3E               	incf	(main@i+1)^0,f,c
  1022  007D84                     
  1023                           ;newmain.c: 490:         if(i == 4){
  1024  007D84  0E04               	movlw	4
  1025  007D86  183D               	xorwf	main@i^0,w,c
  1026  007D88  103E               	iorwf	(main@i+1)^0,w,c
  1027  007D8A  A4D8               	btfss	status,2,c
  1028  007D8C  EFCA  F03E         	goto	u1691
  1029  007D90  EFCC  F03E         	goto	u1690
  1030  007D94                     u1691:
  1031  007D94  EFD0  F03E         	goto	l2834
  1032  007D98                     u1690:
  1033  007D98                     
  1034                           ;newmain.c: 491:             i = 0;
  1035  007D98  0E00               	movlw	0
  1036  007D9A  6E3E               	movwf	(main@i+1)^0,c
  1037  007D9C  0E00               	movlw	0
  1038  007D9E  6E3D               	movwf	main@i^0,c
  1039  007DA0                     l2834:
  1040                           
  1041                           ;newmain.c: 493:         turn++;
  1042  007DA0  4A3B               	infsnz	main@turn^0,f,c
  1043  007DA2  2A3C               	incf	(main@turn+1)^0,f,c
  1044  007DA4                     
  1045                           ;newmain.c: 494:         if(turn == 6) turn = 0;
  1046  007DA4  0E06               	movlw	6
  1047  007DA6  183B               	xorwf	main@turn^0,w,c
  1048  007DA8  103C               	iorwf	(main@turn+1)^0,w,c
  1049  007DAA  A4D8               	btfss	status,2,c
  1050  007DAC  EFDA  F03E         	goto	u1701
  1051  007DB0  EFDC  F03E         	goto	u1700
  1052  007DB4                     u1701:
  1053  007DB4  EF91  F03C         	goto	l2728
  1054  007DB8                     u1700:
  1055  007DB8  EF8D  F03C         	goto	l2726
  1056  007DBC  EF00  F000         	goto	start
  1057  007DC0                     __end_of_main:
  1058                           	opt callstack 0
  1059                           
  1060 ;; *************** function _rotate_top *****************
  1061 ;; Defined at:
  1062 ;;		line 228 in file "newmain.c"
  1063 ;; Parameters:    Size  Location     Type
  1064 ;;  val             2    8[COMRAM] int 
  1065 ;; Auto vars:     Size  Location     Type
  1066 ;;  tempd           6   33[COMRAM] struct RGB
  1067 ;;  tempc           6   27[COMRAM] struct RGB
  1068 ;;  tempb           6   21[COMRAM] struct RGB
  1069 ;;  tempa           6   15[COMRAM] struct RGB
  1070 ;;  buf             2   13[COMRAM] int 
  1071 ;;  buf             2   11[COMRAM] int 
  1072 ;; Return value:  Size  Location     Type
  1073 ;;                  1    wreg      void 
  1074 ;; Registers used:
  1075 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  1076 ;; Tracked objects:
  1077 ;;		On entry : 0/0
  1078 ;;		On exit  : 0/0
  1079 ;;		Unchanged: 0/0
  1080 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1081 ;;      Params:         2       0       0       0       0       0       0
  1082 ;;      Locals:        28       0       0       0       0       0       0
  1083 ;;      Temps:          1       0       0       0       0       0       0
  1084 ;;      Totals:        31       0       0       0       0       0       0
  1085 ;;Total ram usage:       31 bytes
  1086 ;; Hardware stack levels used:    1
  1087 ;; This function calls:
  1088 ;;		Nothing
  1089 ;; This function is called by:
  1090 ;;		_main
  1091 ;; This function uses a non-reentrant model
  1092 ;;
  1093                           
  1094                           	psect	text1
  1095  007266                     __ptext1:
  1096                           	opt callstack 0
  1097  007266                     _rotate_top:
  1098                           	opt callstack 30
  1099  007266                     
  1100                           ;newmain.c: 230:     if(val > 3){
  1101  007266  BE0A               	btfsc	(rotate_top@val+1)^0,7,c
  1102  007268  EF3F  F039         	goto	u1111
  1103  00726C  500A               	movf	(rotate_top@val+1)^0,w,c
  1104  00726E  E109               	bnz	u1110
  1105  007270  0E04               	movlw	4
  1106  007272  5C09               	subwf	rotate_top@val^0,w,c
  1107  007274  A0D8               	btfss	status,0,c
  1108  007276  EF3F  F039         	goto	u1111
  1109  00727A  EF41  F039         	goto	u1110
  1110  00727E                     u1111:
  1111  00727E  EF45  F039         	goto	l2178
  1112  007282                     u1110:
  1113  007282                     
  1114                           ;newmain.c: 231:         val = 3;
  1115  007282  0E00               	movlw	0
  1116  007284  6E0A               	movwf	(rotate_top@val+1)^0,c
  1117  007286  0E03               	movlw	3
  1118  007288  6E09               	movwf	rotate_top@val^0,c
  1119  00728A                     l2178:
  1120                           
  1121                           ;newmain.c: 233:     if(val>original[0]){
  1122  00728A  5009               	movf	rotate_top@val^0,w,c
  1123  00728C  5C3F               	subwf	_original^0,w,c	;volatile
  1124  00728E  5040               	movf	(_original+1)^0,w,c	;volatile
  1125  007290  0A80               	xorlw	128
  1126  007292  6E0B               	movwf	??_rotate_top^0,c
  1127  007294  500A               	movf	(rotate_top@val+1)^0,w,c
  1128  007296  0A80               	xorlw	128
  1129  007298  580B               	subwfb	??_rotate_top^0,w,c
  1130  00729A  B0D8               	btfsc	status,0,c
  1131  00729C  EF52  F039         	goto	u1121
  1132  0072A0  EF54  F039         	goto	u1120
  1133  0072A4                     u1121:
  1134  0072A4  EFE0  F039         	goto	l2236
  1135  0072A8                     u1120:
  1136  0072A8                     
  1137                           ;newmain.c: 234:         int buf = val-original[0];
  1138  0072A8  503F               	movf	_original^0,w,c	;volatile
  1139  0072AA  5C09               	subwf	rotate_top@val^0,w,c
  1140  0072AC  6E0C               	movwf	rotate_top@buf^0,c
  1141  0072AE  5040               	movf	(_original+1)^0,w,c	;volatile
  1142  0072B0  580A               	subwfb	(rotate_top@val+1)^0,w,c
  1143  0072B2  6E0D               	movwf	(rotate_top@buf+1)^0,c
  1144                           
  1145                           ;newmain.c: 235:         while(buf>0){
  1146  0072B4  EFD1  F039         	goto	l2234
  1147  0072B8                     l2182:
  1148                           
  1149                           ;newmain.c: 236:             rgbarray tempa = rgb[0];
  1150  0072B8  EE21  F000         	lfsr	2,_rgb	;volatile
  1151  0072BC  EE10  F010         	lfsr	1,rotate_top@tempa
  1152  0072C0  0E05               	movlw	5
  1153  0072C2                     u1131:
  1154  0072C2  CFDB FFE3          	movff	plusw2,plusw1
  1155  0072C6  06E8               	decf	wreg,f,c
  1156  0072C8  E2FC               	bc	u1131
  1157                           
  1158                           ;newmain.c: 237:             rgbarray tempb = rgb[3];
  1159  0072CA  EE21  F012         	lfsr	2,_rgb+18	;volatile
  1160  0072CE  EE10  F016         	lfsr	1,rotate_top@tempb
  1161  0072D2  0E05               	movlw	5
  1162  0072D4                     u1141:
  1163  0072D4  CFDB FFE3          	movff	plusw2,plusw1
  1164  0072D8  06E8               	decf	wreg,f,c
  1165  0072DA  E2FC               	bc	u1141
  1166  0072DC                     
  1167                           ;newmain.c: 238:             rgb[0].r = rgb[17].r;rgb[3].r = rgb[16].r;
  1168  0072DC  C166  F100         	movff	_rgb+102,_rgb	;volatile
  1169  0072E0  C167  F101         	movff	_rgb+103,_rgb+1	;volatile
  1170  0072E4  C160  F112         	movff	_rgb+96,_rgb+18	;volatile
  1171  0072E8  C161  F113         	movff	_rgb+97,_rgb+19	;volatile
  1172  0072EC                     
  1173                           ;newmain.c: 239:             rgb[0].g = rgb[17].g;rgb[3].g = rgb[16].g;
  1174  0072EC  C168  F102         	movff	_rgb+104,_rgb+2	;volatile
  1175  0072F0  C169  F103         	movff	_rgb+105,_rgb+3	;volatile
  1176  0072F4  C162  F114         	movff	_rgb+98,_rgb+20	;volatile
  1177  0072F8  C163  F115         	movff	_rgb+99,_rgb+21	;volatile
  1178  0072FC                     
  1179                           ;newmain.c: 240:             rgb[0].b = rgb[17].b;rgb[3].b = rgb[16].b;
  1180  0072FC  C16A  F104         	movff	_rgb+106,_rgb+4	;volatile
  1181  007300  C16B  F105         	movff	_rgb+107,_rgb+5	;volatile
  1182  007304  C164  F116         	movff	_rgb+100,_rgb+22	;volatile
  1183  007308  C165  F117         	movff	_rgb+101,_rgb+23	;volatile
  1184  00730C                     
  1185                           ;newmain.c: 241:             rgb[17].r = rgb[10].r;rgb[16].r = rgb[9].r;
  1186  00730C  C13C  F166         	movff	_rgb+60,_rgb+102	;volatile
  1187  007310  C13D  F167         	movff	_rgb+61,_rgb+103	;volatile
  1188  007314  C136  F160         	movff	_rgb+54,_rgb+96	;volatile
  1189  007318  C137  F161         	movff	_rgb+55,_rgb+97	;volatile
  1190  00731C                     
  1191                           ;newmain.c: 242:             rgb[17].g = rgb[10].g;rgb[16].g = rgb[9].g;
  1192  00731C  C13E  F168         	movff	_rgb+62,_rgb+104	;volatile
  1193  007320  C13F  F169         	movff	_rgb+63,_rgb+105	;volatile
  1194  007324  C138  F162         	movff	_rgb+56,_rgb+98	;volatile
  1195  007328  C139  F163         	movff	_rgb+57,_rgb+99	;volatile
  1196  00732C                     
  1197                           ;newmain.c: 243:             rgb[17].b = rgb[10].b;rgb[16].b = rgb[9].b;
  1198  00732C  C140  F16A         	movff	_rgb+64,_rgb+106	;volatile
  1199  007330  C141  F16B         	movff	_rgb+65,_rgb+107	;volatile
  1200  007334  C13A  F164         	movff	_rgb+58,_rgb+100	;volatile
  1201  007338  C13B  F165         	movff	_rgb+59,_rgb+101	;volatile
  1202  00733C                     
  1203                           ;newmain.c: 244:             rgb[10].r = rgb[23].r;rgb[9].r = rgb[22].r;
  1204  00733C  C18A  F13C         	movff	_rgb+138,_rgb+60	;volatile
  1205  007340  C18B  F13D         	movff	_rgb+139,_rgb+61	;volatile
  1206  007344  C184  F136         	movff	_rgb+132,_rgb+54	;volatile
  1207  007348  C185  F137         	movff	_rgb+133,_rgb+55	;volatile
  1208  00734C                     
  1209                           ;newmain.c: 245:             rgb[10].g = rgb[23].g;rgb[9].g = rgb[22].g;
  1210  00734C  C18C  F13E         	movff	_rgb+140,_rgb+62	;volatile
  1211  007350  C18D  F13F         	movff	_rgb+141,_rgb+63	;volatile
  1212  007354  C186  F138         	movff	_rgb+134,_rgb+56	;volatile
  1213  007358  C187  F139         	movff	_rgb+135,_rgb+57	;volatile
  1214  00735C                     
  1215                           ;newmain.c: 246:             rgb[10].b = rgb[23].b;rgb[9].b = rgb[22].b;
  1216  00735C  C18E  F140         	movff	_rgb+142,_rgb+64	;volatile
  1217  007360  C18F  F141         	movff	_rgb+143,_rgb+65	;volatile
  1218  007364  C188  F13A         	movff	_rgb+136,_rgb+58	;volatile
  1219  007368  C189  F13B         	movff	_rgb+137,_rgb+59	;volatile
  1220  00736C                     
  1221                           ;newmain.c: 247:             rgb[23].r = tempa.r;rgb[22].r = tempb.r;
  1222  00736C  C010  F18A         	movff	rotate_top@tempa,_rgb+138	;volatile
  1223  007370  C011  F18B         	movff	rotate_top@tempa+1,_rgb+139	;volatile
  1224  007374  C016  F184         	movff	rotate_top@tempb,_rgb+132	;volatile
  1225  007378  C017  F185         	movff	rotate_top@tempb+1,_rgb+133	;volatile
  1226  00737C                     
  1227                           ;newmain.c: 248:             rgb[23].g = tempa.g;rgb[22].g = tempb.g;
  1228  00737C  C012  F18C         	movff	rotate_top@tempa+2,_rgb+140	;volatile
  1229  007380  C013  F18D         	movff	rotate_top@tempa+3,_rgb+141	;volatile
  1230  007384  C018  F186         	movff	rotate_top@tempb+2,_rgb+134	;volatile
  1231  007388  C019  F187         	movff	rotate_top@tempb+3,_rgb+135	;volatile
  1232  00738C                     
  1233                           ;newmain.c: 249:             rgb[23].b = tempa.b;rgb[22].b = tempb.b;
  1234  00738C  C014  F18E         	movff	rotate_top@tempa+4,_rgb+142	;volatile
  1235  007390  C015  F18F         	movff	rotate_top@tempa+5,_rgb+143	;volatile
  1236  007394  C01A  F188         	movff	rotate_top@tempb+4,_rgb+136	;volatile
  1237  007398  C01B  F189         	movff	rotate_top@tempb+5,_rgb+137	;volatile
  1238  00739C                     
  1239                           ;newmain.c: 250:             buf--;
  1240  00739C  060C               	decf	rotate_top@buf^0,f,c
  1241  00739E  A0D8               	btfss	status,0,c
  1242  0073A0  060D               	decf	(rotate_top@buf+1)^0,f,c
  1243  0073A2                     l2234:
  1244                           
  1245                           ;newmain.c: 235:         while(buf>0){
  1246  0073A2  BE0D               	btfsc	(rotate_top@buf+1)^0,7,c
  1247  0073A4  EFDE  F039         	goto	u1150
  1248  0073A8  500D               	movf	(rotate_top@buf+1)^0,w,c
  1249  0073AA  E106               	bnz	u1151
  1250  0073AC  040C               	decf	rotate_top@buf^0,w,c
  1251  0073AE  B0D8               	btfsc	status,0,c
  1252  0073B0  EFDC  F039         	goto	u1151
  1253  0073B4  EFDE  F039         	goto	u1150
  1254  0073B8                     u1151:
  1255  0073B8  EF5C  F039         	goto	l2182
  1256  0073BC                     u1150:
  1257  0073BC  EF79  F03A         	goto	l97
  1258  0073C0                     l2236:
  1259  0073C0  503F               	movf	_original^0,w,c	;volatile
  1260  0073C2  5C09               	subwf	rotate_top@val^0,w,c
  1261  0073C4  500A               	movf	(rotate_top@val+1)^0,w,c
  1262  0073C6  0A80               	xorlw	128
  1263  0073C8  6E0B               	movwf	??_rotate_top^0,c
  1264  0073CA  5040               	movf	(_original+1)^0,w,c	;volatile
  1265  0073CC  0A80               	xorlw	128
  1266  0073CE  580B               	subwfb	??_rotate_top^0,w,c
  1267  0073D0  B0D8               	btfsc	status,0,c
  1268  0073D2  EFED  F039         	goto	u1161
  1269  0073D6  EFEF  F039         	goto	u1160
  1270  0073DA                     u1161:
  1271  0073DA  EF79  F03A         	goto	l97
  1272  0073DE                     u1160:
  1273  0073DE                     
  1274                           ;newmain.c: 254:         int buf = original[0]-val;
  1275  0073DE  5009               	movf	rotate_top@val^0,w,c
  1276  0073E0  5C3F               	subwf	_original^0,w,c	;volatile
  1277  0073E2  6E0E               	movwf	rotate_top@buf_295^0,c
  1278  0073E4  500A               	movf	(rotate_top@val+1)^0,w,c
  1279  0073E6  5840               	subwfb	(_original+1)^0,w,c	;volatile
  1280  0073E8  6E0F               	movwf	(rotate_top@buf_295+1)^0,c
  1281                           
  1282                           ;newmain.c: 255:         while(buf>0){
  1283  0073EA  EF6C  F03A         	goto	l2292
  1284  0073EE                     l2240:
  1285                           
  1286                           ;newmain.c: 256:             rgbarray tempc = rgb[0];
  1287  0073EE  EE21  F000         	lfsr	2,_rgb	;volatile
  1288  0073F2  EE10  F01C         	lfsr	1,rotate_top@tempc
  1289  0073F6  0E05               	movlw	5
  1290  0073F8                     u1171:
  1291  0073F8  CFDB FFE3          	movff	plusw2,plusw1
  1292  0073FC  06E8               	decf	wreg,f,c
  1293  0073FE  E2FC               	bc	u1171
  1294                           
  1295                           ;newmain.c: 257:             rgbarray tempd = rgb[3];
  1296  007400  EE21  F012         	lfsr	2,_rgb+18	;volatile
  1297  007404  EE10  F022         	lfsr	1,rotate_top@tempd
  1298  007408  0E05               	movlw	5
  1299  00740A                     u1181:
  1300  00740A  CFDB FFE3          	movff	plusw2,plusw1
  1301  00740E  06E8               	decf	wreg,f,c
  1302  007410  E2FC               	bc	u1181
  1303  007412                     
  1304                           ;newmain.c: 258:             rgb[0].r = rgb[23].r;rgb[3].r = rgb[22].r;
  1305  007412  C18A  F100         	movff	_rgb+138,_rgb	;volatile
  1306  007416  C18B  F101         	movff	_rgb+139,_rgb+1	;volatile
  1307  00741A  C184  F112         	movff	_rgb+132,_rgb+18	;volatile
  1308  00741E  C185  F113         	movff	_rgb+133,_rgb+19	;volatile
  1309  007422                     
  1310                           ;newmain.c: 259:             rgb[0].g = rgb[23].g;rgb[3].g = rgb[22].g;
  1311  007422  C18C  F102         	movff	_rgb+140,_rgb+2	;volatile
  1312  007426  C18D  F103         	movff	_rgb+141,_rgb+3	;volatile
  1313  00742A  C186  F114         	movff	_rgb+134,_rgb+20	;volatile
  1314  00742E  C187  F115         	movff	_rgb+135,_rgb+21	;volatile
  1315  007432                     
  1316                           ;newmain.c: 260:             rgb[0].b = rgb[23].b;rgb[3].b = rgb[22].b;
  1317  007432  C18E  F104         	movff	_rgb+142,_rgb+4	;volatile
  1318  007436  C18F  F105         	movff	_rgb+143,_rgb+5	;volatile
  1319  00743A  C188  F116         	movff	_rgb+136,_rgb+22	;volatile
  1320  00743E  C189  F117         	movff	_rgb+137,_rgb+23	;volatile
  1321  007442                     
  1322                           ;newmain.c: 261:             rgb[23].r = rgb[10].r;rgb[22].r = rgb[9].r;
  1323  007442  C13C  F18A         	movff	_rgb+60,_rgb+138	;volatile
  1324  007446  C13D  F18B         	movff	_rgb+61,_rgb+139	;volatile
  1325  00744A  C136  F184         	movff	_rgb+54,_rgb+132	;volatile
  1326  00744E  C137  F185         	movff	_rgb+55,_rgb+133	;volatile
  1327  007452                     
  1328                           ;newmain.c: 262:             rgb[23].g = rgb[10].g;rgb[22].g = rgb[9].g;
  1329  007452  C13E  F18C         	movff	_rgb+62,_rgb+140	;volatile
  1330  007456  C13F  F18D         	movff	_rgb+63,_rgb+141	;volatile
  1331  00745A  C138  F186         	movff	_rgb+56,_rgb+134	;volatile
  1332  00745E  C139  F187         	movff	_rgb+57,_rgb+135	;volatile
  1333  007462                     
  1334                           ;newmain.c: 263:             rgb[23].b = rgb[10].b;rgb[22].b = rgb[9].b;
  1335  007462  C140  F18E         	movff	_rgb+64,_rgb+142	;volatile
  1336  007466  C141  F18F         	movff	_rgb+65,_rgb+143	;volatile
  1337  00746A  C13A  F188         	movff	_rgb+58,_rgb+136	;volatile
  1338  00746E  C13B  F189         	movff	_rgb+59,_rgb+137	;volatile
  1339  007472                     
  1340                           ;newmain.c: 264:             rgb[10].r = rgb[17].r;rgb[9].r = rgb[16].r;
  1341  007472  C166  F13C         	movff	_rgb+102,_rgb+60	;volatile
  1342  007476  C167  F13D         	movff	_rgb+103,_rgb+61	;volatile
  1343  00747A  C160  F136         	movff	_rgb+96,_rgb+54	;volatile
  1344  00747E  C161  F137         	movff	_rgb+97,_rgb+55	;volatile
  1345  007482                     
  1346                           ;newmain.c: 265:             rgb[10].g = rgb[17].g;rgb[9].g = rgb[16].g;
  1347  007482  C168  F13E         	movff	_rgb+104,_rgb+62	;volatile
  1348  007486  C169  F13F         	movff	_rgb+105,_rgb+63	;volatile
  1349  00748A  C162  F138         	movff	_rgb+98,_rgb+56	;volatile
  1350  00748E  C163  F139         	movff	_rgb+99,_rgb+57	;volatile
  1351  007492                     
  1352                           ;newmain.c: 266:             rgb[10].b = rgb[17].b;rgb[9].b = rgb[16].b;
  1353  007492  C16A  F140         	movff	_rgb+106,_rgb+64	;volatile
  1354  007496  C16B  F141         	movff	_rgb+107,_rgb+65	;volatile
  1355  00749A  C164  F13A         	movff	_rgb+100,_rgb+58	;volatile
  1356  00749E  C165  F13B         	movff	_rgb+101,_rgb+59	;volatile
  1357  0074A2                     
  1358                           ;newmain.c: 267:             rgb[17].r = tempc.r;rgb[16].r = tempd.r;
  1359  0074A2  C01C  F166         	movff	rotate_top@tempc,_rgb+102	;volatile
  1360  0074A6  C01D  F167         	movff	rotate_top@tempc+1,_rgb+103	;volatile
  1361  0074AA  C022  F160         	movff	rotate_top@tempd,_rgb+96	;volatile
  1362  0074AE  C023  F161         	movff	rotate_top@tempd+1,_rgb+97	;volatile
  1363  0074B2                     
  1364                           ;newmain.c: 268:             rgb[17].g = tempc.g;rgb[16].g = tempd.g;
  1365  0074B2  C01E  F168         	movff	rotate_top@tempc+2,_rgb+104	;volatile
  1366  0074B6  C01F  F169         	movff	rotate_top@tempc+3,_rgb+105	;volatile
  1367  0074BA  C024  F162         	movff	rotate_top@tempd+2,_rgb+98	;volatile
  1368  0074BE  C025  F163         	movff	rotate_top@tempd+3,_rgb+99	;volatile
  1369  0074C2                     
  1370                           ;newmain.c: 269:             rgb[17].b = tempc.b;rgb[16].b = tempd.b;
  1371  0074C2  C020  F16A         	movff	rotate_top@tempc+4,_rgb+106	;volatile
  1372  0074C6  C021  F16B         	movff	rotate_top@tempc+5,_rgb+107	;volatile
  1373  0074CA  C026  F164         	movff	rotate_top@tempd+4,_rgb+100	;volatile
  1374  0074CE  C027  F165         	movff	rotate_top@tempd+5,_rgb+101	;volatile
  1375  0074D2                     
  1376                           ;newmain.c: 270:             buf--;
  1377  0074D2  060E               	decf	rotate_top@buf_295^0,f,c
  1378  0074D4  A0D8               	btfss	status,0,c
  1379  0074D6  060F               	decf	(rotate_top@buf_295+1)^0,f,c
  1380  0074D8                     l2292:
  1381                           
  1382                           ;newmain.c: 255:         while(buf>0){
  1383  0074D8  BE0F               	btfsc	(rotate_top@buf_295+1)^0,7,c
  1384  0074DA  EF79  F03A         	goto	u1190
  1385  0074DE  500F               	movf	(rotate_top@buf_295+1)^0,w,c
  1386  0074E0  E106               	bnz	u1191
  1387  0074E2  040E               	decf	rotate_top@buf_295^0,w,c
  1388  0074E4  B0D8               	btfsc	status,0,c
  1389  0074E6  EF77  F03A         	goto	u1191
  1390  0074EA  EF79  F03A         	goto	u1190
  1391  0074EE                     u1191:
  1392  0074EE  EFF7  F039         	goto	l2240
  1393  0074F2                     u1190:
  1394  0074F2                     l97:
  1395  0074F2  0012               	return		;funcret
  1396  0074F4                     __end_of_rotate_top:
  1397                           	opt callstack 0
  1398                           
  1399 ;; *************** function _rotate_sidetop *****************
  1400 ;; Defined at:
  1401 ;;		line 322 in file "newmain.c"
  1402 ;; Parameters:    Size  Location     Type
  1403 ;;  val             2    8[COMRAM] int 
  1404 ;; Auto vars:     Size  Location     Type
  1405 ;;  tempd           6   33[COMRAM] struct RGB
  1406 ;;  tempc           6   27[COMRAM] struct RGB
  1407 ;;  tempb           6   21[COMRAM] struct RGB
  1408 ;;  tempa           6   15[COMRAM] struct RGB
  1409 ;;  buf             2   13[COMRAM] int 
  1410 ;;  buf             2   11[COMRAM] int 
  1411 ;; Return value:  Size  Location     Type
  1412 ;;                  1    wreg      void 
  1413 ;; Registers used:
  1414 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  1415 ;; Tracked objects:
  1416 ;;		On entry : 0/0
  1417 ;;		On exit  : 0/0
  1418 ;;		Unchanged: 0/0
  1419 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1420 ;;      Params:         2       0       0       0       0       0       0
  1421 ;;      Locals:        28       0       0       0       0       0       0
  1422 ;;      Temps:          1       0       0       0       0       0       0
  1423 ;;      Totals:        31       0       0       0       0       0       0
  1424 ;;Total ram usage:       31 bytes
  1425 ;; Hardware stack levels used:    1
  1426 ;; This function calls:
  1427 ;;		Nothing
  1428 ;; This function is called by:
  1429 ;;		_main
  1430 ;; This function uses a non-reentrant model
  1431 ;;
  1432                           
  1433                           	psect	text2
  1434  006FD8                     __ptext2:
  1435                           	opt callstack 0
  1436  006FD8                     _rotate_sidetop:
  1437                           	opt callstack 30
  1438  006FD8                     
  1439                           ;newmain.c: 324:     if(val > 3){
  1440  006FD8  BE0A               	btfsc	(rotate_sidetop@val+1)^0,7,c
  1441  006FDA  EFF8  F037         	goto	u1291
  1442  006FDE  500A               	movf	(rotate_sidetop@val+1)^0,w,c
  1443  006FE0  E109               	bnz	u1290
  1444  006FE2  0E04               	movlw	4
  1445  006FE4  5C09               	subwf	rotate_sidetop@val^0,w,c
  1446  006FE6  A0D8               	btfss	status,0,c
  1447  006FE8  EFF8  F037         	goto	u1291
  1448  006FEC  EFFA  F037         	goto	u1290
  1449  006FF0                     u1291:
  1450  006FF0  EFFE  F037         	goto	l2418
  1451  006FF4                     u1290:
  1452  006FF4                     
  1453                           ;newmain.c: 325:         val = 3;
  1454  006FF4  0E00               	movlw	0
  1455  006FF6  6E0A               	movwf	(rotate_sidetop@val+1)^0,c
  1456  006FF8  0E03               	movlw	3
  1457  006FFA  6E09               	movwf	rotate_sidetop@val^0,c
  1458  006FFC                     l2418:
  1459                           
  1460                           ;newmain.c: 327:     if(val>original[4]){
  1461  006FFC  5009               	movf	rotate_sidetop@val^0,w,c
  1462  006FFE  5C47               	subwf	(_original+8)^0,w,c	;volatile
  1463  007000  5048               	movf	(_original+9)^0,w,c	;volatile
  1464  007002  0A80               	xorlw	128
  1465  007004  6E0B               	movwf	??_rotate_sidetop^0,c
  1466  007006  500A               	movf	(rotate_sidetop@val+1)^0,w,c
  1467  007008  0A80               	xorlw	128
  1468  00700A  580B               	subwfb	??_rotate_sidetop^0,w,c
  1469  00700C  B0D8               	btfsc	status,0,c
  1470  00700E  EF0B  F038         	goto	u1301
  1471  007012  EF0D  F038         	goto	u1300
  1472  007016                     u1301:
  1473  007016  EF99  F038         	goto	l2476
  1474  00701A                     u1300:
  1475  00701A                     
  1476                           ;newmain.c: 328:         int buf = val-original[4];
  1477  00701A  5047               	movf	(_original+8)^0,w,c	;volatile
  1478  00701C  5C09               	subwf	rotate_sidetop@val^0,w,c
  1479  00701E  6E0C               	movwf	rotate_sidetop@buf^0,c
  1480  007020  5048               	movf	(_original+9)^0,w,c	;volatile
  1481  007022  580A               	subwfb	(rotate_sidetop@val+1)^0,w,c
  1482  007024  6E0D               	movwf	(rotate_sidetop@buf+1)^0,c
  1483                           
  1484                           ;newmain.c: 329:         while(buf>0){
  1485  007026  EF8A  F038         	goto	l2474
  1486  00702A                     l2422:
  1487                           
  1488                           ;newmain.c: 330:             rgbarray tempa = rgb[4];
  1489  00702A  EE21  F018         	lfsr	2,_rgb+24	;volatile
  1490  00702E  EE10  F010         	lfsr	1,rotate_sidetop@tempa
  1491  007032  0E05               	movlw	5
  1492  007034                     u1311:
  1493  007034  CFDB FFE3          	movff	plusw2,plusw1
  1494  007038  06E8               	decf	wreg,f,c
  1495  00703A  E2FC               	bc	u1311
  1496                           
  1497                           ;newmain.c: 331:             rgbarray tempb = rgb[7];
  1498  00703C  EE21  F02A         	lfsr	2,_rgb+42	;volatile
  1499  007040  EE10  F016         	lfsr	1,rotate_sidetop@tempb
  1500  007044  0E05               	movlw	5
  1501  007046                     u1321:
  1502  007046  CFDB FFE3          	movff	plusw2,plusw1
  1503  00704A  06E8               	decf	wreg,f,c
  1504  00704C  E2FC               	bc	u1321
  1505  00704E                     
  1506                           ;newmain.c: 332:             rgb[4].r = rgb[16].r;rgb[7].r = rgb[19].r;
  1507  00704E  C160  F118         	movff	_rgb+96,_rgb+24	;volatile
  1508  007052  C161  F119         	movff	_rgb+97,_rgb+25	;volatile
  1509  007056  C172  F12A         	movff	_rgb+114,_rgb+42	;volatile
  1510  00705A  C173  F12B         	movff	_rgb+115,_rgb+43	;volatile
  1511  00705E                     
  1512                           ;newmain.c: 333:             rgb[4].g = rgb[16].g;rgb[7].g = rgb[19].g;
  1513  00705E  C162  F11A         	movff	_rgb+98,_rgb+26	;volatile
  1514  007062  C163  F11B         	movff	_rgb+99,_rgb+27	;volatile
  1515  007066  C174  F12C         	movff	_rgb+116,_rgb+44	;volatile
  1516  00706A  C175  F12D         	movff	_rgb+117,_rgb+45	;volatile
  1517  00706E                     
  1518                           ;newmain.c: 334:             rgb[4].b = rgb[16].b;rgb[7].b = rgb[19].b;
  1519  00706E  C164  F11C         	movff	_rgb+100,_rgb+28	;volatile
  1520  007072  C165  F11D         	movff	_rgb+101,_rgb+29	;volatile
  1521  007076  C176  F12E         	movff	_rgb+118,_rgb+46	;volatile
  1522  00707A  C177  F12F         	movff	_rgb+119,_rgb+47	;volatile
  1523  00707E                     
  1524                           ;newmain.c: 335:             rgb[16].r = rgb[14].r;rgb[19].r = rgb[13].r;
  1525  00707E  C154  F160         	movff	_rgb+84,_rgb+96	;volatile
  1526  007082  C155  F161         	movff	_rgb+85,_rgb+97	;volatile
  1527  007086  C14E  F172         	movff	_rgb+78,_rgb+114	;volatile
  1528  00708A  C14F  F173         	movff	_rgb+79,_rgb+115	;volatile
  1529  00708E                     
  1530                           ;newmain.c: 336:             rgb[16].g = rgb[14].g;rgb[19].g = rgb[13].g;
  1531  00708E  C156  F162         	movff	_rgb+86,_rgb+98	;volatile
  1532  007092  C157  F163         	movff	_rgb+87,_rgb+99	;volatile
  1533  007096  C150  F174         	movff	_rgb+80,_rgb+116	;volatile
  1534  00709A  C151  F175         	movff	_rgb+81,_rgb+117	;volatile
  1535  00709E                     
  1536                           ;newmain.c: 337:             rgb[16].b = rgb[14].b;rgb[19].b = rgb[13].b;
  1537  00709E  C158  F164         	movff	_rgb+88,_rgb+100	;volatile
  1538  0070A2  C159  F165         	movff	_rgb+89,_rgb+101	;volatile
  1539  0070A6  C152  F176         	movff	_rgb+82,_rgb+118	;volatile
  1540  0070AA  C153  F177         	movff	_rgb+83,_rgb+119	;volatile
  1541  0070AE                     
  1542                           ;newmain.c: 338:             rgb[14].r = rgb[20].r;rgb[13].r = rgb[23].r;
  1543  0070AE  C178  F154         	movff	_rgb+120,_rgb+84	;volatile
  1544  0070B2  C179  F155         	movff	_rgb+121,_rgb+85	;volatile
  1545  0070B6  C18A  F14E         	movff	_rgb+138,_rgb+78	;volatile
  1546  0070BA  C18B  F14F         	movff	_rgb+139,_rgb+79	;volatile
  1547  0070BE                     
  1548                           ;newmain.c: 339:             rgb[14].g = rgb[20].g;rgb[13].g = rgb[23].g;
  1549  0070BE  C17A  F156         	movff	_rgb+122,_rgb+86	;volatile
  1550  0070C2  C17B  F157         	movff	_rgb+123,_rgb+87	;volatile
  1551  0070C6  C18C  F150         	movff	_rgb+140,_rgb+80	;volatile
  1552  0070CA  C18D  F151         	movff	_rgb+141,_rgb+81	;volatile
  1553  0070CE                     
  1554                           ;newmain.c: 340:             rgb[14].b = rgb[20].b;rgb[13].b = rgb[23].b;
  1555  0070CE  C17C  F158         	movff	_rgb+124,_rgb+88	;volatile
  1556  0070D2  C17D  F159         	movff	_rgb+125,_rgb+89	;volatile
  1557  0070D6  C18E  F152         	movff	_rgb+142,_rgb+82	;volatile
  1558  0070DA  C18F  F153         	movff	_rgb+143,_rgb+83	;volatile
  1559  0070DE                     
  1560                           ;newmain.c: 341:             rgb[20].r = tempa.r;rgb[23].r = tempb.r;
  1561  0070DE  C010  F178         	movff	rotate_sidetop@tempa,_rgb+120	;volatile
  1562  0070E2  C011  F179         	movff	rotate_sidetop@tempa+1,_rgb+121	;volatile
  1563  0070E6  C016  F18A         	movff	rotate_sidetop@tempb,_rgb+138	;volatile
  1564  0070EA  C017  F18B         	movff	rotate_sidetop@tempb+1,_rgb+139	;volatile
  1565  0070EE                     
  1566                           ;newmain.c: 342:             rgb[20].g = tempa.g;rgb[23].g = tempb.g;
  1567  0070EE  C012  F17A         	movff	rotate_sidetop@tempa+2,_rgb+122	;volatile
  1568  0070F2  C013  F17B         	movff	rotate_sidetop@tempa+3,_rgb+123	;volatile
  1569  0070F6  C018  F18C         	movff	rotate_sidetop@tempb+2,_rgb+140	;volatile
  1570  0070FA  C019  F18D         	movff	rotate_sidetop@tempb+3,_rgb+141	;volatile
  1571  0070FE                     
  1572                           ;newmain.c: 343:             rgb[20].b = tempa.b;rgb[23].b = tempb.b;
  1573  0070FE  C014  F17C         	movff	rotate_sidetop@tempa+4,_rgb+124	;volatile
  1574  007102  C015  F17D         	movff	rotate_sidetop@tempa+5,_rgb+125	;volatile
  1575  007106  C01A  F18E         	movff	rotate_sidetop@tempb+4,_rgb+142	;volatile
  1576  00710A  C01B  F18F         	movff	rotate_sidetop@tempb+5,_rgb+143	;volatile
  1577  00710E                     
  1578                           ;newmain.c: 344:             buf--;
  1579  00710E  060C               	decf	rotate_sidetop@buf^0,f,c
  1580  007110  A0D8               	btfss	status,0,c
  1581  007112  060D               	decf	(rotate_sidetop@buf+1)^0,f,c
  1582  007114                     l2474:
  1583                           
  1584                           ;newmain.c: 329:         while(buf>0){
  1585  007114  BE0D               	btfsc	(rotate_sidetop@buf+1)^0,7,c
  1586  007116  EF97  F038         	goto	u1330
  1587  00711A  500D               	movf	(rotate_sidetop@buf+1)^0,w,c
  1588  00711C  E106               	bnz	u1331
  1589  00711E  040C               	decf	rotate_sidetop@buf^0,w,c
  1590  007120  B0D8               	btfsc	status,0,c
  1591  007122  EF95  F038         	goto	u1331
  1592  007126  EF97  F038         	goto	u1330
  1593  00712A                     u1331:
  1594  00712A  EF15  F038         	goto	l2422
  1595  00712E                     u1330:
  1596  00712E  EF32  F039         	goto	l123
  1597  007132                     l2476:
  1598  007132  5047               	movf	(_original+8)^0,w,c	;volatile
  1599  007134  5C09               	subwf	rotate_sidetop@val^0,w,c
  1600  007136  500A               	movf	(rotate_sidetop@val+1)^0,w,c
  1601  007138  0A80               	xorlw	128
  1602  00713A  6E0B               	movwf	??_rotate_sidetop^0,c
  1603  00713C  5048               	movf	(_original+9)^0,w,c	;volatile
  1604  00713E  0A80               	xorlw	128
  1605  007140  580B               	subwfb	??_rotate_sidetop^0,w,c
  1606  007142  B0D8               	btfsc	status,0,c
  1607  007144  EFA6  F038         	goto	u1341
  1608  007148  EFA8  F038         	goto	u1340
  1609  00714C                     u1341:
  1610  00714C  EF32  F039         	goto	l123
  1611  007150                     u1340:
  1612  007150                     
  1613                           ;newmain.c: 348:         int buf = original[4]-val;
  1614  007150  5009               	movf	rotate_sidetop@val^0,w,c
  1615  007152  5C47               	subwf	(_original+8)^0,w,c	;volatile
  1616  007154  6E0E               	movwf	rotate_sidetop@buf_335^0,c
  1617  007156  500A               	movf	(rotate_sidetop@val+1)^0,w,c
  1618  007158  5848               	subwfb	(_original+9)^0,w,c	;volatile
  1619  00715A  6E0F               	movwf	(rotate_sidetop@buf_335+1)^0,c
  1620                           
  1621                           ;newmain.c: 349:         while(buf>0){
  1622  00715C  EF25  F039         	goto	l2532
  1623  007160                     l2480:
  1624                           
  1625                           ;newmain.c: 350:             rgbarray tempc = rgb[4];
  1626  007160  EE21  F018         	lfsr	2,_rgb+24	;volatile
  1627  007164  EE10  F01C         	lfsr	1,rotate_sidetop@tempc
  1628  007168  0E05               	movlw	5
  1629  00716A                     u1351:
  1630  00716A  CFDB FFE3          	movff	plusw2,plusw1
  1631  00716E  06E8               	decf	wreg,f,c
  1632  007170  E2FC               	bc	u1351
  1633                           
  1634                           ;newmain.c: 351:             rgbarray tempd = rgb[7];
  1635  007172  EE21  F02A         	lfsr	2,_rgb+42	;volatile
  1636  007176  EE10  F022         	lfsr	1,rotate_sidetop@tempd
  1637  00717A  0E05               	movlw	5
  1638  00717C                     u1361:
  1639  00717C  CFDB FFE3          	movff	plusw2,plusw1
  1640  007180  06E8               	decf	wreg,f,c
  1641  007182  E2FC               	bc	u1361
  1642  007184                     
  1643                           ;newmain.c: 352:             rgb[4].r = rgb[20].r;rgb[7].r = rgb[23].r;
  1644  007184  C178  F118         	movff	_rgb+120,_rgb+24	;volatile
  1645  007188  C179  F119         	movff	_rgb+121,_rgb+25	;volatile
  1646  00718C  C18A  F12A         	movff	_rgb+138,_rgb+42	;volatile
  1647  007190  C18B  F12B         	movff	_rgb+139,_rgb+43	;volatile
  1648  007194                     
  1649                           ;newmain.c: 353:             rgb[4].g = rgb[20].g;rgb[7].g = rgb[23].g;
  1650  007194  C17A  F11A         	movff	_rgb+122,_rgb+26	;volatile
  1651  007198  C17B  F11B         	movff	_rgb+123,_rgb+27	;volatile
  1652  00719C  C18C  F12C         	movff	_rgb+140,_rgb+44	;volatile
  1653  0071A0  C18D  F12D         	movff	_rgb+141,_rgb+45	;volatile
  1654  0071A4                     
  1655                           ;newmain.c: 354:             rgb[4].b = rgb[20].b;rgb[7].b = rgb[23].b;
  1656  0071A4  C17C  F11C         	movff	_rgb+124,_rgb+28	;volatile
  1657  0071A8  C17D  F11D         	movff	_rgb+125,_rgb+29	;volatile
  1658  0071AC  C18E  F12E         	movff	_rgb+142,_rgb+46	;volatile
  1659  0071B0  C18F  F12F         	movff	_rgb+143,_rgb+47	;volatile
  1660  0071B4                     
  1661                           ;newmain.c: 355:             rgb[20].r = rgb[14].r;rgb[23].r = rgb[13].r;
  1662  0071B4  C154  F178         	movff	_rgb+84,_rgb+120	;volatile
  1663  0071B8  C155  F179         	movff	_rgb+85,_rgb+121	;volatile
  1664  0071BC  C14E  F18A         	movff	_rgb+78,_rgb+138	;volatile
  1665  0071C0  C14F  F18B         	movff	_rgb+79,_rgb+139	;volatile
  1666  0071C4                     
  1667                           ;newmain.c: 356:             rgb[20].g = rgb[14].g;rgb[23].g = rgb[13].g;
  1668  0071C4  C156  F17A         	movff	_rgb+86,_rgb+122	;volatile
  1669  0071C8  C157  F17B         	movff	_rgb+87,_rgb+123	;volatile
  1670  0071CC  C150  F18C         	movff	_rgb+80,_rgb+140	;volatile
  1671  0071D0  C151  F18D         	movff	_rgb+81,_rgb+141	;volatile
  1672  0071D4                     
  1673                           ;newmain.c: 357:             rgb[20].b = rgb[14].b;rgb[23].b = rgb[13].b;
  1674  0071D4  C158  F17C         	movff	_rgb+88,_rgb+124	;volatile
  1675  0071D8  C159  F17D         	movff	_rgb+89,_rgb+125	;volatile
  1676  0071DC  C152  F18E         	movff	_rgb+82,_rgb+142	;volatile
  1677  0071E0  C153  F18F         	movff	_rgb+83,_rgb+143	;volatile
  1678  0071E4                     
  1679                           ;newmain.c: 358:             rgb[14].r = rgb[16].r;rgb[13].r = rgb[19].r;
  1680  0071E4  C160  F154         	movff	_rgb+96,_rgb+84	;volatile
  1681  0071E8  C161  F155         	movff	_rgb+97,_rgb+85	;volatile
  1682  0071EC  C172  F14E         	movff	_rgb+114,_rgb+78	;volatile
  1683  0071F0  C173  F14F         	movff	_rgb+115,_rgb+79	;volatile
  1684  0071F4                     
  1685                           ;newmain.c: 359:             rgb[14].g = rgb[16].g;rgb[13].g = rgb[19].g;
  1686  0071F4  C162  F156         	movff	_rgb+98,_rgb+86	;volatile
  1687  0071F8  C163  F157         	movff	_rgb+99,_rgb+87	;volatile
  1688  0071FC  C174  F150         	movff	_rgb+116,_rgb+80	;volatile
  1689  007200  C175  F151         	movff	_rgb+117,_rgb+81	;volatile
  1690  007204                     
  1691                           ;newmain.c: 360:             rgb[14].b = rgb[16].b;rgb[13].b = rgb[19].b;
  1692  007204  C164  F158         	movff	_rgb+100,_rgb+88	;volatile
  1693  007208  C165  F159         	movff	_rgb+101,_rgb+89	;volatile
  1694  00720C  C176  F152         	movff	_rgb+118,_rgb+82	;volatile
  1695  007210  C177  F153         	movff	_rgb+119,_rgb+83	;volatile
  1696  007214                     
  1697                           ;newmain.c: 361:             rgb[16].r = tempc.r;rgb[19].r = tempd.r;
  1698  007214  C01C  F160         	movff	rotate_sidetop@tempc,_rgb+96	;volatile
  1699  007218  C01D  F161         	movff	rotate_sidetop@tempc+1,_rgb+97	;volatile
  1700  00721C  C022  F172         	movff	rotate_sidetop@tempd,_rgb+114	;volatile
  1701  007220  C023  F173         	movff	rotate_sidetop@tempd+1,_rgb+115	;volatile
  1702  007224                     
  1703                           ;newmain.c: 362:             rgb[16].g = tempc.g;rgb[19].g = tempd.g;
  1704  007224  C01E  F162         	movff	rotate_sidetop@tempc+2,_rgb+98	;volatile
  1705  007228  C01F  F163         	movff	rotate_sidetop@tempc+3,_rgb+99	;volatile
  1706  00722C  C024  F174         	movff	rotate_sidetop@tempd+2,_rgb+116	;volatile
  1707  007230  C025  F175         	movff	rotate_sidetop@tempd+3,_rgb+117	;volatile
  1708  007234                     
  1709                           ;newmain.c: 363:             rgb[16].b = tempc.b;rgb[19].b = tempd.b;
  1710  007234  C020  F164         	movff	rotate_sidetop@tempc+4,_rgb+100	;volatile
  1711  007238  C021  F165         	movff	rotate_sidetop@tempc+5,_rgb+101	;volatile
  1712  00723C  C026  F176         	movff	rotate_sidetop@tempd+4,_rgb+118	;volatile
  1713  007240  C027  F177         	movff	rotate_sidetop@tempd+5,_rgb+119	;volatile
  1714  007244                     
  1715                           ;newmain.c: 364:             buf--;
  1716  007244  060E               	decf	rotate_sidetop@buf_335^0,f,c
  1717  007246  A0D8               	btfss	status,0,c
  1718  007248  060F               	decf	(rotate_sidetop@buf_335+1)^0,f,c
  1719  00724A                     l2532:
  1720                           
  1721                           ;newmain.c: 349:         while(buf>0){
  1722  00724A  BE0F               	btfsc	(rotate_sidetop@buf_335+1)^0,7,c
  1723  00724C  EF32  F039         	goto	u1370
  1724  007250  500F               	movf	(rotate_sidetop@buf_335+1)^0,w,c
  1725  007252  E106               	bnz	u1371
  1726  007254  040E               	decf	rotate_sidetop@buf_335^0,w,c
  1727  007256  B0D8               	btfsc	status,0,c
  1728  007258  EF30  F039         	goto	u1371
  1729  00725C  EF32  F039         	goto	u1370
  1730  007260                     u1371:
  1731  007260  EFB0  F038         	goto	l2480
  1732  007264                     u1370:
  1733  007264                     l123:
  1734  007264  0012               	return		;funcret
  1735  007266                     __end_of_rotate_sidetop:
  1736                           	opt callstack 0
  1737                           
  1738 ;; *************** function _rotate_sidebot *****************
  1739 ;; Defined at:
  1740 ;;		line 369 in file "newmain.c"
  1741 ;; Parameters:    Size  Location     Type
  1742 ;;  val             2    8[COMRAM] int 
  1743 ;; Auto vars:     Size  Location     Type
  1744 ;;  tempd           6   33[COMRAM] struct RGB
  1745 ;;  tempc           6   27[COMRAM] struct RGB
  1746 ;;  tempb           6   21[COMRAM] struct RGB
  1747 ;;  tempa           6   15[COMRAM] struct RGB
  1748 ;;  buf             2   13[COMRAM] int 
  1749 ;;  buf             2   11[COMRAM] int 
  1750 ;; Return value:  Size  Location     Type
  1751 ;;                  1    wreg      void 
  1752 ;; Registers used:
  1753 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  1754 ;; Tracked objects:
  1755 ;;		On entry : 0/0
  1756 ;;		On exit  : 0/0
  1757 ;;		Unchanged: 0/0
  1758 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1759 ;;      Params:         2       0       0       0       0       0       0
  1760 ;;      Locals:        28       0       0       0       0       0       0
  1761 ;;      Temps:          1       0       0       0       0       0       0
  1762 ;;      Totals:        31       0       0       0       0       0       0
  1763 ;;Total ram usage:       31 bytes
  1764 ;; Hardware stack levels used:    1
  1765 ;; This function calls:
  1766 ;;		Nothing
  1767 ;; This function is called by:
  1768 ;;		_main
  1769 ;; This function uses a non-reentrant model
  1770 ;;
  1771                           
  1772                           	psect	text3
  1773  006D4A                     __ptext3:
  1774                           	opt callstack 0
  1775  006D4A                     _rotate_sidebot:
  1776                           	opt callstack 30
  1777  006D4A                     
  1778                           ;newmain.c: 371:     if(val > 3){
  1779  006D4A  BE0A               	btfsc	(rotate_sidebot@val+1)^0,7,c
  1780  006D4C  EFB1  F036         	goto	u1381
  1781  006D50  500A               	movf	(rotate_sidebot@val+1)^0,w,c
  1782  006D52  E109               	bnz	u1380
  1783  006D54  0E04               	movlw	4
  1784  006D56  5C09               	subwf	rotate_sidebot@val^0,w,c
  1785  006D58  A0D8               	btfss	status,0,c
  1786  006D5A  EFB1  F036         	goto	u1381
  1787  006D5E  EFB3  F036         	goto	u1380
  1788  006D62                     u1381:
  1789  006D62  EFB7  F036         	goto	l2538
  1790  006D66                     u1380:
  1791  006D66                     
  1792                           ;newmain.c: 372:         val = 3;
  1793  006D66  0E00               	movlw	0
  1794  006D68  6E0A               	movwf	(rotate_sidebot@val+1)^0,c
  1795  006D6A  0E03               	movlw	3
  1796  006D6C  6E09               	movwf	rotate_sidebot@val^0,c
  1797  006D6E                     l2538:
  1798                           
  1799                           ;newmain.c: 374:     if(val>original[5]){
  1800  006D6E  5009               	movf	rotate_sidebot@val^0,w,c
  1801  006D70  5C49               	subwf	(_original+10)^0,w,c	;volatile
  1802  006D72  504A               	movf	(_original+11)^0,w,c	;volatile
  1803  006D74  0A80               	xorlw	128
  1804  006D76  6E0B               	movwf	??_rotate_sidebot^0,c
  1805  006D78  500A               	movf	(rotate_sidebot@val+1)^0,w,c
  1806  006D7A  0A80               	xorlw	128
  1807  006D7C  580B               	subwfb	??_rotate_sidebot^0,w,c
  1808  006D7E  B0D8               	btfsc	status,0,c
  1809  006D80  EFC4  F036         	goto	u1391
  1810  006D84  EFC6  F036         	goto	u1390
  1811  006D88                     u1391:
  1812  006D88  EF52  F037         	goto	l2596
  1813  006D8C                     u1390:
  1814  006D8C                     
  1815                           ;newmain.c: 375:         int buf = val-original[5];
  1816  006D8C  5049               	movf	(_original+10)^0,w,c	;volatile
  1817  006D8E  5C09               	subwf	rotate_sidebot@val^0,w,c
  1818  006D90  6E0C               	movwf	rotate_sidebot@buf^0,c
  1819  006D92  504A               	movf	(_original+11)^0,w,c	;volatile
  1820  006D94  580A               	subwfb	(rotate_sidebot@val+1)^0,w,c
  1821  006D96  6E0D               	movwf	(rotate_sidebot@buf+1)^0,c
  1822                           
  1823                           ;newmain.c: 376:         while(buf>0){
  1824  006D98  EF43  F037         	goto	l2594
  1825  006D9C                     l2542:
  1826                           
  1827                           ;newmain.c: 377:             rgbarray tempa = rgb[5];
  1828  006D9C  EE21  F01E         	lfsr	2,_rgb+30	;volatile
  1829  006DA0  EE10  F010         	lfsr	1,rotate_sidebot@tempa
  1830  006DA4  0E05               	movlw	5
  1831  006DA6                     u1401:
  1832  006DA6  CFDB FFE3          	movff	plusw2,plusw1
  1833  006DAA  06E8               	decf	wreg,f,c
  1834  006DAC  E2FC               	bc	u1401
  1835                           
  1836                           ;newmain.c: 378:             rgbarray tempb = rgb[6];
  1837  006DAE  EE21  F024         	lfsr	2,_rgb+36	;volatile
  1838  006DB2  EE10  F016         	lfsr	1,rotate_sidebot@tempb
  1839  006DB6  0E05               	movlw	5
  1840  006DB8                     u1411:
  1841  006DB8  CFDB FFE3          	movff	plusw2,plusw1
  1842  006DBC  06E8               	decf	wreg,f,c
  1843  006DBE  E2FC               	bc	u1411
  1844  006DC0                     
  1845                           ;newmain.c: 379:             rgb[5].r = rgb[17].r;rgb[6].r = rgb[18].r;
  1846  006DC0  C166  F11E         	movff	_rgb+102,_rgb+30	;volatile
  1847  006DC4  C167  F11F         	movff	_rgb+103,_rgb+31	;volatile
  1848  006DC8  C16C  F124         	movff	_rgb+108,_rgb+36	;volatile
  1849  006DCC  C16D  F125         	movff	_rgb+109,_rgb+37	;volatile
  1850  006DD0                     
  1851                           ;newmain.c: 380:             rgb[5].g = rgb[17].g;rgb[6].g = rgb[18].g;
  1852  006DD0  C168  F120         	movff	_rgb+104,_rgb+32	;volatile
  1853  006DD4  C169  F121         	movff	_rgb+105,_rgb+33	;volatile
  1854  006DD8  C16E  F126         	movff	_rgb+110,_rgb+38	;volatile
  1855  006DDC  C16F  F127         	movff	_rgb+111,_rgb+39	;volatile
  1856  006DE0                     
  1857                           ;newmain.c: 381:             rgb[5].b = rgb[17].b;rgb[6].b = rgb[18].b;
  1858  006DE0  C16A  F122         	movff	_rgb+106,_rgb+34	;volatile
  1859  006DE4  C16B  F123         	movff	_rgb+107,_rgb+35	;volatile
  1860  006DE8  C170  F128         	movff	_rgb+112,_rgb+40	;volatile
  1861  006DEC  C171  F129         	movff	_rgb+113,_rgb+41	;volatile
  1862  006DF0                     
  1863                           ;newmain.c: 382:             rgb[17].r = rgb[15].r;rgb[18].r = rgb[12].r;
  1864  006DF0  C15A  F166         	movff	_rgb+90,_rgb+102	;volatile
  1865  006DF4  C15B  F167         	movff	_rgb+91,_rgb+103	;volatile
  1866  006DF8  C148  F16C         	movff	_rgb+72,_rgb+108	;volatile
  1867  006DFC  C149  F16D         	movff	_rgb+73,_rgb+109	;volatile
  1868  006E00                     
  1869                           ;newmain.c: 383:             rgb[17].g = rgb[15].g;rgb[18].g = rgb[12].g;
  1870  006E00  C15C  F168         	movff	_rgb+92,_rgb+104	;volatile
  1871  006E04  C15D  F169         	movff	_rgb+93,_rgb+105	;volatile
  1872  006E08  C14A  F16E         	movff	_rgb+74,_rgb+110	;volatile
  1873  006E0C  C14B  F16F         	movff	_rgb+75,_rgb+111	;volatile
  1874  006E10                     
  1875                           ;newmain.c: 384:             rgb[17].b = rgb[15].b;rgb[18].b = rgb[12].b;
  1876  006E10  C15E  F16A         	movff	_rgb+94,_rgb+106	;volatile
  1877  006E14  C15F  F16B         	movff	_rgb+95,_rgb+107	;volatile
  1878  006E18  C14C  F170         	movff	_rgb+76,_rgb+112	;volatile
  1879  006E1C  C14D  F171         	movff	_rgb+77,_rgb+113	;volatile
  1880  006E20                     
  1881                           ;newmain.c: 385:             rgb[15].r = rgb[21].r;rgb[12].r = rgb[22].r;
  1882  006E20  C17E  F15A         	movff	_rgb+126,_rgb+90	;volatile
  1883  006E24  C17F  F15B         	movff	_rgb+127,_rgb+91	;volatile
  1884  006E28  C184  F148         	movff	_rgb+132,_rgb+72	;volatile
  1885  006E2C  C185  F149         	movff	_rgb+133,_rgb+73	;volatile
  1886  006E30                     
  1887                           ;newmain.c: 386:             rgb[15].g = rgb[21].g;rgb[12].g = rgb[22].g;
  1888  006E30  C180  F15C         	movff	_rgb+128,_rgb+92	;volatile
  1889  006E34  C181  F15D         	movff	_rgb+129,_rgb+93	;volatile
  1890  006E38  C186  F14A         	movff	_rgb+134,_rgb+74	;volatile
  1891  006E3C  C187  F14B         	movff	_rgb+135,_rgb+75	;volatile
  1892  006E40                     
  1893                           ;newmain.c: 387:             rgb[15].b = rgb[21].b;rgb[12].b = rgb[22].b;
  1894  006E40  C182  F15E         	movff	_rgb+130,_rgb+94	;volatile
  1895  006E44  C183  F15F         	movff	_rgb+131,_rgb+95	;volatile
  1896  006E48  C188  F14C         	movff	_rgb+136,_rgb+76	;volatile
  1897  006E4C  C189  F14D         	movff	_rgb+137,_rgb+77	;volatile
  1898  006E50                     
  1899                           ;newmain.c: 388:             rgb[21].r = tempa.r;rgb[22].r = tempb.r;
  1900  006E50  C010  F17E         	movff	rotate_sidebot@tempa,_rgb+126	;volatile
  1901  006E54  C011  F17F         	movff	rotate_sidebot@tempa+1,_rgb+127	;volatile
  1902  006E58  C016  F184         	movff	rotate_sidebot@tempb,_rgb+132	;volatile
  1903  006E5C  C017  F185         	movff	rotate_sidebot@tempb+1,_rgb+133	;volatile
  1904  006E60                     
  1905                           ;newmain.c: 389:             rgb[21].g = tempa.g;rgb[22].g = tempb.g;
  1906  006E60  C012  F180         	movff	rotate_sidebot@tempa+2,_rgb+128	;volatile
  1907  006E64  C013  F181         	movff	rotate_sidebot@tempa+3,_rgb+129	;volatile
  1908  006E68  C018  F186         	movff	rotate_sidebot@tempb+2,_rgb+134	;volatile
  1909  006E6C  C019  F187         	movff	rotate_sidebot@tempb+3,_rgb+135	;volatile
  1910  006E70                     
  1911                           ;newmain.c: 390:             rgb[21].b = tempa.b;rgb[22].b = tempb.b;
  1912  006E70  C014  F182         	movff	rotate_sidebot@tempa+4,_rgb+130	;volatile
  1913  006E74  C015  F183         	movff	rotate_sidebot@tempa+5,_rgb+131	;volatile
  1914  006E78  C01A  F188         	movff	rotate_sidebot@tempb+4,_rgb+136	;volatile
  1915  006E7C  C01B  F189         	movff	rotate_sidebot@tempb+5,_rgb+137	;volatile
  1916  006E80                     
  1917                           ;newmain.c: 391:             buf--;
  1918  006E80  060C               	decf	rotate_sidebot@buf^0,f,c
  1919  006E82  A0D8               	btfss	status,0,c
  1920  006E84  060D               	decf	(rotate_sidebot@buf+1)^0,f,c
  1921  006E86                     l2594:
  1922                           
  1923                           ;newmain.c: 376:         while(buf>0){
  1924  006E86  BE0D               	btfsc	(rotate_sidebot@buf+1)^0,7,c
  1925  006E88  EF50  F037         	goto	u1420
  1926  006E8C  500D               	movf	(rotate_sidebot@buf+1)^0,w,c
  1927  006E8E  E106               	bnz	u1421
  1928  006E90  040C               	decf	rotate_sidebot@buf^0,w,c
  1929  006E92  B0D8               	btfsc	status,0,c
  1930  006E94  EF4E  F037         	goto	u1421
  1931  006E98  EF50  F037         	goto	u1420
  1932  006E9C                     u1421:
  1933  006E9C  EFCE  F036         	goto	l2542
  1934  006EA0                     u1420:
  1935  006EA0  EFEB  F037         	goto	l136
  1936  006EA4                     l2596:
  1937  006EA4  5049               	movf	(_original+10)^0,w,c	;volatile
  1938  006EA6  5C09               	subwf	rotate_sidebot@val^0,w,c
  1939  006EA8  500A               	movf	(rotate_sidebot@val+1)^0,w,c
  1940  006EAA  0A80               	xorlw	128
  1941  006EAC  6E0B               	movwf	??_rotate_sidebot^0,c
  1942  006EAE  504A               	movf	(_original+11)^0,w,c	;volatile
  1943  006EB0  0A80               	xorlw	128
  1944  006EB2  580B               	subwfb	??_rotate_sidebot^0,w,c
  1945  006EB4  B0D8               	btfsc	status,0,c
  1946  006EB6  EF5F  F037         	goto	u1431
  1947  006EBA  EF61  F037         	goto	u1430
  1948  006EBE                     u1431:
  1949  006EBE  EFEB  F037         	goto	l136
  1950  006EC2                     u1430:
  1951  006EC2                     
  1952                           ;newmain.c: 395:         int buf = original[5]-val;
  1953  006EC2  5009               	movf	rotate_sidebot@val^0,w,c
  1954  006EC4  5C49               	subwf	(_original+10)^0,w,c	;volatile
  1955  006EC6  6E0E               	movwf	rotate_sidebot@buf_355^0,c
  1956  006EC8  500A               	movf	(rotate_sidebot@val+1)^0,w,c
  1957  006ECA  584A               	subwfb	(_original+11)^0,w,c	;volatile
  1958  006ECC  6E0F               	movwf	(rotate_sidebot@buf_355+1)^0,c
  1959                           
  1960                           ;newmain.c: 396:         while(buf>0){
  1961  006ECE  EFDE  F037         	goto	l2652
  1962  006ED2                     l2600:
  1963                           
  1964                           ;newmain.c: 397:             rgbarray tempc = rgb[5];
  1965  006ED2  EE21  F01E         	lfsr	2,_rgb+30	;volatile
  1966  006ED6  EE10  F01C         	lfsr	1,rotate_sidebot@tempc
  1967  006EDA  0E05               	movlw	5
  1968  006EDC                     u1441:
  1969  006EDC  CFDB FFE3          	movff	plusw2,plusw1
  1970  006EE0  06E8               	decf	wreg,f,c
  1971  006EE2  E2FC               	bc	u1441
  1972                           
  1973                           ;newmain.c: 398:             rgbarray tempd = rgb[6];
  1974  006EE4  EE21  F024         	lfsr	2,_rgb+36	;volatile
  1975  006EE8  EE10  F022         	lfsr	1,rotate_sidebot@tempd
  1976  006EEC  0E05               	movlw	5
  1977  006EEE                     u1451:
  1978  006EEE  CFDB FFE3          	movff	plusw2,plusw1
  1979  006EF2  06E8               	decf	wreg,f,c
  1980  006EF4  E2FC               	bc	u1451
  1981  006EF6                     
  1982                           ;newmain.c: 399:             rgb[5].r = rgb[21].r;rgb[6].r = rgb[22].r;
  1983  006EF6  C17E  F11E         	movff	_rgb+126,_rgb+30	;volatile
  1984  006EFA  C17F  F11F         	movff	_rgb+127,_rgb+31	;volatile
  1985  006EFE  C184  F124         	movff	_rgb+132,_rgb+36	;volatile
  1986  006F02  C185  F125         	movff	_rgb+133,_rgb+37	;volatile
  1987  006F06                     
  1988                           ;newmain.c: 400:             rgb[5].g = rgb[21].g;rgb[6].g = rgb[22].g;
  1989  006F06  C180  F120         	movff	_rgb+128,_rgb+32	;volatile
  1990  006F0A  C181  F121         	movff	_rgb+129,_rgb+33	;volatile
  1991  006F0E  C186  F126         	movff	_rgb+134,_rgb+38	;volatile
  1992  006F12  C187  F127         	movff	_rgb+135,_rgb+39	;volatile
  1993  006F16                     
  1994                           ;newmain.c: 401:             rgb[5].b = rgb[21].b;rgb[6].b = rgb[22].b;
  1995  006F16  C182  F122         	movff	_rgb+130,_rgb+34	;volatile
  1996  006F1A  C183  F123         	movff	_rgb+131,_rgb+35	;volatile
  1997  006F1E  C188  F128         	movff	_rgb+136,_rgb+40	;volatile
  1998  006F22  C189  F129         	movff	_rgb+137,_rgb+41	;volatile
  1999  006F26                     
  2000                           ;newmain.c: 402:             rgb[21].r = rgb[15].r;rgb[22].r = rgb[12].r;
  2001  006F26  C15A  F17E         	movff	_rgb+90,_rgb+126	;volatile
  2002  006F2A  C15B  F17F         	movff	_rgb+91,_rgb+127	;volatile
  2003  006F2E  C148  F184         	movff	_rgb+72,_rgb+132	;volatile
  2004  006F32  C149  F185         	movff	_rgb+73,_rgb+133	;volatile
  2005  006F36                     
  2006                           ;newmain.c: 403:             rgb[21].g = rgb[15].g;rgb[22].g = rgb[12].g;
  2007  006F36  C15C  F180         	movff	_rgb+92,_rgb+128	;volatile
  2008  006F3A  C15D  F181         	movff	_rgb+93,_rgb+129	;volatile
  2009  006F3E  C14A  F186         	movff	_rgb+74,_rgb+134	;volatile
  2010  006F42  C14B  F187         	movff	_rgb+75,_rgb+135	;volatile
  2011  006F46                     
  2012                           ;newmain.c: 404:             rgb[21].b = rgb[15].b;rgb[22].b = rgb[12].b;
  2013  006F46  C15E  F182         	movff	_rgb+94,_rgb+130	;volatile
  2014  006F4A  C15F  F183         	movff	_rgb+95,_rgb+131	;volatile
  2015  006F4E  C14C  F188         	movff	_rgb+76,_rgb+136	;volatile
  2016  006F52  C14D  F189         	movff	_rgb+77,_rgb+137	;volatile
  2017  006F56                     
  2018                           ;newmain.c: 405:             rgb[15].r = rgb[17].r;rgb[12].r = rgb[18].r;
  2019  006F56  C166  F15A         	movff	_rgb+102,_rgb+90	;volatile
  2020  006F5A  C167  F15B         	movff	_rgb+103,_rgb+91	;volatile
  2021  006F5E  C16C  F148         	movff	_rgb+108,_rgb+72	;volatile
  2022  006F62  C16D  F149         	movff	_rgb+109,_rgb+73	;volatile
  2023  006F66                     
  2024                           ;newmain.c: 406:             rgb[15].g = rgb[17].g;rgb[12].g = rgb[18].g;
  2025  006F66  C168  F15C         	movff	_rgb+104,_rgb+92	;volatile
  2026  006F6A  C169  F15D         	movff	_rgb+105,_rgb+93	;volatile
  2027  006F6E  C16E  F14A         	movff	_rgb+110,_rgb+74	;volatile
  2028  006F72  C16F  F14B         	movff	_rgb+111,_rgb+75	;volatile
  2029  006F76                     
  2030                           ;newmain.c: 407:             rgb[15].b = rgb[17].b;rgb[12].b = rgb[18].b;
  2031  006F76  C16A  F15E         	movff	_rgb+106,_rgb+94	;volatile
  2032  006F7A  C16B  F15F         	movff	_rgb+107,_rgb+95	;volatile
  2033  006F7E  C170  F14C         	movff	_rgb+112,_rgb+76	;volatile
  2034  006F82  C171  F14D         	movff	_rgb+113,_rgb+77	;volatile
  2035  006F86                     
  2036                           ;newmain.c: 408:             rgb[17].r = tempc.r;rgb[18].r = tempd.r;
  2037  006F86  C01C  F166         	movff	rotate_sidebot@tempc,_rgb+102	;volatile
  2038  006F8A  C01D  F167         	movff	rotate_sidebot@tempc+1,_rgb+103	;volatile
  2039  006F8E  C022  F16C         	movff	rotate_sidebot@tempd,_rgb+108	;volatile
  2040  006F92  C023  F16D         	movff	rotate_sidebot@tempd+1,_rgb+109	;volatile
  2041  006F96                     
  2042                           ;newmain.c: 409:             rgb[17].g = tempc.g;rgb[18].g = tempd.g;
  2043  006F96  C01E  F168         	movff	rotate_sidebot@tempc+2,_rgb+104	;volatile
  2044  006F9A  C01F  F169         	movff	rotate_sidebot@tempc+3,_rgb+105	;volatile
  2045  006F9E  C024  F16E         	movff	rotate_sidebot@tempd+2,_rgb+110	;volatile
  2046  006FA2  C025  F16F         	movff	rotate_sidebot@tempd+3,_rgb+111	;volatile
  2047  006FA6                     
  2048                           ;newmain.c: 410:             rgb[17].b = tempc.b;rgb[18].b = tempd.b;
  2049  006FA6  C020  F16A         	movff	rotate_sidebot@tempc+4,_rgb+106	;volatile
  2050  006FAA  C021  F16B         	movff	rotate_sidebot@tempc+5,_rgb+107	;volatile
  2051  006FAE  C026  F170         	movff	rotate_sidebot@tempd+4,_rgb+112	;volatile
  2052  006FB2  C027  F171         	movff	rotate_sidebot@tempd+5,_rgb+113	;volatile
  2053  006FB6                     
  2054                           ;newmain.c: 411:             buf--;
  2055  006FB6  060E               	decf	rotate_sidebot@buf_355^0,f,c
  2056  006FB8  A0D8               	btfss	status,0,c
  2057  006FBA  060F               	decf	(rotate_sidebot@buf_355+1)^0,f,c
  2058  006FBC                     l2652:
  2059                           
  2060                           ;newmain.c: 396:         while(buf>0){
  2061  006FBC  BE0F               	btfsc	(rotate_sidebot@buf_355+1)^0,7,c
  2062  006FBE  EFEB  F037         	goto	u1460
  2063  006FC2  500F               	movf	(rotate_sidebot@buf_355+1)^0,w,c
  2064  006FC4  E106               	bnz	u1461
  2065  006FC6  040E               	decf	rotate_sidebot@buf_355^0,w,c
  2066  006FC8  B0D8               	btfsc	status,0,c
  2067  006FCA  EFE9  F037         	goto	u1461
  2068  006FCE  EFEB  F037         	goto	u1460
  2069  006FD2                     u1461:
  2070  006FD2  EF69  F037         	goto	l2600
  2071  006FD6                     u1460:
  2072  006FD6                     l136:
  2073  006FD6  0012               	return		;funcret
  2074  006FD8                     __end_of_rotate_sidebot:
  2075                           	opt callstack 0
  2076                           
  2077 ;; *************** function _rotate_r *****************
  2078 ;; Defined at:
  2079 ;;		line 135 in file "newmain.c"
  2080 ;; Parameters:    Size  Location     Type
  2081 ;;  val             2    8[COMRAM] int 
  2082 ;; Auto vars:     Size  Location     Type
  2083 ;;  tempd           6   33[COMRAM] struct RGB
  2084 ;;  tempc           6   27[COMRAM] struct RGB
  2085 ;;  tempb           6   21[COMRAM] struct RGB
  2086 ;;  tempa           6   15[COMRAM] struct RGB
  2087 ;;  buf             2   13[COMRAM] int 
  2088 ;;  buf             2   11[COMRAM] int 
  2089 ;; Return value:  Size  Location     Type
  2090 ;;                  1    wreg      void 
  2091 ;; Registers used:
  2092 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  2093 ;; Tracked objects:
  2094 ;;		On entry : 0/0
  2095 ;;		On exit  : 0/0
  2096 ;;		Unchanged: 0/0
  2097 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2098 ;;      Params:         2       0       0       0       0       0       0
  2099 ;;      Locals:        28       0       0       0       0       0       0
  2100 ;;      Temps:          1       0       0       0       0       0       0
  2101 ;;      Totals:        31       0       0       0       0       0       0
  2102 ;;Total ram usage:       31 bytes
  2103 ;; Hardware stack levels used:    1
  2104 ;; This function calls:
  2105 ;;		Nothing
  2106 ;; This function is called by:
  2107 ;;		_main
  2108 ;; This function uses a non-reentrant model
  2109 ;;
  2110                           
  2111                           	psect	text4
  2112  006ABC                     __ptext4:
  2113                           	opt callstack 0
  2114  006ABC                     _rotate_r:
  2115                           	opt callstack 30
  2116  006ABC                     
  2117                           ;newmain.c: 136:     if(val > 3){
  2118  006ABC  BE0A               	btfsc	(rotate_r@val+1)^0,7,c
  2119  006ABE  EF6A  F035         	goto	u931
  2120  006AC2  500A               	movf	(rotate_r@val+1)^0,w,c
  2121  006AC4  E109               	bnz	u930
  2122  006AC6  0E04               	movlw	4
  2123  006AC8  5C09               	subwf	rotate_r@val^0,w,c
  2124  006ACA  A0D8               	btfss	status,0,c
  2125  006ACC  EF6A  F035         	goto	u931
  2126  006AD0  EF6C  F035         	goto	u930
  2127  006AD4                     u931:
  2128  006AD4  EF70  F035         	goto	l1938
  2129  006AD8                     u930:
  2130  006AD8                     
  2131                           ;newmain.c: 137:         val = 3;
  2132  006AD8  0E00               	movlw	0
  2133  006ADA  6E0A               	movwf	(rotate_r@val+1)^0,c
  2134  006ADC  0E03               	movlw	3
  2135  006ADE  6E09               	movwf	rotate_r@val^0,c
  2136  006AE0                     l1938:
  2137                           
  2138                           ;newmain.c: 139:     if(val>original[2]){
  2139  006AE0  5009               	movf	rotate_r@val^0,w,c
  2140  006AE2  5C43               	subwf	(_original+4)^0,w,c	;volatile
  2141  006AE4  5044               	movf	(_original+5)^0,w,c	;volatile
  2142  006AE6  0A80               	xorlw	128
  2143  006AE8  6E0B               	movwf	??_rotate_r^0,c
  2144  006AEA  500A               	movf	(rotate_r@val+1)^0,w,c
  2145  006AEC  0A80               	xorlw	128
  2146  006AEE  580B               	subwfb	??_rotate_r^0,w,c
  2147  006AF0  B0D8               	btfsc	status,0,c
  2148  006AF2  EF7D  F035         	goto	u941
  2149  006AF6  EF7F  F035         	goto	u940
  2150  006AFA                     u941:
  2151  006AFA  EF0B  F036         	goto	l1996
  2152  006AFE                     u940:
  2153  006AFE                     
  2154                           ;newmain.c: 140:         int buf = val-original[2];
  2155  006AFE  5043               	movf	(_original+4)^0,w,c	;volatile
  2156  006B00  5C09               	subwf	rotate_r@val^0,w,c
  2157  006B02  6E0C               	movwf	rotate_r@buf^0,c
  2158  006B04  5044               	movf	(_original+5)^0,w,c	;volatile
  2159  006B06  580A               	subwfb	(rotate_r@val+1)^0,w,c
  2160  006B08  6E0D               	movwf	(rotate_r@buf+1)^0,c
  2161                           
  2162                           ;newmain.c: 141:         while(buf>0){
  2163  006B0A  EFFC  F035         	goto	l1994
  2164  006B0E                     l1942:
  2165                           
  2166                           ;newmain.c: 142:             rgbarray tempa = rgb[2];
  2167  006B0E  EE21  F00C         	lfsr	2,_rgb+12	;volatile
  2168  006B12  EE10  F010         	lfsr	1,rotate_r@tempa
  2169  006B16  0E05               	movlw	5
  2170  006B18                     u951:
  2171  006B18  CFDB FFE3          	movff	plusw2,plusw1
  2172  006B1C  06E8               	decf	wreg,f,c
  2173  006B1E  E2FC               	bc	u951
  2174                           
  2175                           ;newmain.c: 143:             rgbarray tempb = rgb[3];
  2176  006B20  EE21  F012         	lfsr	2,_rgb+18	;volatile
  2177  006B24  EE10  F016         	lfsr	1,rotate_r@tempb
  2178  006B28  0E05               	movlw	5
  2179  006B2A                     u961:
  2180  006B2A  CFDB FFE3          	movff	plusw2,plusw1
  2181  006B2E  06E8               	decf	wreg,f,c
  2182  006B30  E2FC               	bc	u961
  2183  006B32                     
  2184                           ;newmain.c: 144:             rgb[2].r = rgb[6].r;rgb[3].r = rgb[7].r;
  2185  006B32  C124  F10C         	movff	_rgb+36,_rgb+12	;volatile
  2186  006B36  C125  F10D         	movff	_rgb+37,_rgb+13	;volatile
  2187  006B3A  C12A  F112         	movff	_rgb+42,_rgb+18	;volatile
  2188  006B3E  C12B  F113         	movff	_rgb+43,_rgb+19	;volatile
  2189  006B42                     
  2190                           ;newmain.c: 145:             rgb[2].g = rgb[6].g;rgb[3].g = rgb[7].g;
  2191  006B42  C126  F10E         	movff	_rgb+38,_rgb+14	;volatile
  2192  006B46  C127  F10F         	movff	_rgb+39,_rgb+15	;volatile
  2193  006B4A  C12C  F114         	movff	_rgb+44,_rgb+20	;volatile
  2194  006B4E  C12D  F115         	movff	_rgb+45,_rgb+21	;volatile
  2195  006B52                     
  2196                           ;newmain.c: 146:             rgb[2].b = rgb[6].b;rgb[3].b = rgb[7].b;
  2197  006B52  C128  F110         	movff	_rgb+40,_rgb+16	;volatile
  2198  006B56  C129  F111         	movff	_rgb+41,_rgb+17	;volatile
  2199  006B5A  C12E  F116         	movff	_rgb+46,_rgb+22	;volatile
  2200  006B5E  C12F  F117         	movff	_rgb+47,_rgb+23	;volatile
  2201  006B62                     
  2202                           ;newmain.c: 147:             rgb[6].r = rgb[10].r;rgb[7].r = rgb[11].r;
  2203  006B62  C13C  F124         	movff	_rgb+60,_rgb+36	;volatile
  2204  006B66  C13D  F125         	movff	_rgb+61,_rgb+37	;volatile
  2205  006B6A  C142  F12A         	movff	_rgb+66,_rgb+42	;volatile
  2206  006B6E  C143  F12B         	movff	_rgb+67,_rgb+43	;volatile
  2207  006B72                     
  2208                           ;newmain.c: 148:             rgb[6].g = rgb[10].g;rgb[7].g = rgb[11].g;
  2209  006B72  C13E  F126         	movff	_rgb+62,_rgb+38	;volatile
  2210  006B76  C13F  F127         	movff	_rgb+63,_rgb+39	;volatile
  2211  006B7A  C144  F12C         	movff	_rgb+68,_rgb+44	;volatile
  2212  006B7E  C145  F12D         	movff	_rgb+69,_rgb+45	;volatile
  2213  006B82                     
  2214                           ;newmain.c: 149:             rgb[6].b = rgb[10].b;rgb[7].b = rgb[11].b;
  2215  006B82  C140  F128         	movff	_rgb+64,_rgb+40	;volatile
  2216  006B86  C141  F129         	movff	_rgb+65,_rgb+41	;volatile
  2217  006B8A  C146  F12E         	movff	_rgb+70,_rgb+46	;volatile
  2218  006B8E  C147  F12F         	movff	_rgb+71,_rgb+47	;volatile
  2219  006B92                     
  2220                           ;newmain.c: 150:             rgb[10].r = rgb[14].r;rgb[11].r = rgb[15].r;
  2221  006B92  C154  F13C         	movff	_rgb+84,_rgb+60	;volatile
  2222  006B96  C155  F13D         	movff	_rgb+85,_rgb+61	;volatile
  2223  006B9A  C15A  F142         	movff	_rgb+90,_rgb+66	;volatile
  2224  006B9E  C15B  F143         	movff	_rgb+91,_rgb+67	;volatile
  2225  006BA2                     
  2226                           ;newmain.c: 151:             rgb[10].g = rgb[14].g;rgb[11].g = rgb[15].g;
  2227  006BA2  C156  F13E         	movff	_rgb+86,_rgb+62	;volatile
  2228  006BA6  C157  F13F         	movff	_rgb+87,_rgb+63	;volatile
  2229  006BAA  C15C  F144         	movff	_rgb+92,_rgb+68	;volatile
  2230  006BAE  C15D  F145         	movff	_rgb+93,_rgb+69	;volatile
  2231  006BB2                     
  2232                           ;newmain.c: 152:             rgb[10].b = rgb[14].b;rgb[11].b = rgb[15].b;
  2233  006BB2  C158  F140         	movff	_rgb+88,_rgb+64	;volatile
  2234  006BB6  C159  F141         	movff	_rgb+89,_rgb+65	;volatile
  2235  006BBA  C15E  F146         	movff	_rgb+94,_rgb+70	;volatile
  2236  006BBE  C15F  F147         	movff	_rgb+95,_rgb+71	;volatile
  2237  006BC2                     
  2238                           ;newmain.c: 153:             rgb[14].r = tempa.r;rgb[15].r = tempb.r;
  2239  006BC2  C010  F154         	movff	rotate_r@tempa,_rgb+84	;volatile
  2240  006BC6  C011  F155         	movff	rotate_r@tempa+1,_rgb+85	;volatile
  2241  006BCA  C016  F15A         	movff	rotate_r@tempb,_rgb+90	;volatile
  2242  006BCE  C017  F15B         	movff	rotate_r@tempb+1,_rgb+91	;volatile
  2243  006BD2                     
  2244                           ;newmain.c: 154:             rgb[14].g = tempa.g;rgb[15].g = tempb.g;
  2245  006BD2  C012  F156         	movff	rotate_r@tempa+2,_rgb+86	;volatile
  2246  006BD6  C013  F157         	movff	rotate_r@tempa+3,_rgb+87	;volatile
  2247  006BDA  C018  F15C         	movff	rotate_r@tempb+2,_rgb+92	;volatile
  2248  006BDE  C019  F15D         	movff	rotate_r@tempb+3,_rgb+93	;volatile
  2249  006BE2                     
  2250                           ;newmain.c: 155:             rgb[14].b = tempa.b;rgb[15].b = tempb.b;
  2251  006BE2  C014  F158         	movff	rotate_r@tempa+4,_rgb+88	;volatile
  2252  006BE6  C015  F159         	movff	rotate_r@tempa+5,_rgb+89	;volatile
  2253  006BEA  C01A  F15E         	movff	rotate_r@tempb+4,_rgb+94	;volatile
  2254  006BEE  C01B  F15F         	movff	rotate_r@tempb+5,_rgb+95	;volatile
  2255  006BF2                     
  2256                           ;newmain.c: 156:             buf--;
  2257  006BF2  060C               	decf	rotate_r@buf^0,f,c
  2258  006BF4  A0D8               	btfss	status,0,c
  2259  006BF6  060D               	decf	(rotate_r@buf+1)^0,f,c
  2260  006BF8                     l1994:
  2261                           
  2262                           ;newmain.c: 141:         while(buf>0){
  2263  006BF8  BE0D               	btfsc	(rotate_r@buf+1)^0,7,c
  2264  006BFA  EF09  F036         	goto	u970
  2265  006BFE  500D               	movf	(rotate_r@buf+1)^0,w,c
  2266  006C00  E106               	bnz	u971
  2267  006C02  040C               	decf	rotate_r@buf^0,w,c
  2268  006C04  B0D8               	btfsc	status,0,c
  2269  006C06  EF07  F036         	goto	u971
  2270  006C0A  EF09  F036         	goto	u970
  2271  006C0E                     u971:
  2272  006C0E  EF87  F035         	goto	l1942
  2273  006C12                     u970:
  2274  006C12  EFA4  F036         	goto	l71
  2275  006C16                     l1996:
  2276  006C16  5043               	movf	(_original+4)^0,w,c	;volatile
  2277  006C18  5C09               	subwf	rotate_r@val^0,w,c
  2278  006C1A  500A               	movf	(rotate_r@val+1)^0,w,c
  2279  006C1C  0A80               	xorlw	128
  2280  006C1E  6E0B               	movwf	??_rotate_r^0,c
  2281  006C20  5044               	movf	(_original+5)^0,w,c	;volatile
  2282  006C22  0A80               	xorlw	128
  2283  006C24  580B               	subwfb	??_rotate_r^0,w,c
  2284  006C26  B0D8               	btfsc	status,0,c
  2285  006C28  EF18  F036         	goto	u981
  2286  006C2C  EF1A  F036         	goto	u980
  2287  006C30                     u981:
  2288  006C30  EFA4  F036         	goto	l71
  2289  006C34                     u980:
  2290  006C34                     
  2291                           ;newmain.c: 160:         int buf = original[2]-val;
  2292  006C34  5009               	movf	rotate_r@val^0,w,c
  2293  006C36  5C43               	subwf	(_original+4)^0,w,c	;volatile
  2294  006C38  6E0E               	movwf	rotate_r@buf_255^0,c
  2295  006C3A  500A               	movf	(rotate_r@val+1)^0,w,c
  2296  006C3C  5844               	subwfb	(_original+5)^0,w,c	;volatile
  2297  006C3E  6E0F               	movwf	(rotate_r@buf_255+1)^0,c
  2298                           
  2299                           ;newmain.c: 161:         while(buf>0){
  2300  006C40  EF97  F036         	goto	l2052
  2301  006C44                     l2000:
  2302                           
  2303                           ;newmain.c: 162:             rgbarray tempc = rgb[14];
  2304  006C44  EE21  F054         	lfsr	2,_rgb+84	;volatile
  2305  006C48  EE10  F01C         	lfsr	1,rotate_r@tempc
  2306  006C4C  0E05               	movlw	5
  2307  006C4E                     u991:
  2308  006C4E  CFDB FFE3          	movff	plusw2,plusw1
  2309  006C52  06E8               	decf	wreg,f,c
  2310  006C54  E2FC               	bc	u991
  2311                           
  2312                           ;newmain.c: 163:             rgbarray tempd = rgb[15];
  2313  006C56  EE21  F05A         	lfsr	2,_rgb+90	;volatile
  2314  006C5A  EE10  F022         	lfsr	1,rotate_r@tempd
  2315  006C5E  0E05               	movlw	5
  2316  006C60                     u1001:
  2317  006C60  CFDB FFE3          	movff	plusw2,plusw1
  2318  006C64  06E8               	decf	wreg,f,c
  2319  006C66  E2FC               	bc	u1001
  2320  006C68                     
  2321                           ;newmain.c: 164:             rgb[14].r = rgb[10].r;rgb[15].r = rgb[11].r;
  2322  006C68  C13C  F154         	movff	_rgb+60,_rgb+84	;volatile
  2323  006C6C  C13D  F155         	movff	_rgb+61,_rgb+85	;volatile
  2324  006C70  C142  F15A         	movff	_rgb+66,_rgb+90	;volatile
  2325  006C74  C143  F15B         	movff	_rgb+67,_rgb+91	;volatile
  2326  006C78                     
  2327                           ;newmain.c: 165:             rgb[14].g = rgb[10].g;rgb[15].g = rgb[11].g;
  2328  006C78  C13E  F156         	movff	_rgb+62,_rgb+86	;volatile
  2329  006C7C  C13F  F157         	movff	_rgb+63,_rgb+87	;volatile
  2330  006C80  C144  F15C         	movff	_rgb+68,_rgb+92	;volatile
  2331  006C84  C145  F15D         	movff	_rgb+69,_rgb+93	;volatile
  2332  006C88                     
  2333                           ;newmain.c: 166:             rgb[14].b = rgb[10].b;rgb[15].b = rgb[11].b;
  2334  006C88  C140  F158         	movff	_rgb+64,_rgb+88	;volatile
  2335  006C8C  C141  F159         	movff	_rgb+65,_rgb+89	;volatile
  2336  006C90  C146  F15E         	movff	_rgb+70,_rgb+94	;volatile
  2337  006C94  C147  F15F         	movff	_rgb+71,_rgb+95	;volatile
  2338  006C98                     
  2339                           ;newmain.c: 167:             rgb[10].r = rgb[6].r;rgb[11].r = rgb[7].r;
  2340  006C98  C124  F13C         	movff	_rgb+36,_rgb+60	;volatile
  2341  006C9C  C125  F13D         	movff	_rgb+37,_rgb+61	;volatile
  2342  006CA0  C12A  F142         	movff	_rgb+42,_rgb+66	;volatile
  2343  006CA4  C12B  F143         	movff	_rgb+43,_rgb+67	;volatile
  2344  006CA8                     
  2345                           ;newmain.c: 168:             rgb[10].g = rgb[6].g;rgb[11].g = rgb[7].g;
  2346  006CA8  C126  F13E         	movff	_rgb+38,_rgb+62	;volatile
  2347  006CAC  C127  F13F         	movff	_rgb+39,_rgb+63	;volatile
  2348  006CB0  C12C  F144         	movff	_rgb+44,_rgb+68	;volatile
  2349  006CB4  C12D  F145         	movff	_rgb+45,_rgb+69	;volatile
  2350  006CB8                     
  2351                           ;newmain.c: 169:             rgb[10].b = rgb[6].b;rgb[11].b = rgb[7].b;
  2352  006CB8  C128  F140         	movff	_rgb+40,_rgb+64	;volatile
  2353  006CBC  C129  F141         	movff	_rgb+41,_rgb+65	;volatile
  2354  006CC0  C12E  F146         	movff	_rgb+46,_rgb+70	;volatile
  2355  006CC4  C12F  F147         	movff	_rgb+47,_rgb+71	;volatile
  2356  006CC8                     
  2357                           ;newmain.c: 170:             rgb[6].r = rgb[2].r;rgb[7].r = rgb[3].r;
  2358  006CC8  C10C  F124         	movff	_rgb+12,_rgb+36	;volatile
  2359  006CCC  C10D  F125         	movff	_rgb+13,_rgb+37	;volatile
  2360  006CD0  C112  F12A         	movff	_rgb+18,_rgb+42	;volatile
  2361  006CD4  C113  F12B         	movff	_rgb+19,_rgb+43	;volatile
  2362  006CD8                     
  2363                           ;newmain.c: 171:             rgb[6].g = rgb[2].g;rgb[7].g = rgb[3].g;
  2364  006CD8  C10E  F126         	movff	_rgb+14,_rgb+38	;volatile
  2365  006CDC  C10F  F127         	movff	_rgb+15,_rgb+39	;volatile
  2366  006CE0  C114  F12C         	movff	_rgb+20,_rgb+44	;volatile
  2367  006CE4  C115  F12D         	movff	_rgb+21,_rgb+45	;volatile
  2368  006CE8                     
  2369                           ;newmain.c: 172:             rgb[6].b = rgb[2].b;rgb[7].b = rgb[3].b;
  2370  006CE8  C110  F128         	movff	_rgb+16,_rgb+40	;volatile
  2371  006CEC  C111  F129         	movff	_rgb+17,_rgb+41	;volatile
  2372  006CF0  C116  F12E         	movff	_rgb+22,_rgb+46	;volatile
  2373  006CF4  C117  F12F         	movff	_rgb+23,_rgb+47	;volatile
  2374  006CF8                     
  2375                           ;newmain.c: 173:             rgb[2].r = tempc.r;rgb[3].r = tempd.r;
  2376  006CF8  C01C  F10C         	movff	rotate_r@tempc,_rgb+12	;volatile
  2377  006CFC  C01D  F10D         	movff	rotate_r@tempc+1,_rgb+13	;volatile
  2378  006D00  C022  F112         	movff	rotate_r@tempd,_rgb+18	;volatile
  2379  006D04  C023  F113         	movff	rotate_r@tempd+1,_rgb+19	;volatile
  2380  006D08                     
  2381                           ;newmain.c: 174:             rgb[2].g = tempc.g;rgb[3].g = tempd.g;
  2382  006D08  C01E  F10E         	movff	rotate_r@tempc+2,_rgb+14	;volatile
  2383  006D0C  C01F  F10F         	movff	rotate_r@tempc+3,_rgb+15	;volatile
  2384  006D10  C024  F114         	movff	rotate_r@tempd+2,_rgb+20	;volatile
  2385  006D14  C025  F115         	movff	rotate_r@tempd+3,_rgb+21	;volatile
  2386  006D18                     
  2387                           ;newmain.c: 175:             rgb[2].b = tempc.b;rgb[3].b = tempd.b;
  2388  006D18  C020  F110         	movff	rotate_r@tempc+4,_rgb+16	;volatile
  2389  006D1C  C021  F111         	movff	rotate_r@tempc+5,_rgb+17	;volatile
  2390  006D20  C026  F116         	movff	rotate_r@tempd+4,_rgb+22	;volatile
  2391  006D24  C027  F117         	movff	rotate_r@tempd+5,_rgb+23	;volatile
  2392  006D28                     
  2393                           ;newmain.c: 176:             buf--;
  2394  006D28  060E               	decf	rotate_r@buf_255^0,f,c
  2395  006D2A  A0D8               	btfss	status,0,c
  2396  006D2C  060F               	decf	(rotate_r@buf_255+1)^0,f,c
  2397  006D2E                     l2052:
  2398                           
  2399                           ;newmain.c: 161:         while(buf>0){
  2400  006D2E  BE0F               	btfsc	(rotate_r@buf_255+1)^0,7,c
  2401  006D30  EFA4  F036         	goto	u1010
  2402  006D34  500F               	movf	(rotate_r@buf_255+1)^0,w,c
  2403  006D36  E106               	bnz	u1011
  2404  006D38  040E               	decf	rotate_r@buf_255^0,w,c
  2405  006D3A  B0D8               	btfsc	status,0,c
  2406  006D3C  EFA2  F036         	goto	u1011
  2407  006D40  EFA4  F036         	goto	u1010
  2408  006D44                     u1011:
  2409  006D44  EF22  F036         	goto	l2000
  2410  006D48                     u1010:
  2411  006D48                     l71:
  2412  006D48  0012               	return		;funcret
  2413  006D4A                     __end_of_rotate_r:
  2414                           	opt callstack 0
  2415                           
  2416 ;; *************** function _rotate_l *****************
  2417 ;; Defined at:
  2418 ;;		line 181 in file "newmain.c"
  2419 ;; Parameters:    Size  Location     Type
  2420 ;;  val             2    8[COMRAM] int 
  2421 ;; Auto vars:     Size  Location     Type
  2422 ;;  tempd           6   33[COMRAM] struct RGB
  2423 ;;  tempc           6   27[COMRAM] struct RGB
  2424 ;;  tempb           6   21[COMRAM] struct RGB
  2425 ;;  tempa           6   15[COMRAM] struct RGB
  2426 ;;  buf             2   13[COMRAM] int 
  2427 ;;  buf             2   11[COMRAM] int 
  2428 ;; Return value:  Size  Location     Type
  2429 ;;                  1    wreg      void 
  2430 ;; Registers used:
  2431 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  2432 ;; Tracked objects:
  2433 ;;		On entry : 0/0
  2434 ;;		On exit  : 0/0
  2435 ;;		Unchanged: 0/0
  2436 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2437 ;;      Params:         2       0       0       0       0       0       0
  2438 ;;      Locals:        28       0       0       0       0       0       0
  2439 ;;      Temps:          1       0       0       0       0       0       0
  2440 ;;      Totals:        31       0       0       0       0       0       0
  2441 ;;Total ram usage:       31 bytes
  2442 ;; Hardware stack levels used:    1
  2443 ;; This function calls:
  2444 ;;		Nothing
  2445 ;; This function is called by:
  2446 ;;		_main
  2447 ;; This function uses a non-reentrant model
  2448 ;;
  2449                           
  2450                           	psect	text5
  2451  00682E                     __ptext5:
  2452                           	opt callstack 0
  2453  00682E                     _rotate_l:
  2454                           	opt callstack 30
  2455  00682E                     
  2456                           ;newmain.c: 183:     if(val > 3){
  2457  00682E  BE0A               	btfsc	(rotate_l@val+1)^0,7,c
  2458  006830  EF23  F034         	goto	u1021
  2459  006834  500A               	movf	(rotate_l@val+1)^0,w,c
  2460  006836  E109               	bnz	u1020
  2461  006838  0E04               	movlw	4
  2462  00683A  5C09               	subwf	rotate_l@val^0,w,c
  2463  00683C  A0D8               	btfss	status,0,c
  2464  00683E  EF23  F034         	goto	u1021
  2465  006842  EF25  F034         	goto	u1020
  2466  006846                     u1021:
  2467  006846  EF29  F034         	goto	l2058
  2468  00684A                     u1020:
  2469  00684A                     
  2470                           ;newmain.c: 184:         val = 3;
  2471  00684A  0E00               	movlw	0
  2472  00684C  6E0A               	movwf	(rotate_l@val+1)^0,c
  2473  00684E  0E03               	movlw	3
  2474  006850  6E09               	movwf	rotate_l@val^0,c
  2475  006852                     l2058:
  2476                           
  2477                           ;newmain.c: 186:     if(val>original[3]){
  2478  006852  5009               	movf	rotate_l@val^0,w,c
  2479  006854  5C45               	subwf	(_original+6)^0,w,c	;volatile
  2480  006856  5046               	movf	(_original+7)^0,w,c	;volatile
  2481  006858  0A80               	xorlw	128
  2482  00685A  6E0B               	movwf	??_rotate_l^0,c
  2483  00685C  500A               	movf	(rotate_l@val+1)^0,w,c
  2484  00685E  0A80               	xorlw	128
  2485  006860  580B               	subwfb	??_rotate_l^0,w,c
  2486  006862  B0D8               	btfsc	status,0,c
  2487  006864  EF36  F034         	goto	u1031
  2488  006868  EF38  F034         	goto	u1030
  2489  00686C                     u1031:
  2490  00686C  EFC4  F034         	goto	l2116
  2491  006870                     u1030:
  2492  006870                     
  2493                           ;newmain.c: 187:         int buf = val-original[3];
  2494  006870  5045               	movf	(_original+6)^0,w,c	;volatile
  2495  006872  5C09               	subwf	rotate_l@val^0,w,c
  2496  006874  6E0C               	movwf	rotate_l@buf^0,c
  2497  006876  5046               	movf	(_original+7)^0,w,c	;volatile
  2498  006878  580A               	subwfb	(rotate_l@val+1)^0,w,c
  2499  00687A  6E0D               	movwf	(rotate_l@buf+1)^0,c
  2500                           
  2501                           ;newmain.c: 188:         while(buf>0){
  2502  00687C  EFB5  F034         	goto	l2114
  2503  006880                     l2062:
  2504                           
  2505                           ;newmain.c: 189:             rgbarray tempa = rgb[0];
  2506  006880  EE21  F000         	lfsr	2,_rgb	;volatile
  2507  006884  EE10  F010         	lfsr	1,rotate_l@tempa
  2508  006888  0E05               	movlw	5
  2509  00688A                     u1041:
  2510  00688A  CFDB FFE3          	movff	plusw2,plusw1
  2511  00688E  06E8               	decf	wreg,f,c
  2512  006890  E2FC               	bc	u1041
  2513                           
  2514                           ;newmain.c: 190:             rgbarray tempb = rgb[1];
  2515  006892  EE21  F006         	lfsr	2,_rgb+6	;volatile
  2516  006896  EE10  F016         	lfsr	1,rotate_l@tempb
  2517  00689A  0E05               	movlw	5
  2518  00689C                     u1051:
  2519  00689C  CFDB FFE3          	movff	plusw2,plusw1
  2520  0068A0  06E8               	decf	wreg,f,c
  2521  0068A2  E2FC               	bc	u1051
  2522  0068A4                     
  2523                           ;newmain.c: 191:             rgb[0].r = rgb[4].r;rgb[1].r = rgb[5].r;
  2524  0068A4  C118  F100         	movff	_rgb+24,_rgb	;volatile
  2525  0068A8  C119  F101         	movff	_rgb+25,_rgb+1	;volatile
  2526  0068AC  C11E  F106         	movff	_rgb+30,_rgb+6	;volatile
  2527  0068B0  C11F  F107         	movff	_rgb+31,_rgb+7	;volatile
  2528  0068B4                     
  2529                           ;newmain.c: 192:             rgb[0].g = rgb[4].g;rgb[1].g = rgb[5].g;
  2530  0068B4  C11A  F102         	movff	_rgb+26,_rgb+2	;volatile
  2531  0068B8  C11B  F103         	movff	_rgb+27,_rgb+3	;volatile
  2532  0068BC  C120  F108         	movff	_rgb+32,_rgb+8	;volatile
  2533  0068C0  C121  F109         	movff	_rgb+33,_rgb+9	;volatile
  2534  0068C4                     
  2535                           ;newmain.c: 193:             rgb[0].b = rgb[4].b;rgb[1].b = rgb[5].b;
  2536  0068C4  C11C  F104         	movff	_rgb+28,_rgb+4	;volatile
  2537  0068C8  C11D  F105         	movff	_rgb+29,_rgb+5	;volatile
  2538  0068CC  C122  F10A         	movff	_rgb+34,_rgb+10	;volatile
  2539  0068D0  C123  F10B         	movff	_rgb+35,_rgb+11	;volatile
  2540  0068D4                     
  2541                           ;newmain.c: 194:             rgb[4].r = rgb[8].r;rgb[5].r = rgb[9].r;
  2542  0068D4  C130  F118         	movff	_rgb+48,_rgb+24	;volatile
  2543  0068D8  C131  F119         	movff	_rgb+49,_rgb+25	;volatile
  2544  0068DC  C136  F11E         	movff	_rgb+54,_rgb+30	;volatile
  2545  0068E0  C137  F11F         	movff	_rgb+55,_rgb+31	;volatile
  2546  0068E4                     
  2547                           ;newmain.c: 195:             rgb[4].g = rgb[8].g;rgb[5].g = rgb[9].g;
  2548  0068E4  C132  F11A         	movff	_rgb+50,_rgb+26	;volatile
  2549  0068E8  C133  F11B         	movff	_rgb+51,_rgb+27	;volatile
  2550  0068EC  C138  F120         	movff	_rgb+56,_rgb+32	;volatile
  2551  0068F0  C139  F121         	movff	_rgb+57,_rgb+33	;volatile
  2552  0068F4                     
  2553                           ;newmain.c: 196:             rgb[4].b = rgb[8].b;rgb[5].b = rgb[9].b;
  2554  0068F4  C134  F11C         	movff	_rgb+52,_rgb+28	;volatile
  2555  0068F8  C135  F11D         	movff	_rgb+53,_rgb+29	;volatile
  2556  0068FC  C13A  F122         	movff	_rgb+58,_rgb+34	;volatile
  2557  006900  C13B  F123         	movff	_rgb+59,_rgb+35	;volatile
  2558  006904                     
  2559                           ;newmain.c: 197:             rgb[8].r = rgb[12].r;rgb[9].r = rgb[13].r;
  2560  006904  C148  F130         	movff	_rgb+72,_rgb+48	;volatile
  2561  006908  C149  F131         	movff	_rgb+73,_rgb+49	;volatile
  2562  00690C  C14E  F136         	movff	_rgb+78,_rgb+54	;volatile
  2563  006910  C14F  F137         	movff	_rgb+79,_rgb+55	;volatile
  2564  006914                     
  2565                           ;newmain.c: 198:             rgb[8].g = rgb[12].g;rgb[9].g = rgb[13].g;
  2566  006914  C14A  F132         	movff	_rgb+74,_rgb+50	;volatile
  2567  006918  C14B  F133         	movff	_rgb+75,_rgb+51	;volatile
  2568  00691C  C150  F138         	movff	_rgb+80,_rgb+56	;volatile
  2569  006920  C151  F139         	movff	_rgb+81,_rgb+57	;volatile
  2570  006924                     
  2571                           ;newmain.c: 199:             rgb[8].b = rgb[12].b;rgb[9].b = rgb[13].b;
  2572  006924  C14C  F134         	movff	_rgb+76,_rgb+52	;volatile
  2573  006928  C14D  F135         	movff	_rgb+77,_rgb+53	;volatile
  2574  00692C  C152  F13A         	movff	_rgb+82,_rgb+58	;volatile
  2575  006930  C153  F13B         	movff	_rgb+83,_rgb+59	;volatile
  2576  006934                     
  2577                           ;newmain.c: 200:             rgb[12].r = tempa.r;rgb[13].r = tempb.r;
  2578  006934  C010  F148         	movff	rotate_l@tempa,_rgb+72	;volatile
  2579  006938  C011  F149         	movff	rotate_l@tempa+1,_rgb+73	;volatile
  2580  00693C  C016  F14E         	movff	rotate_l@tempb,_rgb+78	;volatile
  2581  006940  C017  F14F         	movff	rotate_l@tempb+1,_rgb+79	;volatile
  2582  006944                     
  2583                           ;newmain.c: 201:             rgb[12].g = tempa.g;rgb[13].g = tempb.g;
  2584  006944  C012  F14A         	movff	rotate_l@tempa+2,_rgb+74	;volatile
  2585  006948  C013  F14B         	movff	rotate_l@tempa+3,_rgb+75	;volatile
  2586  00694C  C018  F150         	movff	rotate_l@tempb+2,_rgb+80	;volatile
  2587  006950  C019  F151         	movff	rotate_l@tempb+3,_rgb+81	;volatile
  2588  006954                     
  2589                           ;newmain.c: 202:             rgb[12].b = tempa.b;rgb[13].b = tempb.b;
  2590  006954  C014  F14C         	movff	rotate_l@tempa+4,_rgb+76	;volatile
  2591  006958  C015  F14D         	movff	rotate_l@tempa+5,_rgb+77	;volatile
  2592  00695C  C01A  F152         	movff	rotate_l@tempb+4,_rgb+82	;volatile
  2593  006960  C01B  F153         	movff	rotate_l@tempb+5,_rgb+83	;volatile
  2594  006964                     
  2595                           ;newmain.c: 203:             buf--;
  2596  006964  060C               	decf	rotate_l@buf^0,f,c
  2597  006966  A0D8               	btfss	status,0,c
  2598  006968  060D               	decf	(rotate_l@buf+1)^0,f,c
  2599  00696A                     l2114:
  2600                           
  2601                           ;newmain.c: 188:         while(buf>0){
  2602  00696A  BE0D               	btfsc	(rotate_l@buf+1)^0,7,c
  2603  00696C  EFC2  F034         	goto	u1060
  2604  006970  500D               	movf	(rotate_l@buf+1)^0,w,c
  2605  006972  E106               	bnz	u1061
  2606  006974  040C               	decf	rotate_l@buf^0,w,c
  2607  006976  B0D8               	btfsc	status,0,c
  2608  006978  EFC0  F034         	goto	u1061
  2609  00697C  EFC2  F034         	goto	u1060
  2610  006980                     u1061:
  2611  006980  EF40  F034         	goto	l2062
  2612  006984                     u1060:
  2613  006984  EF5D  F035         	goto	l84
  2614  006988                     l2116:
  2615  006988  5045               	movf	(_original+6)^0,w,c	;volatile
  2616  00698A  5C09               	subwf	rotate_l@val^0,w,c
  2617  00698C  500A               	movf	(rotate_l@val+1)^0,w,c
  2618  00698E  0A80               	xorlw	128
  2619  006990  6E0B               	movwf	??_rotate_l^0,c
  2620  006992  5046               	movf	(_original+7)^0,w,c	;volatile
  2621  006994  0A80               	xorlw	128
  2622  006996  580B               	subwfb	??_rotate_l^0,w,c
  2623  006998  B0D8               	btfsc	status,0,c
  2624  00699A  EFD1  F034         	goto	u1071
  2625  00699E  EFD3  F034         	goto	u1070
  2626  0069A2                     u1071:
  2627  0069A2  EF5D  F035         	goto	l84
  2628  0069A6                     u1070:
  2629  0069A6                     
  2630                           ;newmain.c: 207:         int buf = original[3]-val;
  2631  0069A6  5009               	movf	rotate_l@val^0,w,c
  2632  0069A8  5C45               	subwf	(_original+6)^0,w,c	;volatile
  2633  0069AA  6E0E               	movwf	rotate_l@buf_275^0,c
  2634  0069AC  500A               	movf	(rotate_l@val+1)^0,w,c
  2635  0069AE  5846               	subwfb	(_original+7)^0,w,c	;volatile
  2636  0069B0  6E0F               	movwf	(rotate_l@buf_275+1)^0,c
  2637                           
  2638                           ;newmain.c: 208:         while(buf>0){
  2639  0069B2  EF50  F035         	goto	l2172
  2640  0069B6                     l2120:
  2641                           
  2642                           ;newmain.c: 209:             rgbarray tempc = rgb[12];
  2643  0069B6  EE21  F048         	lfsr	2,_rgb+72	;volatile
  2644  0069BA  EE10  F01C         	lfsr	1,rotate_l@tempc
  2645  0069BE  0E05               	movlw	5
  2646  0069C0                     u1081:
  2647  0069C0  CFDB FFE3          	movff	plusw2,plusw1
  2648  0069C4  06E8               	decf	wreg,f,c
  2649  0069C6  E2FC               	bc	u1081
  2650                           
  2651                           ;newmain.c: 210:             rgbarray tempd = rgb[13];
  2652  0069C8  EE21  F04E         	lfsr	2,_rgb+78	;volatile
  2653  0069CC  EE10  F022         	lfsr	1,rotate_l@tempd
  2654  0069D0  0E05               	movlw	5
  2655  0069D2                     u1091:
  2656  0069D2  CFDB FFE3          	movff	plusw2,plusw1
  2657  0069D6  06E8               	decf	wreg,f,c
  2658  0069D8  E2FC               	bc	u1091
  2659  0069DA                     
  2660                           ;newmain.c: 211:             rgb[12].r = rgb[8].r;rgb[13].r = rgb[9].r;
  2661  0069DA  C130  F148         	movff	_rgb+48,_rgb+72	;volatile
  2662  0069DE  C131  F149         	movff	_rgb+49,_rgb+73	;volatile
  2663  0069E2  C136  F14E         	movff	_rgb+54,_rgb+78	;volatile
  2664  0069E6  C137  F14F         	movff	_rgb+55,_rgb+79	;volatile
  2665  0069EA                     
  2666                           ;newmain.c: 212:             rgb[12].g = rgb[8].g;rgb[13].g = rgb[9].g;
  2667  0069EA  C132  F14A         	movff	_rgb+50,_rgb+74	;volatile
  2668  0069EE  C133  F14B         	movff	_rgb+51,_rgb+75	;volatile
  2669  0069F2  C138  F150         	movff	_rgb+56,_rgb+80	;volatile
  2670  0069F6  C139  F151         	movff	_rgb+57,_rgb+81	;volatile
  2671  0069FA                     
  2672                           ;newmain.c: 213:             rgb[12].b = rgb[8].b;rgb[13].b = rgb[9].b;
  2673  0069FA  C134  F14C         	movff	_rgb+52,_rgb+76	;volatile
  2674  0069FE  C135  F14D         	movff	_rgb+53,_rgb+77	;volatile
  2675  006A02  C13A  F152         	movff	_rgb+58,_rgb+82	;volatile
  2676  006A06  C13B  F153         	movff	_rgb+59,_rgb+83	;volatile
  2677  006A0A                     
  2678                           ;newmain.c: 214:             rgb[8].r = rgb[4].r;rgb[9].r = rgb[5].r;
  2679  006A0A  C118  F130         	movff	_rgb+24,_rgb+48	;volatile
  2680  006A0E  C119  F131         	movff	_rgb+25,_rgb+49	;volatile
  2681  006A12  C11E  F136         	movff	_rgb+30,_rgb+54	;volatile
  2682  006A16  C11F  F137         	movff	_rgb+31,_rgb+55	;volatile
  2683  006A1A                     
  2684                           ;newmain.c: 215:             rgb[8].g = rgb[4].g;rgb[9].g = rgb[5].g;
  2685  006A1A  C11A  F132         	movff	_rgb+26,_rgb+50	;volatile
  2686  006A1E  C11B  F133         	movff	_rgb+27,_rgb+51	;volatile
  2687  006A22  C120  F138         	movff	_rgb+32,_rgb+56	;volatile
  2688  006A26  C121  F139         	movff	_rgb+33,_rgb+57	;volatile
  2689  006A2A                     
  2690                           ;newmain.c: 216:             rgb[8].b = rgb[4].b;rgb[9].b = rgb[5].b;
  2691  006A2A  C11C  F134         	movff	_rgb+28,_rgb+52	;volatile
  2692  006A2E  C11D  F135         	movff	_rgb+29,_rgb+53	;volatile
  2693  006A32  C122  F13A         	movff	_rgb+34,_rgb+58	;volatile
  2694  006A36  C123  F13B         	movff	_rgb+35,_rgb+59	;volatile
  2695  006A3A                     
  2696                           ;newmain.c: 217:             rgb[4].r = rgb[0].r;rgb[5].r = rgb[1].r;
  2697  006A3A  C100  F118         	movff	_rgb,_rgb+24	;volatile
  2698  006A3E  C101  F119         	movff	_rgb+1,_rgb+25	;volatile
  2699  006A42  C106  F11E         	movff	_rgb+6,_rgb+30	;volatile
  2700  006A46  C107  F11F         	movff	_rgb+7,_rgb+31	;volatile
  2701  006A4A                     
  2702                           ;newmain.c: 218:             rgb[4].g = rgb[0].g;rgb[5].g = rgb[1].g;
  2703  006A4A  C102  F11A         	movff	_rgb+2,_rgb+26	;volatile
  2704  006A4E  C103  F11B         	movff	_rgb+3,_rgb+27	;volatile
  2705  006A52  C108  F120         	movff	_rgb+8,_rgb+32	;volatile
  2706  006A56  C109  F121         	movff	_rgb+9,_rgb+33	;volatile
  2707  006A5A                     
  2708                           ;newmain.c: 219:             rgb[4].b = rgb[0].b;rgb[5].b = rgb[1].b;
  2709  006A5A  C104  F11C         	movff	_rgb+4,_rgb+28	;volatile
  2710  006A5E  C105  F11D         	movff	_rgb+5,_rgb+29	;volatile
  2711  006A62  C10A  F122         	movff	_rgb+10,_rgb+34	;volatile
  2712  006A66  C10B  F123         	movff	_rgb+11,_rgb+35	;volatile
  2713  006A6A                     
  2714                           ;newmain.c: 220:             rgb[0].r = tempc.r;rgb[1].r = tempd.r;
  2715  006A6A  C01C  F100         	movff	rotate_l@tempc,_rgb	;volatile
  2716  006A6E  C01D  F101         	movff	rotate_l@tempc+1,_rgb+1	;volatile
  2717  006A72  C022  F106         	movff	rotate_l@tempd,_rgb+6	;volatile
  2718  006A76  C023  F107         	movff	rotate_l@tempd+1,_rgb+7	;volatile
  2719  006A7A                     
  2720                           ;newmain.c: 221:             rgb[0].g = tempc.g;rgb[1].g = tempd.g;
  2721  006A7A  C01E  F102         	movff	rotate_l@tempc+2,_rgb+2	;volatile
  2722  006A7E  C01F  F103         	movff	rotate_l@tempc+3,_rgb+3	;volatile
  2723  006A82  C024  F108         	movff	rotate_l@tempd+2,_rgb+8	;volatile
  2724  006A86  C025  F109         	movff	rotate_l@tempd+3,_rgb+9	;volatile
  2725  006A8A                     
  2726                           ;newmain.c: 222:             rgb[0].b = tempc.b;rgb[1].b = tempd.b;
  2727  006A8A  C020  F104         	movff	rotate_l@tempc+4,_rgb+4	;volatile
  2728  006A8E  C021  F105         	movff	rotate_l@tempc+5,_rgb+5	;volatile
  2729  006A92  C026  F10A         	movff	rotate_l@tempd+4,_rgb+10	;volatile
  2730  006A96  C027  F10B         	movff	rotate_l@tempd+5,_rgb+11	;volatile
  2731  006A9A                     
  2732                           ;newmain.c: 223:             buf--;
  2733  006A9A  060E               	decf	rotate_l@buf_275^0,f,c
  2734  006A9C  A0D8               	btfss	status,0,c
  2735  006A9E  060F               	decf	(rotate_l@buf_275+1)^0,f,c
  2736  006AA0                     l2172:
  2737                           
  2738                           ;newmain.c: 208:         while(buf>0){
  2739  006AA0  BE0F               	btfsc	(rotate_l@buf_275+1)^0,7,c
  2740  006AA2  EF5D  F035         	goto	u1100
  2741  006AA6  500F               	movf	(rotate_l@buf_275+1)^0,w,c
  2742  006AA8  E106               	bnz	u1101
  2743  006AAA  040E               	decf	rotate_l@buf_275^0,w,c
  2744  006AAC  B0D8               	btfsc	status,0,c
  2745  006AAE  EF5B  F035         	goto	u1101
  2746  006AB2  EF5D  F035         	goto	u1100
  2747  006AB6                     u1101:
  2748  006AB6  EFDB  F034         	goto	l2120
  2749  006ABA                     u1100:
  2750  006ABA                     l84:
  2751  006ABA  0012               	return		;funcret
  2752  006ABC                     __end_of_rotate_l:
  2753                           	opt callstack 0
  2754                           
  2755 ;; *************** function _rotate_bot *****************
  2756 ;; Defined at:
  2757 ;;		line 275 in file "newmain.c"
  2758 ;; Parameters:    Size  Location     Type
  2759 ;;  val             2    8[COMRAM] int 
  2760 ;; Auto vars:     Size  Location     Type
  2761 ;;  tempd           6   33[COMRAM] struct RGB
  2762 ;;  tempc           6   27[COMRAM] struct RGB
  2763 ;;  tempb           6   21[COMRAM] struct RGB
  2764 ;;  tempa           6   15[COMRAM] struct RGB
  2765 ;;  buf             2   13[COMRAM] int 
  2766 ;;  buf             2   11[COMRAM] int 
  2767 ;; Return value:  Size  Location     Type
  2768 ;;                  1    wreg      void 
  2769 ;; Registers used:
  2770 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  2771 ;; Tracked objects:
  2772 ;;		On entry : 0/0
  2773 ;;		On exit  : 0/0
  2774 ;;		Unchanged: 0/0
  2775 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2776 ;;      Params:         2       0       0       0       0       0       0
  2777 ;;      Locals:        28       0       0       0       0       0       0
  2778 ;;      Temps:          1       0       0       0       0       0       0
  2779 ;;      Totals:        31       0       0       0       0       0       0
  2780 ;;Total ram usage:       31 bytes
  2781 ;; Hardware stack levels used:    1
  2782 ;; This function calls:
  2783 ;;		Nothing
  2784 ;; This function is called by:
  2785 ;;		_main
  2786 ;; This function uses a non-reentrant model
  2787 ;;
  2788                           
  2789                           	psect	text6
  2790  0065A0                     __ptext6:
  2791                           	opt callstack 0
  2792  0065A0                     _rotate_bot:
  2793                           	opt callstack 30
  2794  0065A0                     
  2795                           ;newmain.c: 277:     if(val > 3){
  2796  0065A0  BE0A               	btfsc	(rotate_bot@val+1)^0,7,c
  2797  0065A2  EFDC  F032         	goto	u1201
  2798  0065A6  500A               	movf	(rotate_bot@val+1)^0,w,c
  2799  0065A8  E109               	bnz	u1200
  2800  0065AA  0E04               	movlw	4
  2801  0065AC  5C09               	subwf	rotate_bot@val^0,w,c
  2802  0065AE  A0D8               	btfss	status,0,c
  2803  0065B0  EFDC  F032         	goto	u1201
  2804  0065B4  EFDE  F032         	goto	u1200
  2805  0065B8                     u1201:
  2806  0065B8  EFE2  F032         	goto	l2298
  2807  0065BC                     u1200:
  2808  0065BC                     
  2809                           ;newmain.c: 278:         val = 3;
  2810  0065BC  0E00               	movlw	0
  2811  0065BE  6E0A               	movwf	(rotate_bot@val+1)^0,c
  2812  0065C0  0E03               	movlw	3
  2813  0065C2  6E09               	movwf	rotate_bot@val^0,c
  2814  0065C4                     l2298:
  2815                           
  2816                           ;newmain.c: 280:     if(val>original[1]){
  2817  0065C4  5009               	movf	rotate_bot@val^0,w,c
  2818  0065C6  5C41               	subwf	(_original+2)^0,w,c	;volatile
  2819  0065C8  5042               	movf	(_original+3)^0,w,c	;volatile
  2820  0065CA  0A80               	xorlw	128
  2821  0065CC  6E0B               	movwf	??_rotate_bot^0,c
  2822  0065CE  500A               	movf	(rotate_bot@val+1)^0,w,c
  2823  0065D0  0A80               	xorlw	128
  2824  0065D2  580B               	subwfb	??_rotate_bot^0,w,c
  2825  0065D4  B0D8               	btfsc	status,0,c
  2826  0065D6  EFEF  F032         	goto	u1211
  2827  0065DA  EFF1  F032         	goto	u1210
  2828  0065DE                     u1211:
  2829  0065DE  EF7D  F033         	goto	l2356
  2830  0065E2                     u1210:
  2831  0065E2                     
  2832                           ;newmain.c: 281:         int buf = val-original[1];
  2833  0065E2  5041               	movf	(_original+2)^0,w,c	;volatile
  2834  0065E4  5C09               	subwf	rotate_bot@val^0,w,c
  2835  0065E6  6E0C               	movwf	rotate_bot@buf^0,c
  2836  0065E8  5042               	movf	(_original+3)^0,w,c	;volatile
  2837  0065EA  580A               	subwfb	(rotate_bot@val+1)^0,w,c
  2838  0065EC  6E0D               	movwf	(rotate_bot@buf+1)^0,c
  2839                           
  2840                           ;newmain.c: 282:         while(buf>0){
  2841  0065EE  EF6E  F033         	goto	l2354
  2842  0065F2                     l2302:
  2843                           
  2844                           ;newmain.c: 283:             rgbarray tempa = rgb[1];
  2845  0065F2  EE21  F006         	lfsr	2,_rgb+6	;volatile
  2846  0065F6  EE10  F010         	lfsr	1,rotate_bot@tempa
  2847  0065FA  0E05               	movlw	5
  2848  0065FC                     u1221:
  2849  0065FC  CFDB FFE3          	movff	plusw2,plusw1
  2850  006600  06E8               	decf	wreg,f,c
  2851  006602  E2FC               	bc	u1221
  2852                           
  2853                           ;newmain.c: 284:             rgbarray tempb = rgb[2];
  2854  006604  EE21  F00C         	lfsr	2,_rgb+12	;volatile
  2855  006608  EE10  F016         	lfsr	1,rotate_bot@tempb
  2856  00660C  0E05               	movlw	5
  2857  00660E                     u1231:
  2858  00660E  CFDB FFE3          	movff	plusw2,plusw1
  2859  006612  06E8               	decf	wreg,f,c
  2860  006614  E2FC               	bc	u1231
  2861  006616                     
  2862                           ;newmain.c: 285:             rgb[1].r = rgb[18].r;rgb[2].r = rgb[19].r;
  2863  006616  C16C  F106         	movff	_rgb+108,_rgb+6	;volatile
  2864  00661A  C16D  F107         	movff	_rgb+109,_rgb+7	;volatile
  2865  00661E  C172  F10C         	movff	_rgb+114,_rgb+12	;volatile
  2866  006622  C173  F10D         	movff	_rgb+115,_rgb+13	;volatile
  2867  006626                     
  2868                           ;newmain.c: 286:             rgb[1].g = rgb[18].g;rgb[2].g = rgb[19].g;
  2869  006626  C16E  F108         	movff	_rgb+110,_rgb+8	;volatile
  2870  00662A  C16F  F109         	movff	_rgb+111,_rgb+9	;volatile
  2871  00662E  C174  F10E         	movff	_rgb+116,_rgb+14	;volatile
  2872  006632  C175  F10F         	movff	_rgb+117,_rgb+15	;volatile
  2873  006636                     
  2874                           ;newmain.c: 287:             rgb[1].b = rgb[18].b;rgb[2].b = rgb[19].b;
  2875  006636  C170  F10A         	movff	_rgb+112,_rgb+10	;volatile
  2876  00663A  C171  F10B         	movff	_rgb+113,_rgb+11	;volatile
  2877  00663E  C176  F110         	movff	_rgb+118,_rgb+16	;volatile
  2878  006642  C177  F111         	movff	_rgb+119,_rgb+17	;volatile
  2879  006646                     
  2880                           ;newmain.c: 288:             rgb[18].r = rgb[11].r;rgb[19].r = rgb[8].r;
  2881  006646  C142  F16C         	movff	_rgb+66,_rgb+108	;volatile
  2882  00664A  C143  F16D         	movff	_rgb+67,_rgb+109	;volatile
  2883  00664E  C130  F172         	movff	_rgb+48,_rgb+114	;volatile
  2884  006652  C131  F173         	movff	_rgb+49,_rgb+115	;volatile
  2885  006656                     
  2886                           ;newmain.c: 289:             rgb[18].g = rgb[11].g;rgb[19].g = rgb[8].g;
  2887  006656  C144  F16E         	movff	_rgb+68,_rgb+110	;volatile
  2888  00665A  C145  F16F         	movff	_rgb+69,_rgb+111	;volatile
  2889  00665E  C132  F174         	movff	_rgb+50,_rgb+116	;volatile
  2890  006662  C133  F175         	movff	_rgb+51,_rgb+117	;volatile
  2891  006666                     
  2892                           ;newmain.c: 290:             rgb[18].b = rgb[11].b;rgb[19].b = rgb[8].b;
  2893  006666  C146  F170         	movff	_rgb+70,_rgb+112	;volatile
  2894  00666A  C147  F171         	movff	_rgb+71,_rgb+113	;volatile
  2895  00666E  C134  F176         	movff	_rgb+52,_rgb+118	;volatile
  2896  006672  C135  F177         	movff	_rgb+53,_rgb+119	;volatile
  2897  006676                     
  2898                           ;newmain.c: 291:             rgb[11].r = rgb[20].r;rgb[8].r = rgb[21].r;
  2899  006676  C178  F142         	movff	_rgb+120,_rgb+66	;volatile
  2900  00667A  C179  F143         	movff	_rgb+121,_rgb+67	;volatile
  2901  00667E  C17E  F130         	movff	_rgb+126,_rgb+48	;volatile
  2902  006682  C17F  F131         	movff	_rgb+127,_rgb+49	;volatile
  2903  006686                     
  2904                           ;newmain.c: 292:             rgb[11].g = rgb[20].g;rgb[8].g = rgb[21].g;
  2905  006686  C17A  F144         	movff	_rgb+122,_rgb+68	;volatile
  2906  00668A  C17B  F145         	movff	_rgb+123,_rgb+69	;volatile
  2907  00668E  C180  F132         	movff	_rgb+128,_rgb+50	;volatile
  2908  006692  C181  F133         	movff	_rgb+129,_rgb+51	;volatile
  2909  006696                     
  2910                           ;newmain.c: 293:             rgb[11].b = rgb[20].b;rgb[8].b = rgb[21].b;
  2911  006696  C17C  F146         	movff	_rgb+124,_rgb+70	;volatile
  2912  00669A  C17D  F147         	movff	_rgb+125,_rgb+71	;volatile
  2913  00669E  C182  F134         	movff	_rgb+130,_rgb+52	;volatile
  2914  0066A2  C183  F135         	movff	_rgb+131,_rgb+53	;volatile
  2915  0066A6                     
  2916                           ;newmain.c: 294:             rgb[20].r = tempa.r;rgb[21].r = tempb.r;
  2917  0066A6  C010  F178         	movff	rotate_bot@tempa,_rgb+120	;volatile
  2918  0066AA  C011  F179         	movff	rotate_bot@tempa+1,_rgb+121	;volatile
  2919  0066AE  C016  F17E         	movff	rotate_bot@tempb,_rgb+126	;volatile
  2920  0066B2  C017  F17F         	movff	rotate_bot@tempb+1,_rgb+127	;volatile
  2921  0066B6                     
  2922                           ;newmain.c: 295:             rgb[20].g = tempa.g;rgb[21].g = tempb.g;
  2923  0066B6  C012  F17A         	movff	rotate_bot@tempa+2,_rgb+122	;volatile
  2924  0066BA  C013  F17B         	movff	rotate_bot@tempa+3,_rgb+123	;volatile
  2925  0066BE  C018  F180         	movff	rotate_bot@tempb+2,_rgb+128	;volatile
  2926  0066C2  C019  F181         	movff	rotate_bot@tempb+3,_rgb+129	;volatile
  2927  0066C6                     
  2928                           ;newmain.c: 296:             rgb[20].b = tempa.b;rgb[21].b = tempb.b;
  2929  0066C6  C014  F17C         	movff	rotate_bot@tempa+4,_rgb+124	;volatile
  2930  0066CA  C015  F17D         	movff	rotate_bot@tempa+5,_rgb+125	;volatile
  2931  0066CE  C01A  F182         	movff	rotate_bot@tempb+4,_rgb+130	;volatile
  2932  0066D2  C01B  F183         	movff	rotate_bot@tempb+5,_rgb+131	;volatile
  2933  0066D6                     
  2934                           ;newmain.c: 297:             buf--;
  2935  0066D6  060C               	decf	rotate_bot@buf^0,f,c
  2936  0066D8  A0D8               	btfss	status,0,c
  2937  0066DA  060D               	decf	(rotate_bot@buf+1)^0,f,c
  2938  0066DC                     l2354:
  2939                           
  2940                           ;newmain.c: 282:         while(buf>0){
  2941  0066DC  BE0D               	btfsc	(rotate_bot@buf+1)^0,7,c
  2942  0066DE  EF7B  F033         	goto	u1240
  2943  0066E2  500D               	movf	(rotate_bot@buf+1)^0,w,c
  2944  0066E4  E106               	bnz	u1241
  2945  0066E6  040C               	decf	rotate_bot@buf^0,w,c
  2946  0066E8  B0D8               	btfsc	status,0,c
  2947  0066EA  EF79  F033         	goto	u1241
  2948  0066EE  EF7B  F033         	goto	u1240
  2949  0066F2                     u1241:
  2950  0066F2  EFF9  F032         	goto	l2302
  2951  0066F6                     u1240:
  2952  0066F6  EF16  F034         	goto	l110
  2953  0066FA                     l2356:
  2954  0066FA  5041               	movf	(_original+2)^0,w,c	;volatile
  2955  0066FC  5C09               	subwf	rotate_bot@val^0,w,c
  2956  0066FE  500A               	movf	(rotate_bot@val+1)^0,w,c
  2957  006700  0A80               	xorlw	128
  2958  006702  6E0B               	movwf	??_rotate_bot^0,c
  2959  006704  5042               	movf	(_original+3)^0,w,c	;volatile
  2960  006706  0A80               	xorlw	128
  2961  006708  580B               	subwfb	??_rotate_bot^0,w,c
  2962  00670A  B0D8               	btfsc	status,0,c
  2963  00670C  EF8A  F033         	goto	u1251
  2964  006710  EF8C  F033         	goto	u1250
  2965  006714                     u1251:
  2966  006714  EF16  F034         	goto	l110
  2967  006718                     u1250:
  2968  006718                     
  2969                           ;newmain.c: 301:         int buf = original[1]-val;
  2970  006718  5009               	movf	rotate_bot@val^0,w,c
  2971  00671A  5C41               	subwf	(_original+2)^0,w,c	;volatile
  2972  00671C  6E0E               	movwf	rotate_bot@buf_315^0,c
  2973  00671E  500A               	movf	(rotate_bot@val+1)^0,w,c
  2974  006720  5842               	subwfb	(_original+3)^0,w,c	;volatile
  2975  006722  6E0F               	movwf	(rotate_bot@buf_315+1)^0,c
  2976                           
  2977                           ;newmain.c: 302:         while(buf>0){
  2978  006724  EF09  F034         	goto	l2412
  2979  006728                     l2360:
  2980                           
  2981                           ;newmain.c: 303:             rgbarray tempc = rgb[1];
  2982  006728  EE21  F006         	lfsr	2,_rgb+6	;volatile
  2983  00672C  EE10  F01C         	lfsr	1,rotate_bot@tempc
  2984  006730  0E05               	movlw	5
  2985  006732                     u1261:
  2986  006732  CFDB FFE3          	movff	plusw2,plusw1
  2987  006736  06E8               	decf	wreg,f,c
  2988  006738  E2FC               	bc	u1261
  2989                           
  2990                           ;newmain.c: 304:             rgbarray tempd = rgb[2];
  2991  00673A  EE21  F00C         	lfsr	2,_rgb+12	;volatile
  2992  00673E  EE10  F022         	lfsr	1,rotate_bot@tempd
  2993  006742  0E05               	movlw	5
  2994  006744                     u1271:
  2995  006744  CFDB FFE3          	movff	plusw2,plusw1
  2996  006748  06E8               	decf	wreg,f,c
  2997  00674A  E2FC               	bc	u1271
  2998  00674C                     
  2999                           ;newmain.c: 305:             rgb[1].r = rgb[20].r;rgb[2].r = rgb[21].r;
  3000  00674C  C178  F106         	movff	_rgb+120,_rgb+6	;volatile
  3001  006750  C179  F107         	movff	_rgb+121,_rgb+7	;volatile
  3002  006754  C17E  F10C         	movff	_rgb+126,_rgb+12	;volatile
  3003  006758  C17F  F10D         	movff	_rgb+127,_rgb+13	;volatile
  3004  00675C                     
  3005                           ;newmain.c: 306:             rgb[1].g = rgb[20].g;rgb[2].g = rgb[21].g;
  3006  00675C  C17A  F108         	movff	_rgb+122,_rgb+8	;volatile
  3007  006760  C17B  F109         	movff	_rgb+123,_rgb+9	;volatile
  3008  006764  C180  F10E         	movff	_rgb+128,_rgb+14	;volatile
  3009  006768  C181  F10F         	movff	_rgb+129,_rgb+15	;volatile
  3010  00676C                     
  3011                           ;newmain.c: 307:             rgb[1].b = rgb[20].b;rgb[2].b = rgb[21].b;
  3012  00676C  C17C  F10A         	movff	_rgb+124,_rgb+10	;volatile
  3013  006770  C17D  F10B         	movff	_rgb+125,_rgb+11	;volatile
  3014  006774  C182  F110         	movff	_rgb+130,_rgb+16	;volatile
  3015  006778  C183  F111         	movff	_rgb+131,_rgb+17	;volatile
  3016  00677C                     
  3017                           ;newmain.c: 308:             rgb[20].r = rgb[11].r;rgb[21].r = rgb[8].r;
  3018  00677C  C142  F178         	movff	_rgb+66,_rgb+120	;volatile
  3019  006780  C143  F179         	movff	_rgb+67,_rgb+121	;volatile
  3020  006784  C130  F17E         	movff	_rgb+48,_rgb+126	;volatile
  3021  006788  C131  F17F         	movff	_rgb+49,_rgb+127	;volatile
  3022  00678C                     
  3023                           ;newmain.c: 309:             rgb[20].g = rgb[11].g;rgb[21].g = rgb[8].g;
  3024  00678C  C144  F17A         	movff	_rgb+68,_rgb+122	;volatile
  3025  006790  C145  F17B         	movff	_rgb+69,_rgb+123	;volatile
  3026  006794  C132  F180         	movff	_rgb+50,_rgb+128	;volatile
  3027  006798  C133  F181         	movff	_rgb+51,_rgb+129	;volatile
  3028  00679C                     
  3029                           ;newmain.c: 310:             rgb[20].b = rgb[11].b;rgb[21].b = rgb[8].b;
  3030  00679C  C146  F17C         	movff	_rgb+70,_rgb+124	;volatile
  3031  0067A0  C147  F17D         	movff	_rgb+71,_rgb+125	;volatile
  3032  0067A4  C134  F182         	movff	_rgb+52,_rgb+130	;volatile
  3033  0067A8  C135  F183         	movff	_rgb+53,_rgb+131	;volatile
  3034  0067AC                     
  3035                           ;newmain.c: 311:             rgb[11].r = rgb[18].r;rgb[8].r = rgb[19].r;
  3036  0067AC  C16C  F142         	movff	_rgb+108,_rgb+66	;volatile
  3037  0067B0  C16D  F143         	movff	_rgb+109,_rgb+67	;volatile
  3038  0067B4  C172  F130         	movff	_rgb+114,_rgb+48	;volatile
  3039  0067B8  C173  F131         	movff	_rgb+115,_rgb+49	;volatile
  3040  0067BC                     
  3041                           ;newmain.c: 312:             rgb[11].g = rgb[18].g;rgb[8].g = rgb[19].g;
  3042  0067BC  C16E  F144         	movff	_rgb+110,_rgb+68	;volatile
  3043  0067C0  C16F  F145         	movff	_rgb+111,_rgb+69	;volatile
  3044  0067C4  C174  F132         	movff	_rgb+116,_rgb+50	;volatile
  3045  0067C8  C175  F133         	movff	_rgb+117,_rgb+51	;volatile
  3046  0067CC                     
  3047                           ;newmain.c: 313:             rgb[11].b = rgb[18].b;rgb[8].b = rgb[19].b;
  3048  0067CC  C170  F146         	movff	_rgb+112,_rgb+70	;volatile
  3049  0067D0  C171  F147         	movff	_rgb+113,_rgb+71	;volatile
  3050  0067D4  C176  F134         	movff	_rgb+118,_rgb+52	;volatile
  3051  0067D8  C177  F135         	movff	_rgb+119,_rgb+53	;volatile
  3052  0067DC                     
  3053                           ;newmain.c: 314:             rgb[18].r = tempc.r;rgb[19].r = tempd.r;
  3054  0067DC  C01C  F16C         	movff	rotate_bot@tempc,_rgb+108	;volatile
  3055  0067E0  C01D  F16D         	movff	rotate_bot@tempc+1,_rgb+109	;volatile
  3056  0067E4  C022  F172         	movff	rotate_bot@tempd,_rgb+114	;volatile
  3057  0067E8  C023  F173         	movff	rotate_bot@tempd+1,_rgb+115	;volatile
  3058  0067EC                     
  3059                           ;newmain.c: 315:             rgb[18].g = tempc.g;rgb[19].g = tempd.g;
  3060  0067EC  C01E  F16E         	movff	rotate_bot@tempc+2,_rgb+110	;volatile
  3061  0067F0  C01F  F16F         	movff	rotate_bot@tempc+3,_rgb+111	;volatile
  3062  0067F4  C024  F174         	movff	rotate_bot@tempd+2,_rgb+116	;volatile
  3063  0067F8  C025  F175         	movff	rotate_bot@tempd+3,_rgb+117	;volatile
  3064  0067FC                     
  3065                           ;newmain.c: 316:             rgb[18].b = tempc.b;rgb[19].b = tempd.b;
  3066  0067FC  C020  F170         	movff	rotate_bot@tempc+4,_rgb+112	;volatile
  3067  006800  C021  F171         	movff	rotate_bot@tempc+5,_rgb+113	;volatile
  3068  006804  C026  F176         	movff	rotate_bot@tempd+4,_rgb+118	;volatile
  3069  006808  C027  F177         	movff	rotate_bot@tempd+5,_rgb+119	;volatile
  3070  00680C                     
  3071                           ;newmain.c: 317:             buf--;
  3072  00680C  060E               	decf	rotate_bot@buf_315^0,f,c
  3073  00680E  A0D8               	btfss	status,0,c
  3074  006810  060F               	decf	(rotate_bot@buf_315+1)^0,f,c
  3075  006812                     l2412:
  3076                           
  3077                           ;newmain.c: 302:         while(buf>0){
  3078  006812  BE0F               	btfsc	(rotate_bot@buf_315+1)^0,7,c
  3079  006814  EF16  F034         	goto	u1280
  3080  006818  500F               	movf	(rotate_bot@buf_315+1)^0,w,c
  3081  00681A  E106               	bnz	u1281
  3082  00681C  040E               	decf	rotate_bot@buf_315^0,w,c
  3083  00681E  B0D8               	btfsc	status,0,c
  3084  006820  EF14  F034         	goto	u1281
  3085  006824  EF16  F034         	goto	u1280
  3086  006828                     u1281:
  3087  006828  EF94  F033         	goto	l2360
  3088  00682C                     u1280:
  3089  00682C                     l110:
  3090  00682C  0012               	return		;funcret
  3091  00682E                     __end_of_rotate_bot:
  3092                           	opt callstack 0
  3093                           
  3094 ;; *************** function _initial *****************
  3095 ;; Defined at:
  3096 ;;		line 102 in file "newmain.c"
  3097 ;; Parameters:    Size  Location     Type
  3098 ;;		None
  3099 ;; Auto vars:     Size  Location     Type
  3100 ;;  i               2    6[COMRAM] int 
  3101 ;; Return value:  Size  Location     Type
  3102 ;;                  1    wreg      void 
  3103 ;; Registers used:
  3104 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3105 ;; Tracked objects:
  3106 ;;		On entry : 0/0
  3107 ;;		On exit  : 0/0
  3108 ;;		Unchanged: 0/0
  3109 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3110 ;;      Params:         0       0       0       0       0       0       0
  3111 ;;      Locals:         2       0       0       0       0       0       0
  3112 ;;      Temps:          0       0       0       0       0       0       0
  3113 ;;      Totals:         2       0       0       0       0       0       0
  3114 ;;Total ram usage:        2 bytes
  3115 ;; Hardware stack levels used:    1
  3116 ;; Hardware stack levels required when called:    1
  3117 ;; This function calls:
  3118 ;;		___wmul
  3119 ;; This function is called by:
  3120 ;;		_main
  3121 ;; This function uses a non-reentrant model
  3122 ;;
  3123                           
  3124                           	psect	text7
  3125  0074F4                     __ptext7:
  3126                           	opt callstack 0
  3127  0074F4                     _initial:
  3128                           	opt callstack 29
  3129  0074F4                     
  3130                           ;newmain.c: 103:     int i;;newmain.c: 104:     for(i = 0;i < 4;i++){
  3131  0074F4  0E00               	movlw	0
  3132  0074F6  6E08               	movwf	(initial@i+1)^0,c
  3133  0074F8  0E00               	movlw	0
  3134  0074FA  6E07               	movwf	initial@i^0,c
  3135  0074FC                     l1868:
  3136                           
  3137                           ;newmain.c: 105:         rgb[i].r = 0;
  3138  0074FC  C007  F001         	movff	initial@i,___wmul@multiplier
  3139  007500  C008  F002         	movff	initial@i+1,___wmul@multiplier+1
  3140  007504  0E00               	movlw	0
  3141  007506  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  3142  007508  0E06               	movlw	6
  3143  00750A  6E03               	movwf	___wmul@multiplicand^0,c
  3144  00750C  EC39  F032         	call	___wmul	;wreg free
  3145  007510  0E00               	movlw	low _rgb
  3146  007512  2401               	addwf	?___wmul^0,w,c
  3147  007514  6ED9               	movwf	fsr2l,c
  3148  007516  0E01               	movlw	high _rgb
  3149  007518  2002               	addwfc	(?___wmul+1)^0,w,c
  3150  00751A  6EDA               	movwf	fsr2h,c
  3151  00751C  0E00               	movlw	0
  3152  00751E  6EDE               	movwf	postinc2,c
  3153  007520  0E00               	movlw	0
  3154  007522  6EDD               	movwf	postdec2,c
  3155                           
  3156                           ;newmain.c: 106:         rgb[i].g = 1;
  3157  007524  C007  F001         	movff	initial@i,___wmul@multiplier
  3158  007528  C008  F002         	movff	initial@i+1,___wmul@multiplier+1
  3159  00752C  0E00               	movlw	0
  3160  00752E  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  3161  007530  0E06               	movlw	6
  3162  007532  6E03               	movwf	___wmul@multiplicand^0,c
  3163  007534  EC39  F032         	call	___wmul	;wreg free
  3164  007538  0E02               	movlw	low (_rgb+2)
  3165  00753A  2401               	addwf	?___wmul^0,w,c
  3166  00753C  6ED9               	movwf	fsr2l,c
  3167  00753E  0E01               	movlw	high (_rgb+2)
  3168  007540  2002               	addwfc	(?___wmul+1)^0,w,c
  3169  007542  6EDA               	movwf	fsr2h,c
  3170  007544  0E01               	movlw	1
  3171  007546  6EDE               	movwf	postinc2,c
  3172  007548  0E00               	movlw	0
  3173  00754A  6EDD               	movwf	postdec2,c
  3174                           
  3175                           ;newmain.c: 107:         rgb[i].b = 1;
  3176  00754C  C007  F001         	movff	initial@i,___wmul@multiplier
  3177  007550  C008  F002         	movff	initial@i+1,___wmul@multiplier+1
  3178  007554  0E00               	movlw	0
  3179  007556  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  3180  007558  0E06               	movlw	6
  3181  00755A  6E03               	movwf	___wmul@multiplicand^0,c
  3182  00755C  EC39  F032         	call	___wmul	;wreg free
  3183  007560  0E04               	movlw	low (_rgb+4)
  3184  007562  2401               	addwf	?___wmul^0,w,c
  3185  007564  6ED9               	movwf	fsr2l,c
  3186  007566  0E01               	movlw	high (_rgb+4)
  3187  007568  2002               	addwfc	(?___wmul+1)^0,w,c
  3188  00756A  6EDA               	movwf	fsr2h,c
  3189  00756C  0E01               	movlw	1
  3190  00756E  6EDE               	movwf	postinc2,c
  3191  007570  0E00               	movlw	0
  3192  007572  6EDD               	movwf	postdec2,c
  3193  007574                     
  3194                           ;newmain.c: 108:     }
  3195  007574  4A07               	infsnz	initial@i^0,f,c
  3196  007576  2A08               	incf	(initial@i+1)^0,f,c
  3197  007578  BE08               	btfsc	(initial@i+1)^0,7,c
  3198  00757A  EFC8  F03A         	goto	u871
  3199  00757E  5008               	movf	(initial@i+1)^0,w,c
  3200  007580  E109               	bnz	u870
  3201  007582  0E04               	movlw	4
  3202  007584  5C07               	subwf	initial@i^0,w,c
  3203  007586  A0D8               	btfss	status,0,c
  3204  007588  EFC8  F03A         	goto	u871
  3205  00758C  EFCA  F03A         	goto	u870
  3206  007590                     u871:
  3207  007590  EF7E  F03A         	goto	l1868
  3208  007594                     u870:
  3209  007594                     
  3210                           ;newmain.c: 109:     for(i = 4;i < 8;i++){
  3211  007594  0E00               	movlw	0
  3212  007596  6E08               	movwf	(initial@i+1)^0,c
  3213  007598  0E04               	movlw	4
  3214  00759A  6E07               	movwf	initial@i^0,c
  3215  00759C                     l1880:
  3216                           
  3217                           ;newmain.c: 110:         rgb[i].r = 1;
  3218  00759C  C007  F001         	movff	initial@i,___wmul@multiplier
  3219  0075A0  C008  F002         	movff	initial@i+1,___wmul@multiplier+1
  3220  0075A4  0E00               	movlw	0
  3221  0075A6  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  3222  0075A8  0E06               	movlw	6
  3223  0075AA  6E03               	movwf	___wmul@multiplicand^0,c
  3224  0075AC  EC39  F032         	call	___wmul	;wreg free
  3225  0075B0  0E00               	movlw	low _rgb
  3226  0075B2  2401               	addwf	?___wmul^0,w,c
  3227  0075B4  6ED9               	movwf	fsr2l,c
  3228  0075B6  0E01               	movlw	high _rgb
  3229  0075B8  2002               	addwfc	(?___wmul+1)^0,w,c
  3230  0075BA  6EDA               	movwf	fsr2h,c
  3231  0075BC  0E01               	movlw	1
  3232  0075BE  6EDE               	movwf	postinc2,c
  3233  0075C0  0E00               	movlw	0
  3234  0075C2  6EDD               	movwf	postdec2,c
  3235                           
  3236                           ;newmain.c: 111:         rgb[i].g = 0;
  3237  0075C4  C007  F001         	movff	initial@i,___wmul@multiplier
  3238  0075C8  C008  F002         	movff	initial@i+1,___wmul@multiplier+1
  3239  0075CC  0E00               	movlw	0
  3240  0075CE  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  3241  0075D0  0E06               	movlw	6
  3242  0075D2  6E03               	movwf	___wmul@multiplicand^0,c
  3243  0075D4  EC39  F032         	call	___wmul	;wreg free
  3244  0075D8  0E02               	movlw	low (_rgb+2)
  3245  0075DA  2401               	addwf	?___wmul^0,w,c
  3246  0075DC  6ED9               	movwf	fsr2l,c
  3247  0075DE  0E01               	movlw	high (_rgb+2)
  3248  0075E0  2002               	addwfc	(?___wmul+1)^0,w,c
  3249  0075E2  6EDA               	movwf	fsr2h,c
  3250  0075E4  0E00               	movlw	0
  3251  0075E6  6EDE               	movwf	postinc2,c
  3252  0075E8  0E00               	movlw	0
  3253  0075EA  6EDD               	movwf	postdec2,c
  3254                           
  3255                           ;newmain.c: 112:         rgb[i].b = 1;
  3256  0075EC  C007  F001         	movff	initial@i,___wmul@multiplier
  3257  0075F0  C008  F002         	movff	initial@i+1,___wmul@multiplier+1
  3258  0075F4  0E00               	movlw	0
  3259  0075F6  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  3260  0075F8  0E06               	movlw	6
  3261  0075FA  6E03               	movwf	___wmul@multiplicand^0,c
  3262  0075FC  EC39  F032         	call	___wmul	;wreg free
  3263  007600  0E04               	movlw	low (_rgb+4)
  3264  007602  2401               	addwf	?___wmul^0,w,c
  3265  007604  6ED9               	movwf	fsr2l,c
  3266  007606  0E01               	movlw	high (_rgb+4)
  3267  007608  2002               	addwfc	(?___wmul+1)^0,w,c
  3268  00760A  6EDA               	movwf	fsr2h,c
  3269  00760C  0E01               	movlw	1
  3270  00760E  6EDE               	movwf	postinc2,c
  3271  007610  0E00               	movlw	0
  3272  007612  6EDD               	movwf	postdec2,c
  3273  007614                     
  3274                           ;newmain.c: 113:     }
  3275  007614  4A07               	infsnz	initial@i^0,f,c
  3276  007616  2A08               	incf	(initial@i+1)^0,f,c
  3277  007618  BE08               	btfsc	(initial@i+1)^0,7,c
  3278  00761A  EF18  F03B         	goto	u881
  3279  00761E  5008               	movf	(initial@i+1)^0,w,c
  3280  007620  E109               	bnz	u880
  3281  007622  0E08               	movlw	8
  3282  007624  5C07               	subwf	initial@i^0,w,c
  3283  007626  A0D8               	btfss	status,0,c
  3284  007628  EF18  F03B         	goto	u881
  3285  00762C  EF1A  F03B         	goto	u880
  3286  007630                     u881:
  3287  007630  EFCE  F03A         	goto	l1880
  3288  007634                     u880:
  3289  007634                     
  3290                           ;newmain.c: 114:     for(i = 8;i < 12;i++){
  3291  007634  0E00               	movlw	0
  3292  007636  6E08               	movwf	(initial@i+1)^0,c
  3293  007638  0E08               	movlw	8
  3294  00763A  6E07               	movwf	initial@i^0,c
  3295  00763C                     l1892:
  3296                           
  3297                           ;newmain.c: 115:         rgb[i].r = 1;
  3298  00763C  C007  F001         	movff	initial@i,___wmul@multiplier
  3299  007640  C008  F002         	movff	initial@i+1,___wmul@multiplier+1
  3300  007644  0E00               	movlw	0
  3301  007646  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  3302  007648  0E06               	movlw	6
  3303  00764A  6E03               	movwf	___wmul@multiplicand^0,c
  3304  00764C  EC39  F032         	call	___wmul	;wreg free
  3305  007650  0E00               	movlw	low _rgb
  3306  007652  2401               	addwf	?___wmul^0,w,c
  3307  007654  6ED9               	movwf	fsr2l,c
  3308  007656  0E01               	movlw	high _rgb
  3309  007658  2002               	addwfc	(?___wmul+1)^0,w,c
  3310  00765A  6EDA               	movwf	fsr2h,c
  3311  00765C  0E01               	movlw	1
  3312  00765E  6EDE               	movwf	postinc2,c
  3313  007660  0E00               	movlw	0
  3314  007662  6EDD               	movwf	postdec2,c
  3315                           
  3316                           ;newmain.c: 116:         rgb[i].g = 1;
  3317  007664  C007  F001         	movff	initial@i,___wmul@multiplier
  3318  007668  C008  F002         	movff	initial@i+1,___wmul@multiplier+1
  3319  00766C  0E00               	movlw	0
  3320  00766E  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  3321  007670  0E06               	movlw	6
  3322  007672  6E03               	movwf	___wmul@multiplicand^0,c
  3323  007674  EC39  F032         	call	___wmul	;wreg free
  3324  007678  0E02               	movlw	low (_rgb+2)
  3325  00767A  2401               	addwf	?___wmul^0,w,c
  3326  00767C  6ED9               	movwf	fsr2l,c
  3327  00767E  0E01               	movlw	high (_rgb+2)
  3328  007680  2002               	addwfc	(?___wmul+1)^0,w,c
  3329  007682  6EDA               	movwf	fsr2h,c
  3330  007684  0E01               	movlw	1
  3331  007686  6EDE               	movwf	postinc2,c
  3332  007688  0E00               	movlw	0
  3333  00768A  6EDD               	movwf	postdec2,c
  3334                           
  3335                           ;newmain.c: 117:         rgb[i].b = 0;
  3336  00768C  C007  F001         	movff	initial@i,___wmul@multiplier
  3337  007690  C008  F002         	movff	initial@i+1,___wmul@multiplier+1
  3338  007694  0E00               	movlw	0
  3339  007696  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  3340  007698  0E06               	movlw	6
  3341  00769A  6E03               	movwf	___wmul@multiplicand^0,c
  3342  00769C  EC39  F032         	call	___wmul	;wreg free
  3343  0076A0  0E04               	movlw	low (_rgb+4)
  3344  0076A2  2401               	addwf	?___wmul^0,w,c
  3345  0076A4  6ED9               	movwf	fsr2l,c
  3346  0076A6  0E01               	movlw	high (_rgb+4)
  3347  0076A8  2002               	addwfc	(?___wmul+1)^0,w,c
  3348  0076AA  6EDA               	movwf	fsr2h,c
  3349  0076AC  0E00               	movlw	0
  3350  0076AE  6EDE               	movwf	postinc2,c
  3351  0076B0  0E00               	movlw	0
  3352  0076B2  6EDD               	movwf	postdec2,c
  3353  0076B4                     
  3354                           ;newmain.c: 118:     }
  3355  0076B4  4A07               	infsnz	initial@i^0,f,c
  3356  0076B6  2A08               	incf	(initial@i+1)^0,f,c
  3357  0076B8  BE08               	btfsc	(initial@i+1)^0,7,c
  3358  0076BA  EF68  F03B         	goto	u891
  3359  0076BE  5008               	movf	(initial@i+1)^0,w,c
  3360  0076C0  E109               	bnz	u890
  3361  0076C2  0E0C               	movlw	12
  3362  0076C4  5C07               	subwf	initial@i^0,w,c
  3363  0076C6  A0D8               	btfss	status,0,c
  3364  0076C8  EF68  F03B         	goto	u891
  3365  0076CC  EF6A  F03B         	goto	u890
  3366  0076D0                     u891:
  3367  0076D0  EF1E  F03B         	goto	l1892
  3368  0076D4                     u890:
  3369  0076D4                     
  3370                           ;newmain.c: 119:     for(i = 12;i < 16;i++){
  3371  0076D4  0E00               	movlw	0
  3372  0076D6  6E08               	movwf	(initial@i+1)^0,c
  3373  0076D8  0E0C               	movlw	12
  3374  0076DA  6E07               	movwf	initial@i^0,c
  3375  0076DC                     l1904:
  3376                           
  3377                           ;newmain.c: 120:         rgb[i].r = 0;
  3378  0076DC  C007  F001         	movff	initial@i,___wmul@multiplier
  3379  0076E0  C008  F002         	movff	initial@i+1,___wmul@multiplier+1
  3380  0076E4  0E00               	movlw	0
  3381  0076E6  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  3382  0076E8  0E06               	movlw	6
  3383  0076EA  6E03               	movwf	___wmul@multiplicand^0,c
  3384  0076EC  EC39  F032         	call	___wmul	;wreg free
  3385  0076F0  0E00               	movlw	low _rgb
  3386  0076F2  2401               	addwf	?___wmul^0,w,c
  3387  0076F4  6ED9               	movwf	fsr2l,c
  3388  0076F6  0E01               	movlw	high _rgb
  3389  0076F8  2002               	addwfc	(?___wmul+1)^0,w,c
  3390  0076FA  6EDA               	movwf	fsr2h,c
  3391  0076FC  0E00               	movlw	0
  3392  0076FE  6EDE               	movwf	postinc2,c
  3393  007700  0E00               	movlw	0
  3394  007702  6EDD               	movwf	postdec2,c
  3395                           
  3396                           ;newmain.c: 121:         rgb[i].g = 1;
  3397  007704  C007  F001         	movff	initial@i,___wmul@multiplier
  3398  007708  C008  F002         	movff	initial@i+1,___wmul@multiplier+1
  3399  00770C  0E00               	movlw	0
  3400  00770E  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  3401  007710  0E06               	movlw	6
  3402  007712  6E03               	movwf	___wmul@multiplicand^0,c
  3403  007714  EC39  F032         	call	___wmul	;wreg free
  3404  007718  0E02               	movlw	low (_rgb+2)
  3405  00771A  2401               	addwf	?___wmul^0,w,c
  3406  00771C  6ED9               	movwf	fsr2l,c
  3407  00771E  0E01               	movlw	high (_rgb+2)
  3408  007720  2002               	addwfc	(?___wmul+1)^0,w,c
  3409  007722  6EDA               	movwf	fsr2h,c
  3410  007724  0E01               	movlw	1
  3411  007726  6EDE               	movwf	postinc2,c
  3412  007728  0E00               	movlw	0
  3413  00772A  6EDD               	movwf	postdec2,c
  3414                           
  3415                           ;newmain.c: 122:         rgb[i].b = 0;
  3416  00772C  C007  F001         	movff	initial@i,___wmul@multiplier
  3417  007730  C008  F002         	movff	initial@i+1,___wmul@multiplier+1
  3418  007734  0E00               	movlw	0
  3419  007736  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  3420  007738  0E06               	movlw	6
  3421  00773A  6E03               	movwf	___wmul@multiplicand^0,c
  3422  00773C  EC39  F032         	call	___wmul	;wreg free
  3423  007740  0E04               	movlw	low (_rgb+4)
  3424  007742  2401               	addwf	?___wmul^0,w,c
  3425  007744  6ED9               	movwf	fsr2l,c
  3426  007746  0E01               	movlw	high (_rgb+4)
  3427  007748  2002               	addwfc	(?___wmul+1)^0,w,c
  3428  00774A  6EDA               	movwf	fsr2h,c
  3429  00774C  0E00               	movlw	0
  3430  00774E  6EDE               	movwf	postinc2,c
  3431  007750  0E00               	movlw	0
  3432  007752  6EDD               	movwf	postdec2,c
  3433  007754                     
  3434                           ;newmain.c: 123:     }
  3435  007754  4A07               	infsnz	initial@i^0,f,c
  3436  007756  2A08               	incf	(initial@i+1)^0,f,c
  3437  007758  BE08               	btfsc	(initial@i+1)^0,7,c
  3438  00775A  EFB8  F03B         	goto	u901
  3439  00775E  5008               	movf	(initial@i+1)^0,w,c
  3440  007760  E109               	bnz	u900
  3441  007762  0E10               	movlw	16
  3442  007764  5C07               	subwf	initial@i^0,w,c
  3443  007766  A0D8               	btfss	status,0,c
  3444  007768  EFB8  F03B         	goto	u901
  3445  00776C  EFBA  F03B         	goto	u900
  3446  007770                     u901:
  3447  007770  EF6E  F03B         	goto	l1904
  3448  007774                     u900:
  3449  007774                     
  3450                           ;newmain.c: 124:     for(i = 16;i < 20;i++){
  3451  007774  0E00               	movlw	0
  3452  007776  6E08               	movwf	(initial@i+1)^0,c
  3453  007778  0E10               	movlw	16
  3454  00777A  6E07               	movwf	initial@i^0,c
  3455  00777C                     l1916:
  3456                           
  3457                           ;newmain.c: 125:         rgb[i].r = 0;
  3458  00777C  C007  F001         	movff	initial@i,___wmul@multiplier
  3459  007780  C008  F002         	movff	initial@i+1,___wmul@multiplier+1
  3460  007784  0E00               	movlw	0
  3461  007786  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  3462  007788  0E06               	movlw	6
  3463  00778A  6E03               	movwf	___wmul@multiplicand^0,c
  3464  00778C  EC39  F032         	call	___wmul	;wreg free
  3465  007790  0E00               	movlw	low _rgb
  3466  007792  2401               	addwf	?___wmul^0,w,c
  3467  007794  6ED9               	movwf	fsr2l,c
  3468  007796  0E01               	movlw	high _rgb
  3469  007798  2002               	addwfc	(?___wmul+1)^0,w,c
  3470  00779A  6EDA               	movwf	fsr2h,c
  3471  00779C  0E00               	movlw	0
  3472  00779E  6EDE               	movwf	postinc2,c
  3473  0077A0  0E00               	movlw	0
  3474  0077A2  6EDD               	movwf	postdec2,c
  3475                           
  3476                           ;newmain.c: 126:         rgb[i].g = 0;
  3477  0077A4  C007  F001         	movff	initial@i,___wmul@multiplier
  3478  0077A8  C008  F002         	movff	initial@i+1,___wmul@multiplier+1
  3479  0077AC  0E00               	movlw	0
  3480  0077AE  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  3481  0077B0  0E06               	movlw	6
  3482  0077B2  6E03               	movwf	___wmul@multiplicand^0,c
  3483  0077B4  EC39  F032         	call	___wmul	;wreg free
  3484  0077B8  0E02               	movlw	low (_rgb+2)
  3485  0077BA  2401               	addwf	?___wmul^0,w,c
  3486  0077BC  6ED9               	movwf	fsr2l,c
  3487  0077BE  0E01               	movlw	high (_rgb+2)
  3488  0077C0  2002               	addwfc	(?___wmul+1)^0,w,c
  3489  0077C2  6EDA               	movwf	fsr2h,c
  3490  0077C4  0E00               	movlw	0
  3491  0077C6  6EDE               	movwf	postinc2,c
  3492  0077C8  0E00               	movlw	0
  3493  0077CA  6EDD               	movwf	postdec2,c
  3494                           
  3495                           ;newmain.c: 127:         rgb[i].b = 1;
  3496  0077CC  C007  F001         	movff	initial@i,___wmul@multiplier
  3497  0077D0  C008  F002         	movff	initial@i+1,___wmul@multiplier+1
  3498  0077D4  0E00               	movlw	0
  3499  0077D6  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  3500  0077D8  0E06               	movlw	6
  3501  0077DA  6E03               	movwf	___wmul@multiplicand^0,c
  3502  0077DC  EC39  F032         	call	___wmul	;wreg free
  3503  0077E0  0E04               	movlw	low (_rgb+4)
  3504  0077E2  2401               	addwf	?___wmul^0,w,c
  3505  0077E4  6ED9               	movwf	fsr2l,c
  3506  0077E6  0E01               	movlw	high (_rgb+4)
  3507  0077E8  2002               	addwfc	(?___wmul+1)^0,w,c
  3508  0077EA  6EDA               	movwf	fsr2h,c
  3509  0077EC  0E01               	movlw	1
  3510  0077EE  6EDE               	movwf	postinc2,c
  3511  0077F0  0E00               	movlw	0
  3512  0077F2  6EDD               	movwf	postdec2,c
  3513  0077F4                     
  3514                           ;newmain.c: 128:     }
  3515  0077F4  4A07               	infsnz	initial@i^0,f,c
  3516  0077F6  2A08               	incf	(initial@i+1)^0,f,c
  3517  0077F8  BE08               	btfsc	(initial@i+1)^0,7,c
  3518  0077FA  EF08  F03C         	goto	u911
  3519  0077FE  5008               	movf	(initial@i+1)^0,w,c
  3520  007800  E109               	bnz	u910
  3521  007802  0E14               	movlw	20
  3522  007804  5C07               	subwf	initial@i^0,w,c
  3523  007806  A0D8               	btfss	status,0,c
  3524  007808  EF08  F03C         	goto	u911
  3525  00780C  EF0A  F03C         	goto	u910
  3526  007810                     u911:
  3527  007810  EFBE  F03B         	goto	l1916
  3528  007814                     u910:
  3529  007814                     
  3530                           ;newmain.c: 129:     for(i = 20;i < 24;i++){
  3531  007814  0E00               	movlw	0
  3532  007816  6E08               	movwf	(initial@i+1)^0,c
  3533  007818  0E14               	movlw	20
  3534  00781A  6E07               	movwf	initial@i^0,c
  3535  00781C                     l1928:
  3536                           
  3537                           ;newmain.c: 130:         rgb[i].r = 0;
  3538  00781C  C007  F001         	movff	initial@i,___wmul@multiplier
  3539  007820  C008  F002         	movff	initial@i+1,___wmul@multiplier+1
  3540  007824  0E00               	movlw	0
  3541  007826  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  3542  007828  0E06               	movlw	6
  3543  00782A  6E03               	movwf	___wmul@multiplicand^0,c
  3544  00782C  EC39  F032         	call	___wmul	;wreg free
  3545  007830  0E00               	movlw	low _rgb
  3546  007832  2401               	addwf	?___wmul^0,w,c
  3547  007834  6ED9               	movwf	fsr2l,c
  3548  007836  0E01               	movlw	high _rgb
  3549  007838  2002               	addwfc	(?___wmul+1)^0,w,c
  3550  00783A  6EDA               	movwf	fsr2h,c
  3551  00783C  0E00               	movlw	0
  3552  00783E  6EDE               	movwf	postinc2,c
  3553  007840  0E00               	movlw	0
  3554  007842  6EDD               	movwf	postdec2,c
  3555                           
  3556                           ;newmain.c: 131:         rgb[i].g = 0;
  3557  007844  C007  F001         	movff	initial@i,___wmul@multiplier
  3558  007848  C008  F002         	movff	initial@i+1,___wmul@multiplier+1
  3559  00784C  0E00               	movlw	0
  3560  00784E  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  3561  007850  0E06               	movlw	6
  3562  007852  6E03               	movwf	___wmul@multiplicand^0,c
  3563  007854  EC39  F032         	call	___wmul	;wreg free
  3564  007858  0E02               	movlw	low (_rgb+2)
  3565  00785A  2401               	addwf	?___wmul^0,w,c
  3566  00785C  6ED9               	movwf	fsr2l,c
  3567  00785E  0E01               	movlw	high (_rgb+2)
  3568  007860  2002               	addwfc	(?___wmul+1)^0,w,c
  3569  007862  6EDA               	movwf	fsr2h,c
  3570  007864  0E00               	movlw	0
  3571  007866  6EDE               	movwf	postinc2,c
  3572  007868  0E00               	movlw	0
  3573  00786A  6EDD               	movwf	postdec2,c
  3574                           
  3575                           ;newmain.c: 132:         rgb[i].b = 0;
  3576  00786C  C007  F001         	movff	initial@i,___wmul@multiplier
  3577  007870  C008  F002         	movff	initial@i+1,___wmul@multiplier+1
  3578  007874  0E00               	movlw	0
  3579  007876  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  3580  007878  0E06               	movlw	6
  3581  00787A  6E03               	movwf	___wmul@multiplicand^0,c
  3582  00787C  EC39  F032         	call	___wmul	;wreg free
  3583  007880  0E04               	movlw	low (_rgb+4)
  3584  007882  2401               	addwf	?___wmul^0,w,c
  3585  007884  6ED9               	movwf	fsr2l,c
  3586  007886  0E01               	movlw	high (_rgb+4)
  3587  007888  2002               	addwfc	(?___wmul+1)^0,w,c
  3588  00788A  6EDA               	movwf	fsr2h,c
  3589  00788C  0E00               	movlw	0
  3590  00788E  6EDE               	movwf	postinc2,c
  3591  007890  0E00               	movlw	0
  3592  007892  6EDD               	movwf	postdec2,c
  3593  007894                     
  3594                           ;newmain.c: 133:     }
  3595  007894  4A07               	infsnz	initial@i^0,f,c
  3596  007896  2A08               	incf	(initial@i+1)^0,f,c
  3597  007898  BE08               	btfsc	(initial@i+1)^0,7,c
  3598  00789A  EF58  F03C         	goto	u921
  3599  00789E  5008               	movf	(initial@i+1)^0,w,c
  3600  0078A0  E109               	bnz	u920
  3601  0078A2  0E18               	movlw	24
  3602  0078A4  5C07               	subwf	initial@i^0,w,c
  3603  0078A6  A0D8               	btfss	status,0,c
  3604  0078A8  EF58  F03C         	goto	u921
  3605  0078AC  EF5A  F03C         	goto	u920
  3606  0078B0                     u921:
  3607  0078B0  EF0E  F03C         	goto	l1928
  3608  0078B4                     u920:
  3609  0078B4  0012               	return		;funcret
  3610  0078B6                     __end_of_initial:
  3611                           	opt callstack 0
  3612                           
  3613 ;; *************** function ___wmul *****************
  3614 ;; Defined at:
  3615 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\Umul16.c"
  3616 ;; Parameters:    Size  Location     Type
  3617 ;;  multiplier      2    0[COMRAM] unsigned int 
  3618 ;;  multiplicand    2    2[COMRAM] unsigned int 
  3619 ;; Auto vars:     Size  Location     Type
  3620 ;;  product         2    4[COMRAM] unsigned int 
  3621 ;; Return value:  Size  Location     Type
  3622 ;;                  2    0[COMRAM] unsigned int 
  3623 ;; Registers used:
  3624 ;;		wreg, status,2, status,0, prodl, prodh
  3625 ;; Tracked objects:
  3626 ;;		On entry : 0/0
  3627 ;;		On exit  : 0/0
  3628 ;;		Unchanged: 0/0
  3629 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3630 ;;      Params:         4       0       0       0       0       0       0
  3631 ;;      Locals:         2       0       0       0       0       0       0
  3632 ;;      Temps:          0       0       0       0       0       0       0
  3633 ;;      Totals:         6       0       0       0       0       0       0
  3634 ;;Total ram usage:        6 bytes
  3635 ;; Hardware stack levels used:    1
  3636 ;; This function calls:
  3637 ;;		Nothing
  3638 ;; This function is called by:
  3639 ;;		_initial
  3640 ;;		_main
  3641 ;; This function uses a non-reentrant model
  3642 ;;
  3643                           
  3644                           	psect	text8
  3645  006472                     __ptext8:
  3646                           	opt callstack 0
  3647  006472                     ___wmul:
  3648                           	opt callstack 29
  3649  006472  5001               	movf	___wmul@multiplier^0,w,c
  3650  006474  0203               	mulwf	___wmul@multiplicand^0,c
  3651  006476  CFF3 F005          	movff	prodl,___wmul@product
  3652  00647A  CFF4 F006          	movff	prodh,___wmul@product+1
  3653  00647E  5001               	movf	___wmul@multiplier^0,w,c
  3654  006480  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  3655  006482  50F3               	movf	243,w,c
  3656  006484  2606               	addwf	(___wmul@product+1)^0,f,c
  3657  006486  5002               	movf	(___wmul@multiplier+1)^0,w,c
  3658  006488  0203               	mulwf	___wmul@multiplicand^0,c
  3659  00648A  50F3               	movf	243,w,c
  3660  00648C  2606               	addwf	(___wmul@product+1)^0,f,c
  3661  00648E  C005  F001         	movff	___wmul@product,?___wmul
  3662  006492  C006  F002         	movff	___wmul@product+1,?___wmul+1
  3663  006496  0012               	return		;funcret
  3664  006498                     __end_of___wmul:
  3665                           	opt callstack 0
  3666                           
  3667 ;; *************** function ___awdiv *****************
  3668 ;; Defined at:
  3669 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\awdiv.c"
  3670 ;; Parameters:    Size  Location     Type
  3671 ;;  dividend        2    0[COMRAM] int 
  3672 ;;  divisor         2    2[COMRAM] int 
  3673 ;; Auto vars:     Size  Location     Type
  3674 ;;  quotient        2    6[COMRAM] int 
  3675 ;;  sign            1    5[COMRAM] unsigned char 
  3676 ;;  counter         1    4[COMRAM] unsigned char 
  3677 ;; Return value:  Size  Location     Type
  3678 ;;                  2    0[COMRAM] int 
  3679 ;; Registers used:
  3680 ;;		wreg, status,2, status,0
  3681 ;; Tracked objects:
  3682 ;;		On entry : 0/0
  3683 ;;		On exit  : 0/0
  3684 ;;		Unchanged: 0/0
  3685 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3686 ;;      Params:         4       0       0       0       0       0       0
  3687 ;;      Locals:         4       0       0       0       0       0       0
  3688 ;;      Temps:          0       0       0       0       0       0       0
  3689 ;;      Totals:         8       0       0       0       0       0       0
  3690 ;;Total ram usage:        8 bytes
  3691 ;; Hardware stack levels used:    1
  3692 ;; This function calls:
  3693 ;;		Nothing
  3694 ;; This function is called by:
  3695 ;;		_main
  3696 ;; This function uses a non-reentrant model
  3697 ;;
  3698                           
  3699                           	psect	text9
  3700  0064DC                     __ptext9:
  3701                           	opt callstack 0
  3702  0064DC                     ___awdiv:
  3703                           	opt callstack 30
  3704  0064DC  0E00               	movlw	0
  3705  0064DE  6E06               	movwf	___awdiv@sign^0,c
  3706  0064E0  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
  3707  0064E2  EF77  F032         	goto	u1470
  3708  0064E6  EF75  F032         	goto	u1471
  3709  0064EA                     u1471:
  3710  0064EA  EF7D  F032         	goto	l2662
  3711  0064EE                     u1470:
  3712  0064EE  6C03               	negf	___awdiv@divisor^0,c
  3713  0064F0  1E04               	comf	(___awdiv@divisor+1)^0,f,c
  3714  0064F2  B0D8               	btfsc	status,0,c
  3715  0064F4  2A04               	incf	(___awdiv@divisor+1)^0,f,c
  3716  0064F6  0E01               	movlw	1
  3717  0064F8  6E06               	movwf	___awdiv@sign^0,c
  3718  0064FA                     l2662:
  3719  0064FA  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
  3720  0064FC  EF84  F032         	goto	u1480
  3721  006500  EF82  F032         	goto	u1481
  3722  006504                     u1481:
  3723  006504  EF8A  F032         	goto	l2668
  3724  006508                     u1480:
  3725  006508  6C01               	negf	___awdiv@dividend^0,c
  3726  00650A  1E02               	comf	(___awdiv@dividend+1)^0,f,c
  3727  00650C  B0D8               	btfsc	status,0,c
  3728  00650E  2A02               	incf	(___awdiv@dividend+1)^0,f,c
  3729  006510  0E01               	movlw	1
  3730  006512  1A06               	xorwf	___awdiv@sign^0,f,c
  3731  006514                     l2668:
  3732  006514  0E00               	movlw	0
  3733  006516  6E08               	movwf	(___awdiv@quotient+1)^0,c
  3734  006518  0E00               	movlw	0
  3735  00651A  6E07               	movwf	___awdiv@quotient^0,c
  3736  00651C  5003               	movf	___awdiv@divisor^0,w,c
  3737  00651E  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
  3738  006520  B4D8               	btfsc	status,2,c
  3739  006522  EF95  F032         	goto	u1491
  3740  006526  EF97  F032         	goto	u1490
  3741  00652A                     u1491:
  3742  00652A  EFBF  F032         	goto	l2690
  3743  00652E                     u1490:
  3744  00652E  0E01               	movlw	1
  3745  006530  6E05               	movwf	___awdiv@counter^0,c
  3746  006532  EF9F  F032         	goto	l2676
  3747  006536                     l2674:
  3748  006536  90D8               	bcf	status,0,c
  3749  006538  3603               	rlcf	___awdiv@divisor^0,f,c
  3750  00653A  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
  3751  00653C  2A05               	incf	___awdiv@counter^0,f,c
  3752  00653E                     l2676:
  3753  00653E  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
  3754  006540  EFA4  F032         	goto	u1501
  3755  006544  EFA6  F032         	goto	u1500
  3756  006548                     u1501:
  3757  006548  EF9B  F032         	goto	l2674
  3758  00654C                     u1500:
  3759  00654C                     l2678:
  3760  00654C  90D8               	bcf	status,0,c
  3761  00654E  3607               	rlcf	___awdiv@quotient^0,f,c
  3762  006550  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
  3763  006552  5003               	movf	___awdiv@divisor^0,w,c
  3764  006554  5C01               	subwf	___awdiv@dividend^0,w,c
  3765  006556  5004               	movf	(___awdiv@divisor+1)^0,w,c
  3766  006558  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
  3767  00655A  A0D8               	btfss	status,0,c
  3768  00655C  EFB2  F032         	goto	u1511
  3769  006560  EFB4  F032         	goto	u1510
  3770  006564                     u1511:
  3771  006564  EFB9  F032         	goto	l2686
  3772  006568                     u1510:
  3773  006568  5003               	movf	___awdiv@divisor^0,w,c
  3774  00656A  5E01               	subwf	___awdiv@dividend^0,f,c
  3775  00656C  5004               	movf	(___awdiv@divisor+1)^0,w,c
  3776  00656E  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
  3777  006570  8007               	bsf	___awdiv@quotient^0,0,c
  3778  006572                     l2686:
  3779  006572  90D8               	bcf	status,0,c
  3780  006574  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
  3781  006576  3203               	rrcf	___awdiv@divisor^0,f,c
  3782  006578  2E05               	decfsz	___awdiv@counter^0,f,c
  3783  00657A  EFA6  F032         	goto	l2678
  3784  00657E                     l2690:
  3785  00657E  5006               	movf	___awdiv@sign^0,w,c
  3786  006580  B4D8               	btfsc	status,2,c
  3787  006582  EFC5  F032         	goto	u1521
  3788  006586  EFC7  F032         	goto	u1520
  3789  00658A                     u1521:
  3790  00658A  EFCB  F032         	goto	l2694
  3791  00658E                     u1520:
  3792  00658E  6C07               	negf	___awdiv@quotient^0,c
  3793  006590  1E08               	comf	(___awdiv@quotient+1)^0,f,c
  3794  006592  B0D8               	btfsc	status,0,c
  3795  006594  2A08               	incf	(___awdiv@quotient+1)^0,f,c
  3796  006596                     l2694:
  3797  006596  C007  F001         	movff	___awdiv@quotient,?___awdiv
  3798  00659A  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  3799  00659E  0012               	return		;funcret
  3800  0065A0                     __end_of___awdiv:
  3801                           	opt callstack 0
  3802                           
  3803 ;; *************** function _ADC_Read *****************
  3804 ;; Defined at:
  3805 ;;		line 88 in file "newmain.c"
  3806 ;; Parameters:    Size  Location     Type
  3807 ;;  channle         2    0[COMRAM] int 
  3808 ;; Auto vars:     Size  Location     Type
  3809 ;;  digital         2    4[COMRAM] int 
  3810 ;; Return value:  Size  Location     Type
  3811 ;;                  2    0[COMRAM] int 
  3812 ;; Registers used:
  3813 ;;		wreg, status,2, status,0
  3814 ;; Tracked objects:
  3815 ;;		On entry : 0/0
  3816 ;;		On exit  : 0/0
  3817 ;;		Unchanged: 0/0
  3818 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3819 ;;      Params:         2       0       0       0       0       0       0
  3820 ;;      Locals:         2       0       0       0       0       0       0
  3821 ;;      Temps:          2       0       0       0       0       0       0
  3822 ;;      Totals:         6       0       0       0       0       0       0
  3823 ;;Total ram usage:        6 bytes
  3824 ;; Hardware stack levels used:    1
  3825 ;; This function calls:
  3826 ;;		Nothing
  3827 ;; This function is called by:
  3828 ;;		_main
  3829 ;; This function uses a non-reentrant model
  3830 ;;
  3831                           
  3832                           	psect	text10
  3833  006498                     __ptext10:
  3834                           	opt callstack 0
  3835  006498                     _ADC_Read:
  3836                           	opt callstack 30
  3837  006498                     
  3838                           ;newmain.c: 88: int ADC_Read(int channle);newmain.c: 89: {;newmain.c: 90:     int digita
      +                          l;;newmain.c: 92:     ADCON0bits.CHS = channle;
  3839  006498  C001  F003         	movff	ADC_Read@channle,??_ADC_Read
  3840  00649C  4603               	rlncf	??_ADC_Read^0,f,c
  3841  00649E  4603               	rlncf	??_ADC_Read^0,f,c
  3842  0064A0  50C2               	movf	194,w,c	;volatile
  3843  0064A2  1803               	xorwf	??_ADC_Read^0,w,c
  3844  0064A4  0BC3               	andlw	-61
  3845  0064A6  1803               	xorwf	??_ADC_Read^0,w,c
  3846  0064A8  6EC2               	movwf	194,c	;volatile
  3847  0064AA                     
  3848                           ;newmain.c: 93:     ADCON0bits.GO = 1;
  3849  0064AA  82C2               	bsf	194,1,c	;volatile
  3850  0064AC                     
  3851                           ;newmain.c: 94:     ADCON0bits.ADON = 1;
  3852  0064AC  80C2               	bsf	194,0,c	;volatile
  3853  0064AE                     l40:
  3854  0064AE  B2C2               	btfsc	194,1,c	;volatile
  3855  0064B0  EF5C  F032         	goto	u861
  3856  0064B4  EF5E  F032         	goto	u860
  3857  0064B8                     u861:
  3858  0064B8  EF57  F032         	goto	l40
  3859  0064BC                     u860:
  3860  0064BC                     
  3861                           ;newmain.c: 98:     digital = (ADRESH*256) | (ADRESL);
  3862  0064BC  50C3               	movf	195,w,c	;volatile
  3863  0064BE  CFC4 F003          	movff	4036,??_ADC_Read	;volatile
  3864  0064C2  6A04               	clrf	(??_ADC_Read+1)^0,c
  3865  0064C4  C003  F004         	movff	??_ADC_Read,??_ADC_Read+1
  3866  0064C8  6A03               	clrf	??_ADC_Read^0,c
  3867  0064CA  1003               	iorwf	??_ADC_Read^0,w,c
  3868  0064CC  6E05               	movwf	ADC_Read@digital^0,c
  3869  0064CE  5004               	movf	(??_ADC_Read+1)^0,w,c
  3870  0064D0  6E06               	movwf	(ADC_Read@digital+1)^0,c
  3871  0064D2                     
  3872                           ;newmain.c: 99:     return(digital);
  3873  0064D2  C005  F001         	movff	ADC_Read@digital,?_ADC_Read
  3874  0064D6  C006  F002         	movff	ADC_Read@digital+1,?_ADC_Read+1
  3875  0064DA  0012               	return		;funcret
  3876  0064DC                     __end_of_ADC_Read:
  3877                           	opt callstack 0
  3878                           
  3879 ;; *************** function _ADC_Initialize *****************
  3880 ;; Defined at:
  3881 ;;		line 78 in file "newmain.c"
  3882 ;; Parameters:    Size  Location     Type
  3883 ;;		None
  3884 ;; Auto vars:     Size  Location     Type
  3885 ;;		None
  3886 ;; Return value:  Size  Location     Type
  3887 ;;                  1    wreg      void 
  3888 ;; Registers used:
  3889 ;;		wreg, status,2
  3890 ;; Tracked objects:
  3891 ;;		On entry : 0/0
  3892 ;;		On exit  : 0/0
  3893 ;;		Unchanged: 0/0
  3894 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3895 ;;      Params:         0       0       0       0       0       0       0
  3896 ;;      Locals:         0       0       0       0       0       0       0
  3897 ;;      Temps:          0       0       0       0       0       0       0
  3898 ;;      Totals:         0       0       0       0       0       0       0
  3899 ;;Total ram usage:        0 bytes
  3900 ;; Hardware stack levels used:    1
  3901 ;; This function calls:
  3902 ;;		Nothing
  3903 ;; This function is called by:
  3904 ;;		_main
  3905 ;; This function uses a non-reentrant model
  3906 ;;
  3907                           
  3908                           	psect	text11
  3909  00643A                     __ptext11:
  3910                           	opt callstack 0
  3911  00643A                     _ADC_Initialize:
  3912                           	opt callstack 30
  3913  00643A                     
  3914                           ;newmain.c: 80:     TRISA = 0xff;
  3915  00643A  6892               	setf	146,c	;volatile
  3916  00643C                     
  3917                           ;newmain.c: 81:     ADCON1 = 0x00;
  3918  00643C  0E00               	movlw	0
  3919  00643E  6EC1               	movwf	193,c	;volatile
  3920                           
  3921                           ;newmain.c: 82:     ADCON2 = 0x90;
  3922  006440  0E90               	movlw	144
  3923  006442  6EC0               	movwf	192,c	;volatile
  3924  006444                     
  3925                           ;newmain.c: 83:     ADFM = 1 ;
  3926  006444  8EC0               	bsf	4032,7,c	;volatile
  3927                           
  3928                           ;newmain.c: 84:     ADCON2bits.ADCS = 0;
  3929  006446  0EF8               	movlw	-8
  3930  006448  16C0               	andwf	192,f,c	;volatile
  3931                           
  3932                           ;newmain.c: 85:     ADRESH=0;
  3933  00644A  0E00               	movlw	0
  3934  00644C  6EC4               	movwf	196,c	;volatile
  3935                           
  3936                           ;newmain.c: 86:     ADRESL=0;
  3937  00644E  0E00               	movlw	0
  3938  006450  6EC3               	movwf	195,c	;volatile
  3939  006452  0012               	return		;funcret
  3940  006454                     __end_of_ADC_Initialize:
  3941                           	opt callstack 0
  3942  0000                     
  3943                           	psect	rparam
  3944  0000                     tosu	equ	0xFFF
  3945                           tosh	equ	0xFFE
  3946                           tosl	equ	0xFFD
  3947                           stkptr	equ	0xFFC
  3948                           pclatu	equ	0xFFB
  3949                           pclath	equ	0xFFA
  3950                           pcl	equ	0xFF9
  3951                           tblptru	equ	0xFF8
  3952                           tblptrh	equ	0xFF7
  3953                           tblptrl	equ	0xFF6
  3954                           tablat	equ	0xFF5
  3955                           prodh	equ	0xFF4
  3956                           prodl	equ	0xFF3
  3957                           indf0	equ	0xFEF
  3958                           postinc0	equ	0xFEE
  3959                           postdec0	equ	0xFED
  3960                           preinc0	equ	0xFEC
  3961                           plusw0	equ	0xFEB
  3962                           fsr0h	equ	0xFEA
  3963                           fsr0l	equ	0xFE9
  3964                           wreg	equ	0xFE8
  3965                           indf1	equ	0xFE7
  3966                           postinc1	equ	0xFE6
  3967                           postdec1	equ	0xFE5
  3968                           preinc1	equ	0xFE4
  3969                           plusw1	equ	0xFE3
  3970                           fsr1h	equ	0xFE2
  3971                           fsr1l	equ	0xFE1
  3972                           bsr	equ	0xFE0
  3973                           indf2	equ	0xFDF
  3974                           postinc2	equ	0xFDE
  3975                           postdec2	equ	0xFDD
  3976                           preinc2	equ	0xFDC
  3977                           plusw2	equ	0xFDB
  3978                           fsr2h	equ	0xFDA
  3979                           fsr2l	equ	0xFD9
  3980                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         156
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     62      74
    BANK0           128      0       0
    BANK1           256      0     144
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           244      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_rotate_bot
    _main->_rotate_l
    _main->_rotate_r
    _main->_rotate_sidebot
    _main->_rotate_sidetop
    _main->_rotate_top
    _rotate_top->___awdiv
    _rotate_sidetop->___awdiv
    _rotate_sidebot->___awdiv
    _rotate_r->___awdiv
    _rotate_l->___awdiv
    _rotate_bot->___awdiv
    _initial->___wmul

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                23    23      0   14744
                                             39 COMRAM    23    23      0
                     _ADC_Initialize
                           _ADC_Read
                            ___awdiv
                             ___wmul
                            _initial
                         _rotate_bot
                           _rotate_l
                           _rotate_r
                     _rotate_sidebot
                     _rotate_sidetop
                         _rotate_top
 ---------------------------------------------------------------------------------
 (1) _rotate_top                                          31    29      2     511
                                              8 COMRAM    31    29      2
                            ___awdiv (ARG)
 ---------------------------------------------------------------------------------
 (1) _rotate_sidetop                                      31    29      2     511
                                              8 COMRAM    31    29      2
                            ___awdiv (ARG)
 ---------------------------------------------------------------------------------
 (1) _rotate_sidebot                                      31    29      2     511
                                              8 COMRAM    31    29      2
                            ___awdiv (ARG)
 ---------------------------------------------------------------------------------
 (1) _rotate_r                                            31    29      2     511
                                              8 COMRAM    31    29      2
                            ___awdiv (ARG)
 ---------------------------------------------------------------------------------
 (1) _rotate_l                                            31    29      2     511
                                              8 COMRAM    31    29      2
                            ___awdiv (ARG)
 ---------------------------------------------------------------------------------
 (1) _rotate_bot                                          31    29      2     511
                                              8 COMRAM    31    29      2
                            ___awdiv (ARG)
 ---------------------------------------------------------------------------------
 (1) _initial                                              2     2      0    4479
                                              6 COMRAM     2     2      0
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4    3807
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              8     4      4    2124
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (1) _ADC_Read                                             6     4      2     501
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (1) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_Initialize
   _ADC_Read
   ___awdiv
   ___wmul
   _initial
     ___wmul
   _rotate_bot
     ___awdiv (ARG)
   _rotate_l
     ___awdiv (ARG)
   _rotate_r
     ___awdiv (ARG)
   _rotate_sidebot
     ___awdiv (ARG)
   _rotate_sidetop
     ___awdiv (ARG)
   _rotate_top
     ___awdiv (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5F3      0       0      16        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK4           100      0       0      11        0.0%
BANK4              100      0       0      12        0.0%
BITBANK3           100      0       0       9        0.0%
BANK3              100      0       0      10        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0      90       6       56.3%
BITBANK5            F4      0       0      15        0.0%
BANK5               F4      0       0      13        0.0%
BITBANK0            80      0       0       3        0.0%
BANK0               80      0       0       4        0.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     3E      4A       1       58.3%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      DA      14        0.0%
DATA                 0      0      DA      17        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Thu Dec 26 20:30:29 2019

                     l40 64AE                       l43 64DA                       l37 6452  
                     l71 6D48                       l58 78B4                       l84 6ABA  
                     l97 74F2             ___awdiv@sign 0006      ___wmul@multiplicand 0003  
            __CFG_BORV$3 000000             __CFG_CP0$OFF 000000             __CFG_CP1$OFF 000000  
           __CFG_CP2$OFF 000000             __CFG_CP3$OFF 000000                      l110 682C  
                    l123 7264                      l400 659E                      l136 6FD6  
                    l149 7B8E                      l158 7C9A                      l169 6496  
                    l850 643C                      l852 6444                      l848 643A  
           __CFG_CPB$OFF 000000             __CFG_CPD$OFF 000000                      u900 7774  
                    u901 7770                      u910 7814                      u911 7810  
                    u920 78B4                      u921 78B0                      u930 6AD8  
                    u931 6AD4                      u860 64BC                      u940 6AFE  
                    u861 64B8                      u941 6AFA                      u870 7594  
                    u871 7590                      u951 6B18                      u880 7634  
                    u881 7630                      u961 6B2A                      u890 76D4  
                    u970 6C12                      u891 76D0                      u971 6C0E  
                    u980 6C34                      u981 6C30                      u991 6C4E  
                    _rgb 0100                      wreg 000FE8             __CFG_LVP$OFF 000000  
           __CFG_WDT$OFF 000000                     l2000 6C44                     l2010 6C88  
                   l2002 6C68                     l2100 6934                     l2020 6CB0  
                   l2012 6C90                     l2004 6C70                     l2110 695C  
                   l2102 693C                     l2030 6CD8                     l2022 6CB8  
                   l2014 6C98                     l2006 6C78                     l2120 69B6  
                   l2112 6964                     l2104 6944                     l2040 6D00  
                   l2032 6CE0                     l2024 6CC0                     l2016 6CA0  
                   l2008 6C80                     l2200 731C                     l2130 69FA  
                   l2122 69DA                     l2106 694C                     l2114 696A  
                   l2050 6D28                     l2042 6D08                     l2034 6CE8  
                   l2026 6CC8                     l2018 6CA8                     l2210 7344  
                   l2202 7324                     l2300 65E2                     l2140 6A22  
                   l2132 6A02                     l2124 69E2                     l2108 6954  
                   l2060 6870                     l2116 6988                     l2044 6D10  
                   l2036 6CF0                     l2028 6CD0                     l2052 6D2E  
                   l2220 736C                     l2212 734C                     l2204 732C  
                   l2310 662E                     l2302 65F2                     l2150 6A4A  
                   l2142 6A2A                     l2134 6A0A                     l2126 69EA  
                   l2118 69A6                     l2070 68BC                     l2062 6880  
                   l2054 682E                     l2046 6D18                     l2038 6CF8  
                   l2230 7394                     l2222 7374                     l2214 7354  
                   l2206 7334                     l2400 67E4                     l2320 6656  
                   l2312 6636                     l2304 6616                     l2160 6A72  
                   l2152 6A52                     l2144 6A32                     l2136 6A12  
                   l2128 69F2                     l2080 68E4                     l2072 68C4  
                   l2064 68A4                     l2056 684A                     l2048 6D20  
                   l2240 73EE                     l2232 739C                     l2224 737C  
                   l2216 735C                     l2208 733C                     l2410 680C  
                   l2402 67EC                     l2330 667E                     l2322 665E  
                   l2314 663E                     l2306 661E                     l2170 6A9A  
                   l2162 6A7A                     l2154 6A5A                     l2146 6A3A  
                   l2138 6A1A                     l2090 690C                     l2082 68EC  
                   l2074 68CC                     l2066 68AC                     l2058 6852  
                   l2250 7432                     l2242 7412                     l2226 7384  
                   l2218 7364                     l2234 73A2                     l2404 67F4  
                   l2412 6812                     l2340 66A6                     l2332 6686  
                   l2324 6666                     l2316 6646                     l2308 6626  
                   l2164 6A82                     l2156 6A62                     l2148 6A42  
                   l2172 6AA0                     l2092 6914                     l2084 68F4  
                   l2076 68D4                     l2068 68B4                     l2500 71CC  
                   l2420 701A                     l2260 745A                     l2252 743A  
                   l2244 741A                     l2228 738C                     l2180 72A8  
                   l2236 73C0                     l2406 67FC                     l2350 66CE  
                   l2342 66AE                     l2334 668E                     l2326 666E  
                   l2318 664E                     l2166 6A8A                     l2158 6A6A  
                   l2094 691C                     l2086 68FC                     l2078 68DC  
                   l2510 71F4                     l2502 71D4                     l2430 7066  
                   l2422 702A                     l2414 6FD8                     l2270 7482  
                   l2262 7462                     l2254 7442                     l2246 7422  
                   l2238 73DE                     l2190 72F4                     l2182 72B8  
                   l2174 7266                     l2408 6804                     l2360 6728  
                   l2352 66D6                     l2344 66B6                     l2336 6696  
                   l2328 6676                     l2168 6A92                     l2096 6924  
                   l2088 6904                     l2600 6ED2                     l2520 721C  
                   l2512 71FC                     l2504 71DC                     l2440 708E  
                   l2432 706E                     l2424 704E                     l2416 6FF4  
                   l2280 74AA                     l2272 748A                     l2264 746A  
                   l2256 744A                     l2248 742A                     l2192 72FC  
                   l2184 72DC                     l2176 7282                     l2370 676C  
                   l2362 674C                     l2346 66BE                     l2338 669E  
                   l2354 66DC                     l2098 692C                     l2610 6F16  
                   l2602 6EF6                     l2530 7244                     l2522 7224  
                   l2514 7204                     l2506 71E4                     l2450 70B6  
                   l2442 7096                     l2434 7076                     l2426 7056  
                   l2418 6FFC                     l2290 74D2                     l2282 74B2  
                   l2274 7492                     l2266 7472                     l2258 7452  
                   l2194 7304                     l2186 72E4                     l2178 728A  
                   l2380 6794                     l2372 6774                     l2364 6754  
                   l2348 66C6                     l2356 66FA                     l2620 6F3E  
                   l2612 6F1E                     l2604 6EFE                     l2540 6D8C  
                   l2524 722C                     l2516 720C                     l2508 71EC  
                   l2532 724A                     l2460 70DE                     l2452 70BE  
                   l2444 709E                     l2436 707E                     l2428 705E  
                   l2284 74BA                     l2276 749A                     l2268 747A  
                   l2292 74D8                     l2196 730C                     l2188 72EC  
                   l2700 78BA                     l1910 7774                     l2390 67BC  
                   l2382 679C                     l2374 677C                     l2366 675C  
                   l2358 6718                     l2294 65A0                     l2630 6F66  
                   l2622 6F46                     l2614 6F26                     l2606 6F06  
                   l2550 6DD8                     l2542 6D9C                     l2534 6D4A  
                   l2526 7234                     l2518 7214                     l2470 7106  
                   l2462 70E6                     l2454 70C6                     l2446 70A6  
                   l2438 7086                     l2286 74C2                     l2278 74A2  
                   l2198 7314                     l2710 78CE                     l2702 78BE  
                   l1920 77F8                     l1904 76DC                     l2392 67C4  
                   l2384 67A4                     l2376 6784                     l2368 6764  
                   l2296 65BC                     l2640 6F8E                     l2632 6F6E  
                   l2624 6F4E                     l2616 6F2E                     l2608 6F0E  
                   l2560 6E00                     l2552 6DE0                     l2544 6DC0  
                   l2536 6D66                     l2528 723C                     l2480 7160  
                   l2472 710E                     l2464 70EE                     l2456 70CE  
                   l2448 70AE                     l2288 74CA                     l2800 7CC8  
                   l2720 78E0                     l2712 78D0                     l2704 78C2  
                   l1850 6498                     l1930 7894                     l1922 7814  
                   l1906 7754                     l2394 67CC                     l2386 67AC  
                   l2378 678C                     l2298 65C4                     l2650 6FB6  
                   l2642 6F96                     l2634 6F76                     l2626 6F56  
                   l2618 6F36                     l2570 6E28                     l2562 6E08  
                   l2554 6DE8                     l2546 6DC8                     l2538 6D6E  
                   l2490 71A4                     l2482 7184                     l2466 70F6  
                   l2458 70D6                     l2474 7114                     l2810 7D36  
                   l2802 7CF8                     l2730 7934                     l2722 78FA  
                   l2714 78D8                     l2706 78C6                     l1852 64AA  
                   l2660 64F6                     l1844 6472                     l1932 7898  
                   l1916 777C                     l1908 7758                     l2396 67D4  
                   l2388 67B4                     l1940 6AFE                     l2644 6F9E  
                   l2636 6F7E                     l2628 6F5E                     l2652 6FBC  
                   l2580 6E50                     l2572 6E30                     l2564 6E10  
                   l2556 6DF0                     l2548 6DD0                     l2492 71AC  
                   l2484 718C                     l2468 70FE                     l2476 7132  
                   l2820 7D58                     l2812 7D38                     l2804 7D2A  
                   l2740 79AE                     l2732 7948                     l2724 78FE  
                   l2708 78CA                     l1854 64AC                     l2670 651C  
                   l2662 64FA                     l2654 64DC                     l1846 648E  
                   l1918 77F4                     l1870 7574                     l1862 74F4  
                   l2398 67DC                     l1950 6B4A                     l1942 6B0E  
                   l1934 6ABC                     l2646 6FA6                     l2638 6F86  
                   l2590 6E78                     l2582 6E58                     l2574 6E38  
                   l2566 6E18                     l2558 6DF8                     l2494 71B4  
                   l2486 7194                     l2478 7150                     l2830 7D84  
                   l2822 7D62                     l2814 7D3A                     l2806 7D32  
                   l2750 7A36                     l2742 79CE                     l2734 7968  
                   l2726 791A                     l1856 64BC                     l2680 6552  
                   l2672 652E                     l2664 6508                     l2656 64E0  
                   l1928 781C                     l1880 759C                     l1872 7578  
                   l1960 6B72                     l1952 6B52                     l1944 6B32  
                   l1936 6AD8                     l2648 6FAE                     l2592 6E80  
                   l2584 6E60                     l2576 6E40                     l2568 6E20  
                   l2496 71BC                     l2488 719C                     l2832 7D98  
                   l2824 7D6C                     l2816 7D3C                     l2808 7D34  
                   l2760 7ABE                     l2752 7A56                     l2744 79EE  
                   l2736 7988                     l2728 7922                     l1858 64D2  
                   l2682 6568                     l2674 6536                     l2690 657E  
                   l2666 6510                     l2658 64EE                     l1882 7614  
                   l1874 7594                     l1970 6B9A                     l1962 6B7A  
                   l1954 6B5A                     l1946 6B3A                     l1938 6AE0  
                   l2586 6E68                     l2578 6E48                     l2594 6E86  
                   l2498 71C4                     l2834 7DA0                     l2826 7D76  
                   l2818 7D3E                     l2770 7B3A                     l2762 7AD2  
                   l2754 7A6A                     l2746 7A02                     l2738 799A  
                   l2692 658E                     l2684 6570                     l2676 653E  
                   l2668 6514                     l1892 763C                     l1884 7618  
                   l1868 74FC                     l1980 6BC2                     l1972 6BA2  
                   l1964 6B82                     l1956 6B62                     l1948 6B42  
                   l2588 6E70                     l2596 6EA4                     l2836 7DA4  
                   l2828 7D80                     l2780 7BEC                     l2772 7B4E  
                   l2764 7AE6                     l2756 7A7E                     l2748 7A16  
                   l2694 6596                     l2686 6572                     l2678 654C  
                   l1894 76B4                     l1886 7634                     l1990 6BEA  
                   l1982 6BCA                     l1974 6BAA                     l1966 6B8A  
                   l1958 6B6A                     l2598 6EC2                     l2790 7C5A  
                   l2782 7C1E                     l2774 7B6E                     l2766 7B06  
                   l2758 7A9E                     l2688 6578                     l1896 76B8  
                   l1992 6BF2                     l1984 6BD2                     l1976 6BB2  
                   l1968 6B92                     l2792 7C6E                     l2784 7C30  
                   l2768 7B26                     l2776 7B8E                     l1898 76D4  
                   l1986 6BDA                     l1978 6BBA                     l1994 6BF8  
                   l2794 7C7A                     l2786 7C3C                     l2778 7BBC  
                   l2698 78B6                     l1988 6BE2                     l1996 6C16  
                   l2796 7C8E                     l2788 7C4E                     l1998 6C34  
                   l2798 7C9A                     _ADFM 007E07                     u1001 6C60  
                   u1010 6D48                     u1011 6D44                     u1100 6ABA  
                   u1020 684A                     u1101 6AB6                     u1021 6846  
                   u1030 6870                     u1110 7282                     u1031 686C  
                   u1111 727E                     u1200 65BC                     u1120 72A8  
                   u1201 65B8                     u1041 688A                     u1121 72A4  
                   u1210 65E2                     u1211 65DE                     u1051 689C  
                   u1131 72C2                     u1060 6984                     u1300 701A  
                   u1221 65FC                     u1061 6980                     u1301 7016  
                   u1141 72D4                     u1070 69A6                     u1150 73BC  
                   u1231 660E                     u1071 69A2                     u1311 7034  
                   u1151 73B8                     u1240 66F6                     u1160 73DE  
                   u1241 66F2                     u1081 69C0                     u1401 6DA6  
                   u1321 7046                     u1161 73DA                     u1250 6718  
                   u1330 712E                     u1251 6714                     u1091 69D2  
                   u1411 6DB8                     u1331 712A                     u1171 73F8  
                   u1500 654C                     u1420 6EA0                     u1340 7150  
                   u1501 6548                     u1261 6732                     u1421 6E9C  
                   u1341 714C                     u1181 740A                     u1510 6568  
                   u1430 6EC2                     u1190 74F2                     _LATB 000F8A  
                   u1511 6564                     u1271 6744                     u1431 6EBE  
                   u1351 716A                     u1191 74EE                     u1520 658E  
                   u1280 682C                     u1600 7C30                     _LATD 000F8C  
                   u1521 658A                     u1281 6828                     u1441 6EDC  
                   u1361 717C                     u1601 7C2C                     u1370 7264  
                   u1290 6FF4                     u1610 7C4E                     u1530 791A  
                   u1451 6EEE                     u1371 7260                     u1291 6FF0  
                   u1611 7C4A                     u1531 7916                     u1460 6FD6  
                   u1380 6D66                     u1700 7DB8                     u1620 7C6E  
                   u1540 7934                     u1461 6FD2                     u1381 6D62  
                   u1701 7DB4                     u1621 7C6A                     u1541 7930  
                   u1470 64EE                     u1390 6D8C                     u1630 7C8E  
                   u1550 799A                     u1471 64EA                     u1391 6D88  
                   u1631 7C8A                     u1551 7996                     u1480 6508  
                   u1640 7D50                     u1560 7A02                     u1481 6504  
                   u1641 7D48                     u1561 79FE                     u1490 652E  
                   u1570 7A6A                     u1491 652A                     u1571 7A66  
                   u1580 7AD2                     u1717 7D2C                     u1581 7ACE  
                   u1590 7B3A                     u1655 7D60                     u1591 7B36  
                   u1648 7D52                     u1665 7D6A                     u1657 7D62  
                   u1690 7D98                     u1691 7D94                     u1675 7D74  
                   u1667 7D6C                     u1685 7D7E                     u1677 7D76  
                   u1686 7D80              main@val_391 0033              main@val_393 0035  
            main@val_385 002D              main@val_387 002F              main@val_389 0031  
                   _main 78B6                     fsr2h 000FDA                     indf2 000FDF  
                   fsr2l 000FD9         __end_of_ADC_Read 64DC                     prodh 000FF4  
                   prodl 000FF3                     start 0000            __CFG_IESO$OFF 000000  
          __CFG_MCLRE$ON 000000             ___param_bank 000000                    ?_main 0001  
        __end_of___awdiv 65A0          ___awdiv@divisor 0003          ___awdiv@counter 0005  
                  _TRISA 000F92                    _TRISB 000F93                    _TRISD 000F95  
         _rotate_sidebot 6D4A    rotate_sidebot@buf_355 000E           _rotate_sidetop 6FD8  
          __CFG_PWRT$OFF 000000            __CFG_WRT0$OFF 000000            __CFG_WRT1$OFF 000000  
          __CFG_WRT2$OFF 000000            __CFG_WRT3$OFF 000000           __CFG_EBTR0$OFF 000000  
         __CFG_FCMEN$OFF 000000           __CFG_EBTR1$OFF 000000           __CFG_EBTR2$OFF 000000  
         __CFG_EBTR3$OFF 000000            __CFG_WRTB$OFF 000000            __CFG_WRTC$OFF 000000  
          __CFG_WRTD$OFF 000000           __CFG_EBTRB$OFF 000000          __end_of_initial 78B6  
                  main@i 003D                    main@j 0037                    plusw1 000FE3  
                  plusw2 000FDB                    status 000FD8          __initialization 6454  
           __end_of_main 7DC0   __end_of_rotate_sidebot 6FD8                   ??_main 0028  
 __end_of_rotate_sidetop 7266            __activetblptr 000000                   _ADCON1 000FC1  
                 _ADCON2 000FC0                   _ADRESH 000FC4                   _ADRESL 000FC3  
       ___awdiv@dividend 0001           __CFG_XINST$OFF 000000                   ___wmul 6472  
              ??___awdiv 0005           __CFG_STVREN$ON 000000          ADC_Read@channle 0001  
        ADC_Read@digital 0005                   clear_0 645A                   clear_1 6466  
       ___awdiv@quotient 0007          ?_rotate_sidebot 0009          ?_rotate_sidetop 0009  
              ??_initial 0007                ?_ADC_Read 0001         __end_of_rotate_l 6ABC  
       __end_of_rotate_r 6D4A               __accesstop 0080  __end_of__initialization 646C  
        __CFG_PBADEN$OFF 000000            ___rparam_used 000001           __pcstackCOMRAM 0001  
    rotate_sidebot@tempa 0010      rotate_sidebot@tempb 0016      rotate_sidebot@tempc 001C  
    rotate_sidebot@tempd 0022               ??_ADC_Read 0003               __pbssBANK1 0100  
        rotate_l@buf_275 000E                  ?___wmul 0001            rotate_l@tempa 0010  
          rotate_l@tempb 0016            rotate_l@tempc 001C            rotate_l@tempd 0022  
          rotate_r@tempa 0010            rotate_r@tempb 0016            rotate_r@tempc 001C  
          rotate_r@tempd 0022            rotate_bot@buf 000C            rotate_bot@val 0009  
    rotate_sidetop@tempa 0010      rotate_sidetop@tempb 0016      rotate_sidetop@tempc 001C  
    rotate_sidetop@tempd 0022  __size_of_ADC_Initialize 001A          rotate_r@buf_255 000E  
          rotate_top@buf 000C            rotate_top@val 0009    rotate_sidetop@buf_335 000E  
                __Hparam 0000          rotate_bot@tempa 0010          rotate_bot@tempb 0016  
        rotate_bot@tempc 001C          rotate_bot@tempd 0022                  __Lparam 0000  
                ___awdiv 64DC          __size_of___wmul 0026                ?_rotate_l 0009  
              ?_rotate_r 0009                  __pcinit 6454                  __ramtop 0600  
                __ptext0 78B6                  __ptext1 7266                  __ptext2 6FD8  
                __ptext3 6D4A                  __ptext4 6ABC                  __ptext5 682E  
                __ptext6 65A0                  __ptext7 74F4                  __ptext8 6472  
                __ptext9 64DC                  _initial 74F4                  main@val 002B  
   end_of_initialization 646C          rotate_top@tempa 0010          rotate_top@tempb 0016  
        rotate_top@tempc 001C          rotate_top@tempd 0022                  postdec2 000FDD  
       ??_rotate_sidebot 000B                  postinc0 000FEE                  postinc2 000FDE  
       ??_rotate_sidetop 000B               ??_rotate_l 000B               ??_rotate_r 000B  
             _rotate_bot 65A0        __size_of_ADC_Read 0044               _rotate_top 7266  
         __end_of___wmul 6498           _ADC_Initialize 643A      start_initialization 6454  
      rotate_bot@buf_315 000E              rotate_l@buf 000C              rotate_l@val 0009  
            rotate_r@buf 000C              rotate_r@val 0009         __CFG_OSC$INTIO67 000000  
               ??___wmul 0005   __end_of_ADC_Initialize 6454         __CFG_LPT1OSC$OFF 000000  
            __pbssCOMRAM 003F              ?_rotate_bot 0009              ?_rotate_top 0009  
      __CFG_CCP2MX$PORTC 000000                 ?___awdiv 0001          ?_ADC_Initialize 0001  
      __size_of_rotate_l 028E        __size_of_rotate_r 028E                 ?_initial 0001  
               _ADC_Read 6498           ___wmul@product 0005                 _LATBbits 000F8A  
               _LATDbits 000F8C         __CFG_WDTPS$32768 000000      __size_of_rotate_bot 028E  
    __size_of_rotate_top 028E               _ADCON0bits 000FC2               _ADCON2bits 000FC0  
      ___wmul@multiplier 0001                main@index 0039                 __Hrparam 0000  
               __Lrparam 0000       __CFG_BOREN$SBORDIS 000000         __size_of___awdiv 00C4  
      rotate_sidebot@buf 000C        rotate_sidebot@val 0009         __size_of_initial 03C2  
      rotate_sidetop@buf 000C                 __ptext10 6498                 __ptext11 643A  
      rotate_sidetop@val 0009            __size_of_main 050A        rotate_top@buf_295 000E  
               _original 003F                 _rotate_l 682E                 _rotate_r 6ABC  
               main@temp 0029                 main@turn 003B  __size_of_rotate_sidebot 028E  
__size_of_rotate_sidetop 028E                 initial@i 0007             ??_rotate_bot 000B  
           ??_rotate_top 000B         ??_ADC_Initialize 0001       __end_of_rotate_bot 682E  
     __end_of_rotate_top 74F4  
