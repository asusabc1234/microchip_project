

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Thu Dec 19 21:33:44 2019

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     7                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1
    16                           	psect	text7,global,reloc=2,class=CODE,delta=1
    17                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text10,global,reloc=2,class=CODE,delta=1
    20                           	psect	text11,global,reloc=2,class=CODE,delta=1
    21                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    22                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    23  0000                     
    24                           ; Version 2.10
    25                           ; Generated 31/07/2019 GMT
    26                           ; 
    27                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    28                           ; All rights reserved.
    29                           ; 
    30                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    31                           ; 
    32                           ; Redistribution and use in source and binary forms, with or without modification, are
    33                           ; permitted provided that the following conditions are met:
    34                           ; 
    35                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    36                           ;        conditions and the following disclaimer.
    37                           ; 
    38                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    39                           ;        of conditions and the following disclaimer in the documentation and/or other
    40                           ;        materials provided with the distribution.
    41                           ; 
    42                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    43                           ;        software without specific prior written permission.
    44                           ; 
    45                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    46                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    47                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    48                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    49                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    50                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    51                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    52                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    53                           ; 
    54                           ; 
    55                           ; Code-generator required, PIC18F4520 Definitions
    56                           ; 
    57                           ; SFR Addresses
    58  0000                     _LATDbits	set	3980
    59  0000                     _LATD	set	3980
    60  0000                     _TRISD	set	3989
    61  0000                     _TRISA	set	3986
    62  0000                     _ADCON0bits	set	4034
    63  0000                     _ADRESL	set	4035
    64  0000                     _ADRESH	set	4036
    65  0000                     _ADCON2bits	set	4032
    66  0000                     _ADCON2	set	4032
    67  0000                     _ADCON1	set	4033
    68  0000                     _ADFM	set	32263
    69                           
    70                           ; #config settings
    71  0000                     
    72                           	psect	cinit
    73  0065F6                     __pcinit:
    74                           	opt callstack 0
    75  0065F6                     start_initialization:
    76                           	opt callstack 0
    77  0065F6                     __initialization:
    78                           	opt callstack 0
    79                           
    80                           ; Clear objects allocated to BANK1 (144 bytes)
    81  0065F6  EE01  F000         	lfsr	0,__pbssBANK1
    82  0065FA  0E90               	movlw	144
    83  0065FC                     clear_0:
    84  0065FC  6AEE               	clrf	postinc0,c
    85  0065FE  06E8               	decf	wreg,f,c
    86  006600  E1FD               	bnz	clear_0
    87                           
    88                           ; Clear objects allocated to COMRAM (12 bytes)
    89  006602  EE00  F02D         	lfsr	0,__pbssCOMRAM
    90  006606  0E0C               	movlw	12
    91  006608                     clear_1:
    92  006608  6AEE               	clrf	postinc0,c
    93  00660A  06E8               	decf	wreg,f,c
    94  00660C  E1FD               	bnz	clear_1
    95  00660E                     end_of_initialization:
    96                           	opt callstack 0
    97  00660E                     __end_of__initialization:
    98                           	opt callstack 0
    99  00660E  0100               	movlb	0
   100  006610  EF4B  F03B         	goto	_main	;jump to C main() function
   101                           
   102                           	psect	bssCOMRAM
   103  00002D                     __pbssCOMRAM:
   104                           	opt callstack 0
   105  00002D                     _original:
   106                           	opt callstack 0
   107  00002D                     	ds	12
   108                           
   109                           	psect	bssBANK1
   110  000100                     __pbssBANK1:
   111                           	opt callstack 0
   112  000100                     _rgb:
   113                           	opt callstack 0
   114  000100                     	ds	144
   115                           
   116                           	psect	cstackCOMRAM
   117  000001                     __pcstackCOMRAM:
   118                           	opt callstack 0
   119  000001                     ?_ADC_Read:
   120                           	opt callstack 0
   121  000001                     ?___wmul:
   122                           	opt callstack 0
   123  000001                     ?___awdiv:
   124                           	opt callstack 0
   125  000001                     ADC_Read@channle:
   126                           	opt callstack 0
   127  000001                     rotate_r@val:
   128                           	opt callstack 0
   129  000001                     rotate_l@val:
   130                           	opt callstack 0
   131  000001                     rotate_top@val:
   132                           	opt callstack 0
   133  000001                     rotate_bot@val:
   134                           	opt callstack 0
   135  000001                     rotate_sidetop@val:
   136                           	opt callstack 0
   137  000001                     rotate_sidebot@val:
   138                           	opt callstack 0
   139  000001                     ___wmul@multiplier:
   140                           	opt callstack 0
   141  000001                     ___awdiv@dividend:
   142                           	opt callstack 0
   143                           
   144                           ; 2 bytes @ 0x0
   145  000001                     	ds	2
   146  000003                     ??_ADC_Read:
   147  000003                     ??_rotate_r:
   148  000003                     ??_rotate_l:
   149  000003                     ??_rotate_top:
   150  000003                     ??_rotate_bot:
   151  000003                     ??_rotate_sidetop:
   152  000003                     ??_rotate_sidebot:
   153  000003                     ___wmul@multiplicand:
   154                           	opt callstack 0
   155  000003                     ___awdiv@divisor:
   156                           	opt callstack 0
   157                           
   158                           ; 2 bytes @ 0x2
   159  000003                     	ds	1
   160  000004                     rotate_r@buf:
   161                           	opt callstack 0
   162  000004                     rotate_l@buf:
   163                           	opt callstack 0
   164  000004                     rotate_top@buf:
   165                           	opt callstack 0
   166  000004                     rotate_bot@buf:
   167                           	opt callstack 0
   168  000004                     rotate_sidetop@buf:
   169                           	opt callstack 0
   170  000004                     rotate_sidebot@buf:
   171                           	opt callstack 0
   172                           
   173                           ; 2 bytes @ 0x3
   174  000004                     	ds	1
   175  000005                     ___awdiv@counter:
   176                           	opt callstack 0
   177  000005                     ADC_Read@digital:
   178                           	opt callstack 0
   179  000005                     ___wmul@product:
   180                           	opt callstack 0
   181                           
   182                           ; 2 bytes @ 0x4
   183  000005                     	ds	1
   184  000006                     ___awdiv@sign:
   185                           	opt callstack 0
   186  000006                     rotate_r@buf_207:
   187                           	opt callstack 0
   188  000006                     rotate_l@buf_227:
   189                           	opt callstack 0
   190  000006                     rotate_top@buf_247:
   191                           	opt callstack 0
   192  000006                     rotate_bot@buf_267:
   193                           	opt callstack 0
   194  000006                     rotate_sidetop@buf_287:
   195                           	opt callstack 0
   196  000006                     rotate_sidebot@buf_307:
   197                           	opt callstack 0
   198                           
   199                           ; 2 bytes @ 0x5
   200  000006                     	ds	1
   201  000007                     initial@i:
   202                           	opt callstack 0
   203  000007                     ___awdiv@quotient:
   204                           	opt callstack 0
   205                           
   206                           ; 2 bytes @ 0x6
   207  000007                     	ds	1
   208  000008                     rotate_r@tempa:
   209                           	opt callstack 0
   210  000008                     rotate_l@tempa:
   211                           	opt callstack 0
   212  000008                     rotate_top@tempa:
   213                           	opt callstack 0
   214  000008                     rotate_bot@tempa:
   215                           	opt callstack 0
   216  000008                     rotate_sidetop@tempa:
   217                           	opt callstack 0
   218  000008                     rotate_sidebot@tempa:
   219                           	opt callstack 0
   220                           
   221                           ; 6 bytes @ 0x7
   222  000008                     	ds	6
   223  00000E                     rotate_r@tempb:
   224                           	opt callstack 0
   225  00000E                     rotate_l@tempb:
   226                           	opt callstack 0
   227  00000E                     rotate_top@tempb:
   228                           	opt callstack 0
   229  00000E                     rotate_bot@tempb:
   230                           	opt callstack 0
   231  00000E                     rotate_sidetop@tempb:
   232                           	opt callstack 0
   233  00000E                     rotate_sidebot@tempb:
   234                           	opt callstack 0
   235                           
   236                           ; 6 bytes @ 0xD
   237  00000E                     	ds	6
   238  000014                     rotate_r@tempc:
   239                           	opt callstack 0
   240  000014                     rotate_l@tempc:
   241                           	opt callstack 0
   242  000014                     rotate_top@tempc:
   243                           	opt callstack 0
   244  000014                     rotate_bot@tempc:
   245                           	opt callstack 0
   246  000014                     rotate_sidetop@tempc:
   247                           	opt callstack 0
   248  000014                     rotate_sidebot@tempc:
   249                           	opt callstack 0
   250                           
   251                           ; 6 bytes @ 0x13
   252  000014                     	ds	6
   253  00001A                     rotate_r@tempd:
   254                           	opt callstack 0
   255  00001A                     rotate_l@tempd:
   256                           	opt callstack 0
   257  00001A                     rotate_top@tempd:
   258                           	opt callstack 0
   259  00001A                     rotate_bot@tempd:
   260                           	opt callstack 0
   261  00001A                     rotate_sidetop@tempd:
   262                           	opt callstack 0
   263  00001A                     rotate_sidebot@tempd:
   264                           	opt callstack 0
   265                           
   266                           ; 6 bytes @ 0x19
   267  00001A                     	ds	6
   268  000020                     ??_main:
   269                           
   270                           ; 1 bytes @ 0x1F
   271  000020                     	ds	1
   272  000021                     main@init_adc:
   273                           	opt callstack 0
   274                           
   275                           ; 2 bytes @ 0x20
   276  000021                     	ds	2
   277  000023                     main@temp:
   278                           	opt callstack 0
   279                           
   280                           ; 2 bytes @ 0x22
   281  000023                     	ds	2
   282  000025                     main@j:
   283                           	opt callstack 0
   284                           
   285                           ; 2 bytes @ 0x24
   286  000025                     	ds	2
   287  000027                     main@i:
   288                           	opt callstack 0
   289                           
   290                           ; 2 bytes @ 0x26
   291  000027                     	ds	2
   292  000029                     main@turn:
   293                           	opt callstack 0
   294                           
   295                           ; 2 bytes @ 0x28
   296  000029                     	ds	2
   297  00002B                     main@val:
   298                           	opt callstack 0
   299                           
   300                           ; 2 bytes @ 0x2A
   301  00002B                     	ds	2
   302                           
   303 ;;
   304 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   305 ;;
   306 ;; *************** function _main *****************
   307 ;; Defined at:
   308 ;;		line 416 in file "newmain.c"
   309 ;; Parameters:    Size  Location     Type
   310 ;;		None
   311 ;; Auto vars:     Size  Location     Type
   312 ;;  init_adc        2   32[COMRAM] int 
   313 ;;  val             2   42[COMRAM] int 
   314 ;;  temp            2   34[COMRAM] int 
   315 ;;  turn            2   40[COMRAM] int 
   316 ;;  i               2   38[COMRAM] int 
   317 ;;  j               2   36[COMRAM] int 
   318 ;; Return value:  Size  Location     Type
   319 ;;                  1    wreg      void 
   320 ;; Registers used:
   321 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   322 ;; Tracked objects:
   323 ;;		On entry : 0/0
   324 ;;		On exit  : 0/0
   325 ;;		Unchanged: 0/0
   326 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   327 ;;      Params:         0       0       0       0       0       0       0
   328 ;;      Locals:        12       0       0       0       0       0       0
   329 ;;      Temps:          1       0       0       0       0       0       0
   330 ;;      Totals:        13       0       0       0       0       0       0
   331 ;;Total ram usage:       13 bytes
   332 ;; Hardware stack levels required when called:    2
   333 ;; This function calls:
   334 ;;		_ADC_Initialize
   335 ;;		_ADC_Read
   336 ;;		___awdiv
   337 ;;		___wmul
   338 ;;		_initial
   339 ;;		_rotate_bot
   340 ;;		_rotate_l
   341 ;;		_rotate_r
   342 ;;		_rotate_sidebot
   343 ;;		_rotate_sidetop
   344 ;;		_rotate_top
   345 ;; This function is called by:
   346 ;;		Startup code after reset
   347 ;; This function uses a non-reentrant model
   348 ;;
   349                           
   350                           	psect	text0
   351  007696                     __ptext0:
   352                           	opt callstack 0
   353  007696                     _main:
   354                           	opt callstack 29
   355  007696                     
   356                           ;newmain.c: 417:     initial();
   357  007696  ECFF  F03C         	call	_initial	;wreg free
   358  00769A                     
   359                           ;newmain.c: 418:     ADC_Initialize();
   360  00769A  ECED  F032         	call	_ADC_Initialize	;wreg free
   361  00769E                     
   362                           ;newmain.c: 419:     TRISD =0;
   363  00769E  0E00               	movlw	0
   364  0076A0  6E95               	movwf	149,c	;volatile
   365  0076A2                     
   366                           ;newmain.c: 420:     LATD = 0;
   367  0076A2  0E00               	movlw	0
   368  0076A4  6E8C               	movwf	140,c	;volatile
   369  0076A6                     
   370                           ;newmain.c: 421:     LATDbits.LATD3 = 1;
   371  0076A6  868C               	bsf	140,3,c	;volatile
   372  0076A8                     
   373                           ;newmain.c: 422:     int i = 0;
   374  0076A8  0E00               	movlw	0
   375  0076AA  6E28               	movwf	(main@i+1)^0,c
   376  0076AC  0E00               	movlw	0
   377  0076AE  6E27               	movwf	main@i^0,c
   378  0076B0                     
   379                           ;newmain.c: 423:     int j;;newmain.c: 424:     for(j=0; j<6; j++){
   380  0076B0  0E00               	movlw	0
   381  0076B2  6E26               	movwf	(main@j+1)^0,c
   382  0076B4  0E00               	movlw	0
   383  0076B6  6E25               	movwf	main@j^0,c
   384  0076B8                     l2671:
   385                           
   386                           ;newmain.c: 425:         int init_adc = ADC_Read(j);
   387  0076B8  C025  F001         	movff	main@j,ADC_Read@channle
   388  0076BC  C026  F002         	movff	main@j+1,ADC_Read@channle+1
   389  0076C0  EC1D  F033         	call	_ADC_Read	;wreg free
   390  0076C4  C001  F021         	movff	?_ADC_Read,main@init_adc
   391  0076C8  C002  F022         	movff	?_ADC_Read+1,main@init_adc+1
   392  0076CC                     
   393                           ;newmain.c: 426:         original[j] = init_adc/300;
   394  0076CC  C021  F001         	movff	main@init_adc,___awdiv@dividend
   395  0076D0  C022  F002         	movff	main@init_adc+1,___awdiv@dividend+1
   396  0076D4  0E01               	movlw	1
   397  0076D6  6E04               	movwf	(___awdiv@divisor+1)^0,c
   398  0076D8  0E2C               	movlw	44
   399  0076DA  6E03               	movwf	___awdiv@divisor^0,c
   400  0076DC  EC3F  F033         	call	___awdiv	;wreg free
   401  0076E0  90D8               	bcf	status,0,c
   402  0076E2  3425               	rlcf	main@j^0,w,c
   403  0076E4  6ED9               	movwf	fsr2l,c
   404  0076E6  3426               	rlcf	(main@j+1)^0,w,c
   405  0076E8  6EDA               	movwf	fsr2h,c
   406  0076EA  0E2D               	movlw	low _original
   407  0076EC  26D9               	addwf	fsr2l,f,c
   408  0076EE  0E00               	movlw	high _original
   409  0076F0  22DA               	addwfc	fsr2h,f,c
   410  0076F2  C001  FFDE         	movff	?___awdiv,postinc2
   411  0076F6  C002  FFDD         	movff	?___awdiv+1,postdec2
   412  0076FA                     
   413                           ;newmain.c: 427:     }
   414  0076FA  4A25               	infsnz	main@j^0,f,c
   415  0076FC  2A26               	incf	(main@j+1)^0,f,c
   416  0076FE  BE26               	btfsc	(main@j+1)^0,7,c
   417  007700  EF8B  F03B         	goto	u1551
   418  007704  5026               	movf	(main@j+1)^0,w,c
   419  007706  E109               	bnz	u1550
   420  007708  0E06               	movlw	6
   421  00770A  5C25               	subwf	main@j^0,w,c
   422  00770C  A0D8               	btfss	status,0,c
   423  00770E  EF8B  F03B         	goto	u1551
   424  007712  EF8D  F03B         	goto	u1550
   425  007716                     u1551:
   426  007716  EF5C  F03B         	goto	l2671
   427  00771A                     u1550:
   428  00771A                     l2679:
   429                           
   430                           ;newmain.c: 428:     int turn = 0;
   431  00771A  0E00               	movlw	0
   432  00771C  6E2A               	movwf	(main@turn+1)^0,c
   433  00771E  0E00               	movlw	0
   434  007720  6E29               	movwf	main@turn^0,c
   435  007722                     l2681:
   436                           
   437                           ;newmain.c: 431:             int val = ADC_Read(turn);
   438  007722  C029  F001         	movff	main@turn,ADC_Read@channle
   439  007726  C02A  F002         	movff	main@turn+1,ADC_Read@channle+1
   440  00772A  EC1D  F033         	call	_ADC_Read	;wreg free
   441  00772E  C001  F02B         	movff	?_ADC_Read,main@val
   442  007732  C002  F02C         	movff	?_ADC_Read+1,main@val+1
   443  007736                     
   444                           ;newmain.c: 432:             val = val/300;
   445  007736  C02B  F001         	movff	main@val,___awdiv@dividend
   446  00773A  C02C  F002         	movff	main@val+1,___awdiv@dividend+1
   447  00773E  0E01               	movlw	1
   448  007740  6E04               	movwf	(___awdiv@divisor+1)^0,c
   449  007742  0E2C               	movlw	44
   450  007744  6E03               	movwf	___awdiv@divisor^0,c
   451  007746  EC3F  F033         	call	___awdiv	;wreg free
   452  00774A  C001  F02B         	movff	?___awdiv,main@val
   453  00774E  C002  F02C         	movff	?___awdiv+1,main@val+1
   454  007752                     
   455                           ;newmain.c: 433:             if(turn == 0 && val != original[0]) {
   456  007752  5029               	movf	main@turn^0,w,c
   457  007754  102A               	iorwf	(main@turn+1)^0,w,c
   458  007756  A4D8               	btfss	status,2,c
   459  007758  EFB0  F03B         	goto	u1561
   460  00775C  EFB2  F03B         	goto	u1560
   461  007760                     u1561:
   462  007760  EFCA  F03B         	goto	l2693
   463  007764                     u1560:
   464  007764  502B               	movf	main@val^0,w,c
   465  007766  182D               	xorwf	_original^0,w,c	;volatile
   466  007768  E109               	bnz	u1570
   467  00776A  502C               	movf	(main@val+1)^0,w,c
   468  00776C  182E               	xorwf	(_original+1)^0,w,c	;volatile
   469  00776E  B4D8               	btfsc	status,2,c
   470  007770  EFBC  F03B         	goto	u1571
   471  007774  EFBE  F03B         	goto	u1570
   472  007778                     u1571:
   473  007778  EFCA  F03B         	goto	l2693
   474  00777C                     u1570:
   475  00777C                     
   476                           ;newmain.c: 434:                 rotate_top(val);
   477  00777C  C02B  F001         	movff	main@val,rotate_top@val
   478  007780  C02C  F002         	movff	main@val+1,rotate_top@val+1
   479  007784  EC04  F03A         	call	_rotate_top	;wreg free
   480  007788                     
   481                           ;newmain.c: 435:                 original[0] = val;
   482  007788  C02B  F02D         	movff	main@val,_original	;volatile
   483  00778C  C02C  F02E         	movff	main@val+1,_original+1	;volatile
   484                           
   485                           ;newmain.c: 436:             }
   486  007790  EF73  F03C         	goto	l2733
   487  007794                     l2693:
   488  007794  0429               	decf	main@turn^0,w,c
   489  007796  102A               	iorwf	(main@turn+1)^0,w,c
   490  007798  A4D8               	btfss	status,2,c
   491  00779A  EFD1  F03B         	goto	u1581
   492  00779E  EFD3  F03B         	goto	u1580
   493  0077A2                     u1581:
   494  0077A2  EFEB  F03B         	goto	l2701
   495  0077A6                     u1580:
   496  0077A6  502B               	movf	main@val^0,w,c
   497  0077A8  182F               	xorwf	(_original+2)^0,w,c	;volatile
   498  0077AA  E109               	bnz	u1590
   499  0077AC  502C               	movf	(main@val+1)^0,w,c
   500  0077AE  1830               	xorwf	(_original+3)^0,w,c	;volatile
   501  0077B0  B4D8               	btfsc	status,2,c
   502  0077B2  EFDD  F03B         	goto	u1591
   503  0077B6  EFDF  F03B         	goto	u1590
   504  0077BA                     u1591:
   505  0077BA  EFEB  F03B         	goto	l2701
   506  0077BE                     u1590:
   507  0077BE                     
   508                           ;newmain.c: 438:                 rotate_bot(val);
   509  0077BE  C02B  F001         	movff	main@val,rotate_bot@val
   510  0077C2  C02C  F002         	movff	main@val+1,rotate_bot@val+1
   511  0077C6  ECA1  F033         	call	_rotate_bot	;wreg free
   512  0077CA                     
   513                           ;newmain.c: 439:                 original[1] = val;
   514  0077CA  C02B  F02F         	movff	main@val,_original+2	;volatile
   515  0077CE  C02C  F030         	movff	main@val+1,_original+3	;volatile
   516                           
   517                           ;newmain.c: 440:             }
   518  0077D2  EF73  F03C         	goto	l2733
   519  0077D6                     l2701:
   520  0077D6  0E02               	movlw	2
   521  0077D8  1829               	xorwf	main@turn^0,w,c
   522  0077DA  102A               	iorwf	(main@turn+1)^0,w,c
   523  0077DC  A4D8               	btfss	status,2,c
   524  0077DE  EFF3  F03B         	goto	u1601
   525  0077E2  EFF5  F03B         	goto	u1600
   526  0077E6                     u1601:
   527  0077E6  EF0D  F03C         	goto	l2709
   528  0077EA                     u1600:
   529  0077EA  502B               	movf	main@val^0,w,c
   530  0077EC  1831               	xorwf	(_original+4)^0,w,c	;volatile
   531  0077EE  E109               	bnz	u1610
   532  0077F0  502C               	movf	(main@val+1)^0,w,c
   533  0077F2  1832               	xorwf	(_original+5)^0,w,c	;volatile
   534  0077F4  B4D8               	btfsc	status,2,c
   535  0077F6  EFFF  F03B         	goto	u1611
   536  0077FA  EF01  F03C         	goto	u1610
   537  0077FE                     u1611:
   538  0077FE  EF0D  F03C         	goto	l2709
   539  007802                     u1610:
   540  007802                     
   541                           ;newmain.c: 442:                 rotate_r(val);
   542  007802  C02B  F001         	movff	main@val,rotate_r@val
   543  007806  C02C  F002         	movff	main@val+1,rotate_r@val+1
   544  00780A  EC2F  F036         	call	_rotate_r	;wreg free
   545  00780E                     
   546                           ;newmain.c: 443:                 original[2] = val;
   547  00780E  C02B  F031         	movff	main@val,_original+4	;volatile
   548  007812  C02C  F032         	movff	main@val+1,_original+5	;volatile
   549                           
   550                           ;newmain.c: 444:             }
   551  007816  EF73  F03C         	goto	l2733
   552  00781A                     l2709:
   553  00781A  0E03               	movlw	3
   554  00781C  1829               	xorwf	main@turn^0,w,c
   555  00781E  102A               	iorwf	(main@turn+1)^0,w,c
   556  007820  A4D8               	btfss	status,2,c
   557  007822  EF15  F03C         	goto	u1621
   558  007826  EF17  F03C         	goto	u1620
   559  00782A                     u1621:
   560  00782A  EF2F  F03C         	goto	l2717
   561  00782E                     u1620:
   562  00782E  502B               	movf	main@val^0,w,c
   563  007830  1833               	xorwf	(_original+6)^0,w,c	;volatile
   564  007832  E109               	bnz	u1630
   565  007834  502C               	movf	(main@val+1)^0,w,c
   566  007836  1834               	xorwf	(_original+7)^0,w,c	;volatile
   567  007838  B4D8               	btfsc	status,2,c
   568  00783A  EF21  F03C         	goto	u1631
   569  00783E  EF23  F03C         	goto	u1630
   570  007842                     u1631:
   571  007842  EF2F  F03C         	goto	l2717
   572  007846                     u1630:
   573  007846                     
   574                           ;newmain.c: 446:                 rotate_l(val);
   575  007846  C02B  F001         	movff	main@val,rotate_l@val
   576  00784A  C02C  F002         	movff	main@val+1,rotate_l@val+1
   577  00784E  ECE8  F034         	call	_rotate_l	;wreg free
   578  007852                     
   579                           ;newmain.c: 447:                 original[3] = val;
   580  007852  C02B  F033         	movff	main@val,_original+6	;volatile
   581  007856  C02C  F034         	movff	main@val+1,_original+7	;volatile
   582                           
   583                           ;newmain.c: 448:             }
   584  00785A  EF73  F03C         	goto	l2733
   585  00785E                     l2717:
   586  00785E  0E04               	movlw	4
   587  007860  1829               	xorwf	main@turn^0,w,c
   588  007862  102A               	iorwf	(main@turn+1)^0,w,c
   589  007864  A4D8               	btfss	status,2,c
   590  007866  EF37  F03C         	goto	u1641
   591  00786A  EF39  F03C         	goto	u1640
   592  00786E                     u1641:
   593  00786E  EF51  F03C         	goto	l2725
   594  007872                     u1640:
   595  007872  502B               	movf	main@val^0,w,c
   596  007874  1835               	xorwf	(_original+8)^0,w,c	;volatile
   597  007876  E109               	bnz	u1650
   598  007878  502C               	movf	(main@val+1)^0,w,c
   599  00787A  1836               	xorwf	(_original+9)^0,w,c	;volatile
   600  00787C  B4D8               	btfsc	status,2,c
   601  00787E  EF43  F03C         	goto	u1651
   602  007882  EF45  F03C         	goto	u1650
   603  007886                     u1651:
   604  007886  EF51  F03C         	goto	l2725
   605  00788A                     u1650:
   606  00788A                     
   607                           ;newmain.c: 450:                 rotate_sidetop(val);
   608  00788A  C02B  F001         	movff	main@val,rotate_sidetop@val
   609  00788E  C02C  F002         	movff	main@val+1,rotate_sidetop@val+1
   610  007892  ECBD  F038         	call	_rotate_sidetop	;wreg free
   611  007896                     
   612                           ;newmain.c: 451:                 original[4] = val;
   613  007896  C02B  F035         	movff	main@val,_original+8	;volatile
   614  00789A  C02C  F036         	movff	main@val+1,_original+9	;volatile
   615                           
   616                           ;newmain.c: 452:             }
   617  00789E  EF73  F03C         	goto	l2733
   618  0078A2                     l2725:
   619  0078A2  0E05               	movlw	5
   620  0078A4  1829               	xorwf	main@turn^0,w,c
   621  0078A6  102A               	iorwf	(main@turn+1)^0,w,c
   622  0078A8  A4D8               	btfss	status,2,c
   623  0078AA  EF59  F03C         	goto	u1661
   624  0078AE  EF5B  F03C         	goto	u1660
   625  0078B2                     u1661:
   626  0078B2  EF73  F03C         	goto	l141
   627  0078B6                     u1660:
   628  0078B6  502B               	movf	main@val^0,w,c
   629  0078B8  1837               	xorwf	(_original+10)^0,w,c	;volatile
   630  0078BA  E109               	bnz	u1670
   631  0078BC  502C               	movf	(main@val+1)^0,w,c
   632  0078BE  1838               	xorwf	(_original+11)^0,w,c	;volatile
   633  0078C0  B4D8               	btfsc	status,2,c
   634  0078C2  EF65  F03C         	goto	u1671
   635  0078C6  EF67  F03C         	goto	u1670
   636  0078CA                     u1671:
   637  0078CA  EF73  F03C         	goto	l141
   638  0078CE                     u1670:
   639  0078CE                     
   640                           ;newmain.c: 454:                 rotate_sidebot(val);
   641  0078CE  C02B  F001         	movff	main@val,rotate_sidebot@val
   642  0078D2  C02C  F002         	movff	main@val+1,rotate_sidebot@val+1
   643  0078D6  EC76  F037         	call	_rotate_sidebot	;wreg free
   644  0078DA                     
   645                           ;newmain.c: 455:                 original[5] = val;
   646  0078DA  C02B  F037         	movff	main@val,_original+10	;volatile
   647  0078DE  C02C  F038         	movff	main@val+1,_original+11	;volatile
   648  0078E2  EF73  F03C         	goto	l2733
   649  0078E6                     l141:
   650  0078E6                     l2733:
   651                           
   652                           ;newmain.c: 459:         LATDbits.LATD0 = rgb[i].r;
   653  0078E6  C027  F001         	movff	main@i,___wmul@multiplier
   654  0078EA  C028  F002         	movff	main@i+1,___wmul@multiplier+1
   655  0078EE  0E00               	movlw	0
   656  0078F0  6E04               	movwf	(___wmul@multiplicand+1)^0,c
   657  0078F2  0E06               	movlw	6
   658  0078F4  6E03               	movwf	___wmul@multiplicand^0,c
   659  0078F6  EC0A  F033         	call	___wmul	;wreg free
   660  0078FA  0E00               	movlw	low _rgb
   661  0078FC  2401               	addwf	?___wmul^0,w,c
   662  0078FE  6ED9               	movwf	fsr2l,c
   663  007900  0E01               	movlw	high _rgb
   664  007902  2002               	addwfc	(?___wmul+1)^0,w,c
   665  007904  6EDA               	movwf	fsr2h,c
   666  007906  50DF               	movf	indf2,w,c
   667  007908  6E20               	movwf	??_main^0,c
   668  00790A  508C               	movf	140,w,c	;volatile
   669  00790C  1820               	xorwf	??_main^0,w,c
   670  00790E  0BFE               	andlw	-2
   671  007910  1820               	xorwf	??_main^0,w,c
   672  007912  6E8C               	movwf	140,c	;volatile
   673  007914                     
   674                           ;newmain.c: 460:         LATDbits.LATD1 = rgb[i].g;
   675  007914  C027  F001         	movff	main@i,___wmul@multiplier
   676  007918  C028  F002         	movff	main@i+1,___wmul@multiplier+1
   677  00791C  0E00               	movlw	0
   678  00791E  6E04               	movwf	(___wmul@multiplicand+1)^0,c
   679  007920  0E06               	movlw	6
   680  007922  6E03               	movwf	___wmul@multiplicand^0,c
   681  007924  EC0A  F033         	call	___wmul	;wreg free
   682  007928  0E02               	movlw	low (_rgb+2)
   683  00792A  2401               	addwf	?___wmul^0,w,c
   684  00792C  6ED9               	movwf	fsr2l,c
   685  00792E  0E01               	movlw	high (_rgb+2)
   686  007930  2002               	addwfc	(?___wmul+1)^0,w,c
   687  007932  6EDA               	movwf	fsr2h,c
   688  007934  50DF               	movf	indf2,w,c
   689  007936  6E20               	movwf	??_main^0,c
   690  007938  4620               	rlncf	??_main^0,f,c
   691  00793A  508C               	movf	140,w,c	;volatile
   692  00793C  1820               	xorwf	??_main^0,w,c
   693  00793E  0BFD               	andlw	-3
   694  007940  1820               	xorwf	??_main^0,w,c
   695  007942  6E8C               	movwf	140,c	;volatile
   696  007944                     
   697                           ;newmain.c: 461:         LATDbits.LATD2 = rgb[i].b;
   698  007944  C027  F001         	movff	main@i,___wmul@multiplier
   699  007948  C028  F002         	movff	main@i+1,___wmul@multiplier+1
   700  00794C  0E00               	movlw	0
   701  00794E  6E04               	movwf	(___wmul@multiplicand+1)^0,c
   702  007950  0E06               	movlw	6
   703  007952  6E03               	movwf	___wmul@multiplicand^0,c
   704  007954  EC0A  F033         	call	___wmul	;wreg free
   705  007958  0E04               	movlw	low (_rgb+4)
   706  00795A  2401               	addwf	?___wmul^0,w,c
   707  00795C  6ED9               	movwf	fsr2l,c
   708  00795E  0E01               	movlw	high (_rgb+4)
   709  007960  2002               	addwfc	(?___wmul+1)^0,w,c
   710  007962  6EDA               	movwf	fsr2h,c
   711  007964  50DF               	movf	indf2,w,c
   712  007966  6E20               	movwf	??_main^0,c
   713  007968  4620               	rlncf	??_main^0,f,c
   714  00796A  4620               	rlncf	??_main^0,f,c
   715  00796C  508C               	movf	140,w,c	;volatile
   716  00796E  1820               	xorwf	??_main^0,w,c
   717  007970  0BFB               	andlw	-5
   718  007972  1820               	xorwf	??_main^0,w,c
   719  007974  6E8C               	movwf	140,c	;volatile
   720  007976                     
   721                           ;newmain.c: 463:         LATDbits.LATD0 = 1;
   722  007976  808C               	bsf	140,0,c	;volatile
   723  007978                     
   724                           ;newmain.c: 464:         LATDbits.LATD1 = 1;
   725  007978  828C               	bsf	140,1,c	;volatile
   726  00797A                     
   727                           ;newmain.c: 465:         LATDbits.LATD2 = 1;
   728  00797A  848C               	bsf	140,2,c	;volatile
   729  00797C                     
   730                           ;newmain.c: 466:         int temp = LATDbits.LATD6;
   731  00797C  BC8C               	btfsc	140,6,c	;volatile
   732  00797E  EFC3  F03C         	goto	u1681
   733  007982  EFC7  F03C         	goto	u1680
   734  007986                     u1681:
   735  007986  6A20               	clrf	??_main^0,c
   736  007988  2A20               	incf	??_main^0,f,c
   737  00798A  EFC8  F03C         	goto	u1688
   738  00798E                     u1680:
   739  00798E  6A20               	clrf	??_main^0,c
   740  007990                     u1688:
   741  007990  5020               	movf	??_main^0,w,c
   742  007992  6E23               	movwf	main@temp^0,c
   743  007994  6A24               	clrf	(main@temp+1)^0,c
   744  007996                     
   745                           ;newmain.c: 467:         LATDbits.LATD6 = LATDbits.LATD5;
   746  007996  AA8C               	btfss	140,5,c	;volatile
   747  007998  D002               	bra	u1695
   748  00799A  8C8C               	bsf	140,6,c	;volatile
   749  00799C  D001               	bra	u1697
   750  00799E                     u1695:
   751  00799E  9C8C               	bcf	140,6,c	;volatile
   752  0079A0                     u1697:
   753  0079A0                     
   754                           ;newmain.c: 468:         LATDbits.LATD5 = LATDbits.LATD4;
   755  0079A0  A88C               	btfss	140,4,c	;volatile
   756  0079A2  D002               	bra	u1705
   757  0079A4  8A8C               	bsf	140,5,c	;volatile
   758  0079A6  D001               	bra	u1707
   759  0079A8                     u1705:
   760  0079A8  9A8C               	bcf	140,5,c	;volatile
   761  0079AA                     u1707:
   762  0079AA                     
   763                           ;newmain.c: 469:         LATDbits.LATD4 = LATDbits.LATD3;
   764  0079AA  A68C               	btfss	140,3,c	;volatile
   765  0079AC  D002               	bra	u1715
   766  0079AE  888C               	bsf	140,4,c	;volatile
   767  0079B0  D001               	bra	u1717
   768  0079B2                     u1715:
   769  0079B2  988C               	bcf	140,4,c	;volatile
   770  0079B4                     u1717:
   771  0079B4                     
   772                           ;newmain.c: 470:         LATDbits.LATD3 = temp;
   773  0079B4  B023               	btfsc	main@temp^0,0,c
   774  0079B6  D002               	bra	u1725
   775  0079B8  968C               	bcf	140,3,c	;volatile
   776  0079BA  D001               	bra	u1726
   777  0079BC                     u1725:
   778  0079BC  868C               	bsf	140,3,c	;volatile
   779  0079BE                     u1726:
   780  0079BE                     
   781                           ;newmain.c: 471:         i++;
   782  0079BE  4A27               	infsnz	main@i^0,f,c
   783  0079C0  2A28               	incf	(main@i+1)^0,f,c
   784  0079C2                     
   785                           ;newmain.c: 472:         if(i == 4){
   786  0079C2  0E04               	movlw	4
   787  0079C4  1827               	xorwf	main@i^0,w,c
   788  0079C6  1028               	iorwf	(main@i+1)^0,w,c
   789  0079C8  A4D8               	btfss	status,2,c
   790  0079CA  EFE9  F03C         	goto	u1731
   791  0079CE  EFEB  F03C         	goto	u1730
   792  0079D2                     u1731:
   793  0079D2  EFEF  F03C         	goto	l2761
   794  0079D6                     u1730:
   795  0079D6                     
   796                           ;newmain.c: 473:             i = 0;
   797  0079D6  0E00               	movlw	0
   798  0079D8  6E28               	movwf	(main@i+1)^0,c
   799  0079DA  0E00               	movlw	0
   800  0079DC  6E27               	movwf	main@i^0,c
   801  0079DE                     l2761:
   802                           
   803                           ;newmain.c: 475:         turn++;
   804  0079DE  4A29               	infsnz	main@turn^0,f,c
   805  0079E0  2A2A               	incf	(main@turn+1)^0,f,c
   806  0079E2                     
   807                           ;newmain.c: 476:         if(turn == 6) turn = 0;
   808  0079E2  0E06               	movlw	6
   809  0079E4  1829               	xorwf	main@turn^0,w,c
   810  0079E6  102A               	iorwf	(main@turn+1)^0,w,c
   811  0079E8  A4D8               	btfss	status,2,c
   812  0079EA  EFF9  F03C         	goto	u1741
   813  0079EE  EFFB  F03C         	goto	u1740
   814  0079F2                     u1741:
   815  0079F2  EF91  F03B         	goto	l2681
   816  0079F6                     u1740:
   817  0079F6  EF8D  F03B         	goto	l2679
   818  0079FA  EF00  F000         	goto	start
   819  0079FE                     __end_of_main:
   820                           	opt callstack 0
   821                           
   822 ;; *************** function _rotate_top *****************
   823 ;; Defined at:
   824 ;;		line 228 in file "newmain.c"
   825 ;; Parameters:    Size  Location     Type
   826 ;;  val             2    0[COMRAM] int 
   827 ;; Auto vars:     Size  Location     Type
   828 ;;  tempd           6   25[COMRAM] struct RGB
   829 ;;  tempc           6   19[COMRAM] struct RGB
   830 ;;  tempb           6   13[COMRAM] struct RGB
   831 ;;  tempa           6    7[COMRAM] struct RGB
   832 ;;  buf             2    5[COMRAM] int 
   833 ;;  buf             2    3[COMRAM] int 
   834 ;; Return value:  Size  Location     Type
   835 ;;                  1    wreg      void 
   836 ;; Registers used:
   837 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
   838 ;; Tracked objects:
   839 ;;		On entry : 0/0
   840 ;;		On exit  : 0/0
   841 ;;		Unchanged: 0/0
   842 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   843 ;;      Params:         2       0       0       0       0       0       0
   844 ;;      Locals:        28       0       0       0       0       0       0
   845 ;;      Temps:          1       0       0       0       0       0       0
   846 ;;      Totals:        31       0       0       0       0       0       0
   847 ;;Total ram usage:       31 bytes
   848 ;; Hardware stack levels used:    1
   849 ;; This function calls:
   850 ;;		Nothing
   851 ;; This function is called by:
   852 ;;		_main
   853 ;; This function uses a non-reentrant model
   854 ;;
   855                           
   856                           	psect	text1
   857  007408                     __ptext1:
   858                           	opt callstack 0
   859  007408                     _rotate_top:
   860                           	opt callstack 30
   861  007408                     
   862                           ;newmain.c: 230:     if(val > 3){
   863  007408  BE02               	btfsc	(rotate_top@val+1)^0,7,c
   864  00740A  EF10  F03A         	goto	u1131
   865  00740E  5002               	movf	(rotate_top@val+1)^0,w,c
   866  007410  E109               	bnz	u1130
   867  007412  0E04               	movlw	4
   868  007414  5C01               	subwf	rotate_top@val^0,w,c
   869  007416  A0D8               	btfss	status,0,c
   870  007418  EF10  F03A         	goto	u1131
   871  00741C  EF12  F03A         	goto	u1130
   872  007420                     u1131:
   873  007420  EF16  F03A         	goto	l2133
   874  007424                     u1130:
   875  007424                     
   876                           ;newmain.c: 231:         val = 3;
   877  007424  0E00               	movlw	0
   878  007426  6E02               	movwf	(rotate_top@val+1)^0,c
   879  007428  0E03               	movlw	3
   880  00742A  6E01               	movwf	rotate_top@val^0,c
   881  00742C                     l2133:
   882                           
   883                           ;newmain.c: 233:     if(val>original[0]){
   884  00742C  5001               	movf	rotate_top@val^0,w,c
   885  00742E  5C2D               	subwf	_original^0,w,c	;volatile
   886  007430  502E               	movf	(_original+1)^0,w,c	;volatile
   887  007432  0A80               	xorlw	128
   888  007434  6E03               	movwf	??_rotate_top^0,c
   889  007436  5002               	movf	(rotate_top@val+1)^0,w,c
   890  007438  0A80               	xorlw	128
   891  00743A  5803               	subwfb	??_rotate_top^0,w,c
   892  00743C  B0D8               	btfsc	status,0,c
   893  00743E  EF23  F03A         	goto	u1141
   894  007442  EF25  F03A         	goto	u1140
   895  007446                     u1141:
   896  007446  EFB1  F03A         	goto	l2191
   897  00744A                     u1140:
   898  00744A                     
   899                           ;newmain.c: 234:         int buf = val-original[0];
   900  00744A  502D               	movf	_original^0,w,c	;volatile
   901  00744C  5C01               	subwf	rotate_top@val^0,w,c
   902  00744E  6E04               	movwf	rotate_top@buf^0,c
   903  007450  502E               	movf	(_original+1)^0,w,c	;volatile
   904  007452  5802               	subwfb	(rotate_top@val+1)^0,w,c
   905  007454  6E05               	movwf	(rotate_top@buf+1)^0,c
   906                           
   907                           ;newmain.c: 235:         while(buf>0){
   908  007456  EFA2  F03A         	goto	l2189
   909  00745A                     l2137:
   910                           
   911                           ;newmain.c: 236:             rgbarray tempa = rgb[0];
   912  00745A  EE21  F000         	lfsr	2,_rgb	;volatile
   913  00745E  EE10  F008         	lfsr	1,rotate_top@tempa
   914  007462  0E05               	movlw	5
   915  007464                     u1151:
   916  007464  CFDB FFE3          	movff	plusw2,plusw1
   917  007468  06E8               	decf	wreg,f,c
   918  00746A  E2FC               	bc	u1151
   919                           
   920                           ;newmain.c: 237:             rgbarray tempb = rgb[3];
   921  00746C  EE21  F012         	lfsr	2,_rgb+18	;volatile
   922  007470  EE10  F00E         	lfsr	1,rotate_top@tempb
   923  007474  0E05               	movlw	5
   924  007476                     u1161:
   925  007476  CFDB FFE3          	movff	plusw2,plusw1
   926  00747A  06E8               	decf	wreg,f,c
   927  00747C  E2FC               	bc	u1161
   928  00747E                     
   929                           ;newmain.c: 238:             rgb[0].r = rgb[17].r;rgb[3].r = rgb[16].r;
   930  00747E  C166  F100         	movff	_rgb+102,_rgb	;volatile
   931  007482  C167  F101         	movff	_rgb+103,_rgb+1	;volatile
   932  007486  C160  F112         	movff	_rgb+96,_rgb+18	;volatile
   933  00748A  C161  F113         	movff	_rgb+97,_rgb+19	;volatile
   934  00748E                     
   935                           ;newmain.c: 239:             rgb[0].g = rgb[17].g;rgb[3].g = rgb[16].g;
   936  00748E  C168  F102         	movff	_rgb+104,_rgb+2	;volatile
   937  007492  C169  F103         	movff	_rgb+105,_rgb+3	;volatile
   938  007496  C162  F114         	movff	_rgb+98,_rgb+20	;volatile
   939  00749A  C163  F115         	movff	_rgb+99,_rgb+21	;volatile
   940  00749E                     
   941                           ;newmain.c: 240:             rgb[0].b = rgb[17].b;rgb[3].b = rgb[16].b;
   942  00749E  C16A  F104         	movff	_rgb+106,_rgb+4	;volatile
   943  0074A2  C16B  F105         	movff	_rgb+107,_rgb+5	;volatile
   944  0074A6  C164  F116         	movff	_rgb+100,_rgb+22	;volatile
   945  0074AA  C165  F117         	movff	_rgb+101,_rgb+23	;volatile
   946  0074AE                     
   947                           ;newmain.c: 241:             rgb[17].r = rgb[10].r;rgb[16].r = rgb[9].r;
   948  0074AE  C13C  F166         	movff	_rgb+60,_rgb+102	;volatile
   949  0074B2  C13D  F167         	movff	_rgb+61,_rgb+103	;volatile
   950  0074B6  C136  F160         	movff	_rgb+54,_rgb+96	;volatile
   951  0074BA  C137  F161         	movff	_rgb+55,_rgb+97	;volatile
   952  0074BE                     
   953                           ;newmain.c: 242:             rgb[17].g = rgb[10].g;rgb[16].g = rgb[9].g;
   954  0074BE  C13E  F168         	movff	_rgb+62,_rgb+104	;volatile
   955  0074C2  C13F  F169         	movff	_rgb+63,_rgb+105	;volatile
   956  0074C6  C138  F162         	movff	_rgb+56,_rgb+98	;volatile
   957  0074CA  C139  F163         	movff	_rgb+57,_rgb+99	;volatile
   958  0074CE                     
   959                           ;newmain.c: 243:             rgb[17].b = rgb[10].b;rgb[16].b = rgb[9].b;
   960  0074CE  C140  F16A         	movff	_rgb+64,_rgb+106	;volatile
   961  0074D2  C141  F16B         	movff	_rgb+65,_rgb+107	;volatile
   962  0074D6  C13A  F164         	movff	_rgb+58,_rgb+100	;volatile
   963  0074DA  C13B  F165         	movff	_rgb+59,_rgb+101	;volatile
   964  0074DE                     
   965                           ;newmain.c: 244:             rgb[10].r = rgb[23].r;rgb[9].r = rgb[22].r;
   966  0074DE  C18A  F13C         	movff	_rgb+138,_rgb+60	;volatile
   967  0074E2  C18B  F13D         	movff	_rgb+139,_rgb+61	;volatile
   968  0074E6  C184  F136         	movff	_rgb+132,_rgb+54	;volatile
   969  0074EA  C185  F137         	movff	_rgb+133,_rgb+55	;volatile
   970  0074EE                     
   971                           ;newmain.c: 245:             rgb[10].g = rgb[23].g;rgb[9].g = rgb[22].g;
   972  0074EE  C18C  F13E         	movff	_rgb+140,_rgb+62	;volatile
   973  0074F2  C18D  F13F         	movff	_rgb+141,_rgb+63	;volatile
   974  0074F6  C186  F138         	movff	_rgb+134,_rgb+56	;volatile
   975  0074FA  C187  F139         	movff	_rgb+135,_rgb+57	;volatile
   976  0074FE                     
   977                           ;newmain.c: 246:             rgb[10].b = rgb[23].b;rgb[9].b = rgb[22].b;
   978  0074FE  C18E  F140         	movff	_rgb+142,_rgb+64	;volatile
   979  007502  C18F  F141         	movff	_rgb+143,_rgb+65	;volatile
   980  007506  C188  F13A         	movff	_rgb+136,_rgb+58	;volatile
   981  00750A  C189  F13B         	movff	_rgb+137,_rgb+59	;volatile
   982  00750E                     
   983                           ;newmain.c: 247:             rgb[23].r = tempa.r;rgb[22].r = tempb.r;
   984  00750E  C008  F18A         	movff	rotate_top@tempa,_rgb+138	;volatile
   985  007512  C009  F18B         	movff	rotate_top@tempa+1,_rgb+139	;volatile
   986  007516  C00E  F184         	movff	rotate_top@tempb,_rgb+132	;volatile
   987  00751A  C00F  F185         	movff	rotate_top@tempb+1,_rgb+133	;volatile
   988  00751E                     
   989                           ;newmain.c: 248:             rgb[23].g = tempa.g;rgb[22].g = tempb.g;
   990  00751E  C00A  F18C         	movff	rotate_top@tempa+2,_rgb+140	;volatile
   991  007522  C00B  F18D         	movff	rotate_top@tempa+3,_rgb+141	;volatile
   992  007526  C010  F186         	movff	rotate_top@tempb+2,_rgb+134	;volatile
   993  00752A  C011  F187         	movff	rotate_top@tempb+3,_rgb+135	;volatile
   994  00752E                     
   995                           ;newmain.c: 249:             rgb[23].b = tempa.b;rgb[22].b = tempb.b;
   996  00752E  C00C  F18E         	movff	rotate_top@tempa+4,_rgb+142	;volatile
   997  007532  C00D  F18F         	movff	rotate_top@tempa+5,_rgb+143	;volatile
   998  007536  C012  F188         	movff	rotate_top@tempb+4,_rgb+136	;volatile
   999  00753A  C013  F189         	movff	rotate_top@tempb+5,_rgb+137	;volatile
  1000  00753E                     
  1001                           ;newmain.c: 250:             buf--;
  1002  00753E  0604               	decf	rotate_top@buf^0,f,c
  1003  007540  A0D8               	btfss	status,0,c
  1004  007542  0605               	decf	(rotate_top@buf+1)^0,f,c
  1005  007544                     l2189:
  1006                           
  1007                           ;newmain.c: 235:         while(buf>0){
  1008  007544  BE05               	btfsc	(rotate_top@buf+1)^0,7,c
  1009  007546  EFAF  F03A         	goto	u1170
  1010  00754A  5005               	movf	(rotate_top@buf+1)^0,w,c
  1011  00754C  E106               	bnz	u1171
  1012  00754E  0404               	decf	rotate_top@buf^0,w,c
  1013  007550  B0D8               	btfsc	status,0,c
  1014  007552  EFAD  F03A         	goto	u1171
  1015  007556  EFAF  F03A         	goto	u1170
  1016  00755A                     u1171:
  1017  00755A  EF2D  F03A         	goto	l2137
  1018  00755E                     u1170:
  1019  00755E  EF4A  F03B         	goto	l89
  1020  007562                     l2191:
  1021  007562  502D               	movf	_original^0,w,c	;volatile
  1022  007564  5C01               	subwf	rotate_top@val^0,w,c
  1023  007566  5002               	movf	(rotate_top@val+1)^0,w,c
  1024  007568  0A80               	xorlw	128
  1025  00756A  6E03               	movwf	??_rotate_top^0,c
  1026  00756C  502E               	movf	(_original+1)^0,w,c	;volatile
  1027  00756E  0A80               	xorlw	128
  1028  007570  5803               	subwfb	??_rotate_top^0,w,c
  1029  007572  B0D8               	btfsc	status,0,c
  1030  007574  EFBE  F03A         	goto	u1181
  1031  007578  EFC0  F03A         	goto	u1180
  1032  00757C                     u1181:
  1033  00757C  EF4A  F03B         	goto	l89
  1034  007580                     u1180:
  1035  007580                     
  1036                           ;newmain.c: 254:         int buf = original[0]-val;
  1037  007580  5001               	movf	rotate_top@val^0,w,c
  1038  007582  5C2D               	subwf	_original^0,w,c	;volatile
  1039  007584  6E06               	movwf	rotate_top@buf_247^0,c
  1040  007586  5002               	movf	(rotate_top@val+1)^0,w,c
  1041  007588  582E               	subwfb	(_original+1)^0,w,c	;volatile
  1042  00758A  6E07               	movwf	(rotate_top@buf_247+1)^0,c
  1043                           
  1044                           ;newmain.c: 255:         while(buf>0){
  1045  00758C  EF3D  F03B         	goto	l2247
  1046  007590                     l2195:
  1047                           
  1048                           ;newmain.c: 256:             rgbarray tempc = rgb[0];
  1049  007590  EE21  F000         	lfsr	2,_rgb	;volatile
  1050  007594  EE10  F014         	lfsr	1,rotate_top@tempc
  1051  007598  0E05               	movlw	5
  1052  00759A                     u1191:
  1053  00759A  CFDB FFE3          	movff	plusw2,plusw1
  1054  00759E  06E8               	decf	wreg,f,c
  1055  0075A0  E2FC               	bc	u1191
  1056                           
  1057                           ;newmain.c: 257:             rgbarray tempd = rgb[3];
  1058  0075A2  EE21  F012         	lfsr	2,_rgb+18	;volatile
  1059  0075A6  EE10  F01A         	lfsr	1,rotate_top@tempd
  1060  0075AA  0E05               	movlw	5
  1061  0075AC                     u1201:
  1062  0075AC  CFDB FFE3          	movff	plusw2,plusw1
  1063  0075B0  06E8               	decf	wreg,f,c
  1064  0075B2  E2FC               	bc	u1201
  1065  0075B4                     
  1066                           ;newmain.c: 258:             rgb[0].r = rgb[23].r;rgb[3].r = rgb[22].r;
  1067  0075B4  C18A  F100         	movff	_rgb+138,_rgb	;volatile
  1068  0075B8  C18B  F101         	movff	_rgb+139,_rgb+1	;volatile
  1069  0075BC  C184  F112         	movff	_rgb+132,_rgb+18	;volatile
  1070  0075C0  C185  F113         	movff	_rgb+133,_rgb+19	;volatile
  1071  0075C4                     
  1072                           ;newmain.c: 259:             rgb[0].g = rgb[23].g;rgb[3].g = rgb[22].g;
  1073  0075C4  C18C  F102         	movff	_rgb+140,_rgb+2	;volatile
  1074  0075C8  C18D  F103         	movff	_rgb+141,_rgb+3	;volatile
  1075  0075CC  C186  F114         	movff	_rgb+134,_rgb+20	;volatile
  1076  0075D0  C187  F115         	movff	_rgb+135,_rgb+21	;volatile
  1077  0075D4                     
  1078                           ;newmain.c: 260:             rgb[0].b = rgb[23].b;rgb[3].b = rgb[22].b;
  1079  0075D4  C18E  F104         	movff	_rgb+142,_rgb+4	;volatile
  1080  0075D8  C18F  F105         	movff	_rgb+143,_rgb+5	;volatile
  1081  0075DC  C188  F116         	movff	_rgb+136,_rgb+22	;volatile
  1082  0075E0  C189  F117         	movff	_rgb+137,_rgb+23	;volatile
  1083  0075E4                     
  1084                           ;newmain.c: 261:             rgb[23].r = rgb[10].r;rgb[22].r = rgb[9].r;
  1085  0075E4  C13C  F18A         	movff	_rgb+60,_rgb+138	;volatile
  1086  0075E8  C13D  F18B         	movff	_rgb+61,_rgb+139	;volatile
  1087  0075EC  C136  F184         	movff	_rgb+54,_rgb+132	;volatile
  1088  0075F0  C137  F185         	movff	_rgb+55,_rgb+133	;volatile
  1089  0075F4                     
  1090                           ;newmain.c: 262:             rgb[23].g = rgb[10].g;rgb[22].g = rgb[9].g;
  1091  0075F4  C13E  F18C         	movff	_rgb+62,_rgb+140	;volatile
  1092  0075F8  C13F  F18D         	movff	_rgb+63,_rgb+141	;volatile
  1093  0075FC  C138  F186         	movff	_rgb+56,_rgb+134	;volatile
  1094  007600  C139  F187         	movff	_rgb+57,_rgb+135	;volatile
  1095  007604                     
  1096                           ;newmain.c: 263:             rgb[23].b = rgb[10].b;rgb[22].b = rgb[9].b;
  1097  007604  C140  F18E         	movff	_rgb+64,_rgb+142	;volatile
  1098  007608  C141  F18F         	movff	_rgb+65,_rgb+143	;volatile
  1099  00760C  C13A  F188         	movff	_rgb+58,_rgb+136	;volatile
  1100  007610  C13B  F189         	movff	_rgb+59,_rgb+137	;volatile
  1101  007614                     
  1102                           ;newmain.c: 264:             rgb[10].r = rgb[17].r;rgb[9].r = rgb[16].r;
  1103  007614  C166  F13C         	movff	_rgb+102,_rgb+60	;volatile
  1104  007618  C167  F13D         	movff	_rgb+103,_rgb+61	;volatile
  1105  00761C  C160  F136         	movff	_rgb+96,_rgb+54	;volatile
  1106  007620  C161  F137         	movff	_rgb+97,_rgb+55	;volatile
  1107  007624                     
  1108                           ;newmain.c: 265:             rgb[10].g = rgb[17].g;rgb[9].g = rgb[16].g;
  1109  007624  C168  F13E         	movff	_rgb+104,_rgb+62	;volatile
  1110  007628  C169  F13F         	movff	_rgb+105,_rgb+63	;volatile
  1111  00762C  C162  F138         	movff	_rgb+98,_rgb+56	;volatile
  1112  007630  C163  F139         	movff	_rgb+99,_rgb+57	;volatile
  1113  007634                     
  1114                           ;newmain.c: 266:             rgb[10].b = rgb[17].b;rgb[9].b = rgb[16].b;
  1115  007634  C16A  F140         	movff	_rgb+106,_rgb+64	;volatile
  1116  007638  C16B  F141         	movff	_rgb+107,_rgb+65	;volatile
  1117  00763C  C164  F13A         	movff	_rgb+100,_rgb+58	;volatile
  1118  007640  C165  F13B         	movff	_rgb+101,_rgb+59	;volatile
  1119  007644                     
  1120                           ;newmain.c: 267:             rgb[17].r = tempc.r;rgb[16].r = tempd.r;
  1121  007644  C014  F166         	movff	rotate_top@tempc,_rgb+102	;volatile
  1122  007648  C015  F167         	movff	rotate_top@tempc+1,_rgb+103	;volatile
  1123  00764C  C01A  F160         	movff	rotate_top@tempd,_rgb+96	;volatile
  1124  007650  C01B  F161         	movff	rotate_top@tempd+1,_rgb+97	;volatile
  1125  007654                     
  1126                           ;newmain.c: 268:             rgb[17].g = tempc.g;rgb[16].g = tempd.g;
  1127  007654  C016  F168         	movff	rotate_top@tempc+2,_rgb+104	;volatile
  1128  007658  C017  F169         	movff	rotate_top@tempc+3,_rgb+105	;volatile
  1129  00765C  C01C  F162         	movff	rotate_top@tempd+2,_rgb+98	;volatile
  1130  007660  C01D  F163         	movff	rotate_top@tempd+3,_rgb+99	;volatile
  1131  007664                     
  1132                           ;newmain.c: 269:             rgb[17].b = tempc.b;rgb[16].b = tempd.b;
  1133  007664  C018  F16A         	movff	rotate_top@tempc+4,_rgb+106	;volatile
  1134  007668  C019  F16B         	movff	rotate_top@tempc+5,_rgb+107	;volatile
  1135  00766C  C01E  F164         	movff	rotate_top@tempd+4,_rgb+100	;volatile
  1136  007670  C01F  F165         	movff	rotate_top@tempd+5,_rgb+101	;volatile
  1137  007674                     
  1138                           ;newmain.c: 270:             buf--;
  1139  007674  0606               	decf	rotate_top@buf_247^0,f,c
  1140  007676  A0D8               	btfss	status,0,c
  1141  007678  0607               	decf	(rotate_top@buf_247+1)^0,f,c
  1142  00767A                     l2247:
  1143                           
  1144                           ;newmain.c: 255:         while(buf>0){
  1145  00767A  BE07               	btfsc	(rotate_top@buf_247+1)^0,7,c
  1146  00767C  EF4A  F03B         	goto	u1210
  1147  007680  5007               	movf	(rotate_top@buf_247+1)^0,w,c
  1148  007682  E106               	bnz	u1211
  1149  007684  0406               	decf	rotate_top@buf_247^0,w,c
  1150  007686  B0D8               	btfsc	status,0,c
  1151  007688  EF48  F03B         	goto	u1211
  1152  00768C  EF4A  F03B         	goto	u1210
  1153  007690                     u1211:
  1154  007690  EFC8  F03A         	goto	l2195
  1155  007694                     u1210:
  1156  007694                     l89:
  1157  007694  0012               	return		;funcret
  1158  007696                     __end_of_rotate_top:
  1159                           	opt callstack 0
  1160                           
  1161 ;; *************** function _rotate_sidetop *****************
  1162 ;; Defined at:
  1163 ;;		line 322 in file "newmain.c"
  1164 ;; Parameters:    Size  Location     Type
  1165 ;;  val             2    0[COMRAM] int 
  1166 ;; Auto vars:     Size  Location     Type
  1167 ;;  tempd           6   25[COMRAM] struct RGB
  1168 ;;  tempc           6   19[COMRAM] struct RGB
  1169 ;;  tempb           6   13[COMRAM] struct RGB
  1170 ;;  tempa           6    7[COMRAM] struct RGB
  1171 ;;  buf             2    5[COMRAM] int 
  1172 ;;  buf             2    3[COMRAM] int 
  1173 ;; Return value:  Size  Location     Type
  1174 ;;                  1    wreg      void 
  1175 ;; Registers used:
  1176 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  1177 ;; Tracked objects:
  1178 ;;		On entry : 0/0
  1179 ;;		On exit  : 0/0
  1180 ;;		Unchanged: 0/0
  1181 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1182 ;;      Params:         2       0       0       0       0       0       0
  1183 ;;      Locals:        28       0       0       0       0       0       0
  1184 ;;      Temps:          1       0       0       0       0       0       0
  1185 ;;      Totals:        31       0       0       0       0       0       0
  1186 ;;Total ram usage:       31 bytes
  1187 ;; Hardware stack levels used:    1
  1188 ;; This function calls:
  1189 ;;		Nothing
  1190 ;; This function is called by:
  1191 ;;		_main
  1192 ;; This function uses a non-reentrant model
  1193 ;;
  1194                           
  1195                           	psect	text2
  1196  00717A                     __ptext2:
  1197                           	opt callstack 0
  1198  00717A                     _rotate_sidetop:
  1199                           	opt callstack 30
  1200  00717A                     
  1201                           ;newmain.c: 324:     if(val > 3){
  1202  00717A  BE02               	btfsc	(rotate_sidetop@val+1)^0,7,c
  1203  00717C  EFC9  F038         	goto	u1311
  1204  007180  5002               	movf	(rotate_sidetop@val+1)^0,w,c
  1205  007182  E109               	bnz	u1310
  1206  007184  0E04               	movlw	4
  1207  007186  5C01               	subwf	rotate_sidetop@val^0,w,c
  1208  007188  A0D8               	btfss	status,0,c
  1209  00718A  EFC9  F038         	goto	u1311
  1210  00718E  EFCB  F038         	goto	u1310
  1211  007192                     u1311:
  1212  007192  EFCF  F038         	goto	l2373
  1213  007196                     u1310:
  1214  007196                     
  1215                           ;newmain.c: 325:         val = 3;
  1216  007196  0E00               	movlw	0
  1217  007198  6E02               	movwf	(rotate_sidetop@val+1)^0,c
  1218  00719A  0E03               	movlw	3
  1219  00719C  6E01               	movwf	rotate_sidetop@val^0,c
  1220  00719E                     l2373:
  1221                           
  1222                           ;newmain.c: 327:     if(val>original[4]){
  1223  00719E  5001               	movf	rotate_sidetop@val^0,w,c
  1224  0071A0  5C35               	subwf	(_original+8)^0,w,c	;volatile
  1225  0071A2  5036               	movf	(_original+9)^0,w,c	;volatile
  1226  0071A4  0A80               	xorlw	128
  1227  0071A6  6E03               	movwf	??_rotate_sidetop^0,c
  1228  0071A8  5002               	movf	(rotate_sidetop@val+1)^0,w,c
  1229  0071AA  0A80               	xorlw	128
  1230  0071AC  5803               	subwfb	??_rotate_sidetop^0,w,c
  1231  0071AE  B0D8               	btfsc	status,0,c
  1232  0071B0  EFDC  F038         	goto	u1321
  1233  0071B4  EFDE  F038         	goto	u1320
  1234  0071B8                     u1321:
  1235  0071B8  EF6A  F039         	goto	l2431
  1236  0071BC                     u1320:
  1237  0071BC                     
  1238                           ;newmain.c: 328:         int buf = val-original[4];
  1239  0071BC  5035               	movf	(_original+8)^0,w,c	;volatile
  1240  0071BE  5C01               	subwf	rotate_sidetop@val^0,w,c
  1241  0071C0  6E04               	movwf	rotate_sidetop@buf^0,c
  1242  0071C2  5036               	movf	(_original+9)^0,w,c	;volatile
  1243  0071C4  5802               	subwfb	(rotate_sidetop@val+1)^0,w,c
  1244  0071C6  6E05               	movwf	(rotate_sidetop@buf+1)^0,c
  1245                           
  1246                           ;newmain.c: 329:         while(buf>0){
  1247  0071C8  EF5B  F039         	goto	l2429
  1248  0071CC                     l2377:
  1249                           
  1250                           ;newmain.c: 330:             rgbarray tempa = rgb[4];
  1251  0071CC  EE21  F018         	lfsr	2,_rgb+24	;volatile
  1252  0071D0  EE10  F008         	lfsr	1,rotate_sidetop@tempa
  1253  0071D4  0E05               	movlw	5
  1254  0071D6                     u1331:
  1255  0071D6  CFDB FFE3          	movff	plusw2,plusw1
  1256  0071DA  06E8               	decf	wreg,f,c
  1257  0071DC  E2FC               	bc	u1331
  1258                           
  1259                           ;newmain.c: 331:             rgbarray tempb = rgb[7];
  1260  0071DE  EE21  F02A         	lfsr	2,_rgb+42	;volatile
  1261  0071E2  EE10  F00E         	lfsr	1,rotate_sidetop@tempb
  1262  0071E6  0E05               	movlw	5
  1263  0071E8                     u1341:
  1264  0071E8  CFDB FFE3          	movff	plusw2,plusw1
  1265  0071EC  06E8               	decf	wreg,f,c
  1266  0071EE  E2FC               	bc	u1341
  1267  0071F0                     
  1268                           ;newmain.c: 332:             rgb[4].r = rgb[16].r;rgb[7].r = rgb[19].r;
  1269  0071F0  C160  F118         	movff	_rgb+96,_rgb+24	;volatile
  1270  0071F4  C161  F119         	movff	_rgb+97,_rgb+25	;volatile
  1271  0071F8  C172  F12A         	movff	_rgb+114,_rgb+42	;volatile
  1272  0071FC  C173  F12B         	movff	_rgb+115,_rgb+43	;volatile
  1273  007200                     
  1274                           ;newmain.c: 333:             rgb[4].g = rgb[16].g;rgb[7].g = rgb[19].g;
  1275  007200  C162  F11A         	movff	_rgb+98,_rgb+26	;volatile
  1276  007204  C163  F11B         	movff	_rgb+99,_rgb+27	;volatile
  1277  007208  C174  F12C         	movff	_rgb+116,_rgb+44	;volatile
  1278  00720C  C175  F12D         	movff	_rgb+117,_rgb+45	;volatile
  1279  007210                     
  1280                           ;newmain.c: 334:             rgb[4].b = rgb[16].b;rgb[7].b = rgb[19].b;
  1281  007210  C164  F11C         	movff	_rgb+100,_rgb+28	;volatile
  1282  007214  C165  F11D         	movff	_rgb+101,_rgb+29	;volatile
  1283  007218  C176  F12E         	movff	_rgb+118,_rgb+46	;volatile
  1284  00721C  C177  F12F         	movff	_rgb+119,_rgb+47	;volatile
  1285  007220                     
  1286                           ;newmain.c: 335:             rgb[16].r = rgb[14].r;rgb[19].r = rgb[13].r;
  1287  007220  C154  F160         	movff	_rgb+84,_rgb+96	;volatile
  1288  007224  C155  F161         	movff	_rgb+85,_rgb+97	;volatile
  1289  007228  C14E  F172         	movff	_rgb+78,_rgb+114	;volatile
  1290  00722C  C14F  F173         	movff	_rgb+79,_rgb+115	;volatile
  1291  007230                     
  1292                           ;newmain.c: 336:             rgb[16].g = rgb[14].g;rgb[19].g = rgb[13].g;
  1293  007230  C156  F162         	movff	_rgb+86,_rgb+98	;volatile
  1294  007234  C157  F163         	movff	_rgb+87,_rgb+99	;volatile
  1295  007238  C150  F174         	movff	_rgb+80,_rgb+116	;volatile
  1296  00723C  C151  F175         	movff	_rgb+81,_rgb+117	;volatile
  1297  007240                     
  1298                           ;newmain.c: 337:             rgb[16].b = rgb[14].b;rgb[19].b = rgb[13].b;
  1299  007240  C158  F164         	movff	_rgb+88,_rgb+100	;volatile
  1300  007244  C159  F165         	movff	_rgb+89,_rgb+101	;volatile
  1301  007248  C152  F176         	movff	_rgb+82,_rgb+118	;volatile
  1302  00724C  C153  F177         	movff	_rgb+83,_rgb+119	;volatile
  1303  007250                     
  1304                           ;newmain.c: 338:             rgb[14].r = rgb[20].r;rgb[13].r = rgb[23].r;
  1305  007250  C178  F154         	movff	_rgb+120,_rgb+84	;volatile
  1306  007254  C179  F155         	movff	_rgb+121,_rgb+85	;volatile
  1307  007258  C18A  F14E         	movff	_rgb+138,_rgb+78	;volatile
  1308  00725C  C18B  F14F         	movff	_rgb+139,_rgb+79	;volatile
  1309  007260                     
  1310                           ;newmain.c: 339:             rgb[14].g = rgb[20].g;rgb[13].g = rgb[23].g;
  1311  007260  C17A  F156         	movff	_rgb+122,_rgb+86	;volatile
  1312  007264  C17B  F157         	movff	_rgb+123,_rgb+87	;volatile
  1313  007268  C18C  F150         	movff	_rgb+140,_rgb+80	;volatile
  1314  00726C  C18D  F151         	movff	_rgb+141,_rgb+81	;volatile
  1315  007270                     
  1316                           ;newmain.c: 340:             rgb[14].b = rgb[20].b;rgb[13].b = rgb[23].b;
  1317  007270  C17C  F158         	movff	_rgb+124,_rgb+88	;volatile
  1318  007274  C17D  F159         	movff	_rgb+125,_rgb+89	;volatile
  1319  007278  C18E  F152         	movff	_rgb+142,_rgb+82	;volatile
  1320  00727C  C18F  F153         	movff	_rgb+143,_rgb+83	;volatile
  1321  007280                     
  1322                           ;newmain.c: 341:             rgb[20].r = tempa.r;rgb[23].r = tempb.r;
  1323  007280  C008  F178         	movff	rotate_sidetop@tempa,_rgb+120	;volatile
  1324  007284  C009  F179         	movff	rotate_sidetop@tempa+1,_rgb+121	;volatile
  1325  007288  C00E  F18A         	movff	rotate_sidetop@tempb,_rgb+138	;volatile
  1326  00728C  C00F  F18B         	movff	rotate_sidetop@tempb+1,_rgb+139	;volatile
  1327  007290                     
  1328                           ;newmain.c: 342:             rgb[20].g = tempa.g;rgb[23].g = tempb.g;
  1329  007290  C00A  F17A         	movff	rotate_sidetop@tempa+2,_rgb+122	;volatile
  1330  007294  C00B  F17B         	movff	rotate_sidetop@tempa+3,_rgb+123	;volatile
  1331  007298  C010  F18C         	movff	rotate_sidetop@tempb+2,_rgb+140	;volatile
  1332  00729C  C011  F18D         	movff	rotate_sidetop@tempb+3,_rgb+141	;volatile
  1333  0072A0                     
  1334                           ;newmain.c: 343:             rgb[20].b = tempa.b;rgb[23].b = tempb.b;
  1335  0072A0  C00C  F17C         	movff	rotate_sidetop@tempa+4,_rgb+124	;volatile
  1336  0072A4  C00D  F17D         	movff	rotate_sidetop@tempa+5,_rgb+125	;volatile
  1337  0072A8  C012  F18E         	movff	rotate_sidetop@tempb+4,_rgb+142	;volatile
  1338  0072AC  C013  F18F         	movff	rotate_sidetop@tempb+5,_rgb+143	;volatile
  1339  0072B0                     
  1340                           ;newmain.c: 344:             buf--;
  1341  0072B0  0604               	decf	rotate_sidetop@buf^0,f,c
  1342  0072B2  A0D8               	btfss	status,0,c
  1343  0072B4  0605               	decf	(rotate_sidetop@buf+1)^0,f,c
  1344  0072B6                     l2429:
  1345                           
  1346                           ;newmain.c: 329:         while(buf>0){
  1347  0072B6  BE05               	btfsc	(rotate_sidetop@buf+1)^0,7,c
  1348  0072B8  EF68  F039         	goto	u1350
  1349  0072BC  5005               	movf	(rotate_sidetop@buf+1)^0,w,c
  1350  0072BE  E106               	bnz	u1351
  1351  0072C0  0404               	decf	rotate_sidetop@buf^0,w,c
  1352  0072C2  B0D8               	btfsc	status,0,c
  1353  0072C4  EF66  F039         	goto	u1351
  1354  0072C8  EF68  F039         	goto	u1350
  1355  0072CC                     u1351:
  1356  0072CC  EFE6  F038         	goto	l2377
  1357  0072D0                     u1350:
  1358  0072D0  EF03  F03A         	goto	l115
  1359  0072D4                     l2431:
  1360  0072D4  5035               	movf	(_original+8)^0,w,c	;volatile
  1361  0072D6  5C01               	subwf	rotate_sidetop@val^0,w,c
  1362  0072D8  5002               	movf	(rotate_sidetop@val+1)^0,w,c
  1363  0072DA  0A80               	xorlw	128
  1364  0072DC  6E03               	movwf	??_rotate_sidetop^0,c
  1365  0072DE  5036               	movf	(_original+9)^0,w,c	;volatile
  1366  0072E0  0A80               	xorlw	128
  1367  0072E2  5803               	subwfb	??_rotate_sidetop^0,w,c
  1368  0072E4  B0D8               	btfsc	status,0,c
  1369  0072E6  EF77  F039         	goto	u1361
  1370  0072EA  EF79  F039         	goto	u1360
  1371  0072EE                     u1361:
  1372  0072EE  EF03  F03A         	goto	l115
  1373  0072F2                     u1360:
  1374  0072F2                     
  1375                           ;newmain.c: 348:         int buf = original[4]-val;
  1376  0072F2  5001               	movf	rotate_sidetop@val^0,w,c
  1377  0072F4  5C35               	subwf	(_original+8)^0,w,c	;volatile
  1378  0072F6  6E06               	movwf	rotate_sidetop@buf_287^0,c
  1379  0072F8  5002               	movf	(rotate_sidetop@val+1)^0,w,c
  1380  0072FA  5836               	subwfb	(_original+9)^0,w,c	;volatile
  1381  0072FC  6E07               	movwf	(rotate_sidetop@buf_287+1)^0,c
  1382                           
  1383                           ;newmain.c: 349:         while(buf>0){
  1384  0072FE  EFF6  F039         	goto	l2487
  1385  007302                     l2435:
  1386                           
  1387                           ;newmain.c: 350:             rgbarray tempc = rgb[4];
  1388  007302  EE21  F018         	lfsr	2,_rgb+24	;volatile
  1389  007306  EE10  F014         	lfsr	1,rotate_sidetop@tempc
  1390  00730A  0E05               	movlw	5
  1391  00730C                     u1371:
  1392  00730C  CFDB FFE3          	movff	plusw2,plusw1
  1393  007310  06E8               	decf	wreg,f,c
  1394  007312  E2FC               	bc	u1371
  1395                           
  1396                           ;newmain.c: 351:             rgbarray tempd = rgb[7];
  1397  007314  EE21  F02A         	lfsr	2,_rgb+42	;volatile
  1398  007318  EE10  F01A         	lfsr	1,rotate_sidetop@tempd
  1399  00731C  0E05               	movlw	5
  1400  00731E                     u1381:
  1401  00731E  CFDB FFE3          	movff	plusw2,plusw1
  1402  007322  06E8               	decf	wreg,f,c
  1403  007324  E2FC               	bc	u1381
  1404  007326                     
  1405                           ;newmain.c: 352:             rgb[4].r = rgb[20].r;rgb[7].r = rgb[23].r;
  1406  007326  C178  F118         	movff	_rgb+120,_rgb+24	;volatile
  1407  00732A  C179  F119         	movff	_rgb+121,_rgb+25	;volatile
  1408  00732E  C18A  F12A         	movff	_rgb+138,_rgb+42	;volatile
  1409  007332  C18B  F12B         	movff	_rgb+139,_rgb+43	;volatile
  1410  007336                     
  1411                           ;newmain.c: 353:             rgb[4].g = rgb[20].g;rgb[7].g = rgb[23].g;
  1412  007336  C17A  F11A         	movff	_rgb+122,_rgb+26	;volatile
  1413  00733A  C17B  F11B         	movff	_rgb+123,_rgb+27	;volatile
  1414  00733E  C18C  F12C         	movff	_rgb+140,_rgb+44	;volatile
  1415  007342  C18D  F12D         	movff	_rgb+141,_rgb+45	;volatile
  1416  007346                     
  1417                           ;newmain.c: 354:             rgb[4].b = rgb[20].b;rgb[7].b = rgb[23].b;
  1418  007346  C17C  F11C         	movff	_rgb+124,_rgb+28	;volatile
  1419  00734A  C17D  F11D         	movff	_rgb+125,_rgb+29	;volatile
  1420  00734E  C18E  F12E         	movff	_rgb+142,_rgb+46	;volatile
  1421  007352  C18F  F12F         	movff	_rgb+143,_rgb+47	;volatile
  1422  007356                     
  1423                           ;newmain.c: 355:             rgb[20].r = rgb[14].r;rgb[23].r = rgb[13].r;
  1424  007356  C154  F178         	movff	_rgb+84,_rgb+120	;volatile
  1425  00735A  C155  F179         	movff	_rgb+85,_rgb+121	;volatile
  1426  00735E  C14E  F18A         	movff	_rgb+78,_rgb+138	;volatile
  1427  007362  C14F  F18B         	movff	_rgb+79,_rgb+139	;volatile
  1428  007366                     
  1429                           ;newmain.c: 356:             rgb[20].g = rgb[14].g;rgb[23].g = rgb[13].g;
  1430  007366  C156  F17A         	movff	_rgb+86,_rgb+122	;volatile
  1431  00736A  C157  F17B         	movff	_rgb+87,_rgb+123	;volatile
  1432  00736E  C150  F18C         	movff	_rgb+80,_rgb+140	;volatile
  1433  007372  C151  F18D         	movff	_rgb+81,_rgb+141	;volatile
  1434  007376                     
  1435                           ;newmain.c: 357:             rgb[20].b = rgb[14].b;rgb[23].b = rgb[13].b;
  1436  007376  C158  F17C         	movff	_rgb+88,_rgb+124	;volatile
  1437  00737A  C159  F17D         	movff	_rgb+89,_rgb+125	;volatile
  1438  00737E  C152  F18E         	movff	_rgb+82,_rgb+142	;volatile
  1439  007382  C153  F18F         	movff	_rgb+83,_rgb+143	;volatile
  1440  007386                     
  1441                           ;newmain.c: 358:             rgb[14].r = rgb[16].r;rgb[13].r = rgb[19].r;
  1442  007386  C160  F154         	movff	_rgb+96,_rgb+84	;volatile
  1443  00738A  C161  F155         	movff	_rgb+97,_rgb+85	;volatile
  1444  00738E  C172  F14E         	movff	_rgb+114,_rgb+78	;volatile
  1445  007392  C173  F14F         	movff	_rgb+115,_rgb+79	;volatile
  1446  007396                     
  1447                           ;newmain.c: 359:             rgb[14].g = rgb[16].g;rgb[13].g = rgb[19].g;
  1448  007396  C162  F156         	movff	_rgb+98,_rgb+86	;volatile
  1449  00739A  C163  F157         	movff	_rgb+99,_rgb+87	;volatile
  1450  00739E  C174  F150         	movff	_rgb+116,_rgb+80	;volatile
  1451  0073A2  C175  F151         	movff	_rgb+117,_rgb+81	;volatile
  1452  0073A6                     
  1453                           ;newmain.c: 360:             rgb[14].b = rgb[16].b;rgb[13].b = rgb[19].b;
  1454  0073A6  C164  F158         	movff	_rgb+100,_rgb+88	;volatile
  1455  0073AA  C165  F159         	movff	_rgb+101,_rgb+89	;volatile
  1456  0073AE  C176  F152         	movff	_rgb+118,_rgb+82	;volatile
  1457  0073B2  C177  F153         	movff	_rgb+119,_rgb+83	;volatile
  1458  0073B6                     
  1459                           ;newmain.c: 361:             rgb[16].r = tempc.r;rgb[19].r = tempd.r;
  1460  0073B6  C014  F160         	movff	rotate_sidetop@tempc,_rgb+96	;volatile
  1461  0073BA  C015  F161         	movff	rotate_sidetop@tempc+1,_rgb+97	;volatile
  1462  0073BE  C01A  F172         	movff	rotate_sidetop@tempd,_rgb+114	;volatile
  1463  0073C2  C01B  F173         	movff	rotate_sidetop@tempd+1,_rgb+115	;volatile
  1464  0073C6                     
  1465                           ;newmain.c: 362:             rgb[16].g = tempc.g;rgb[19].g = tempd.g;
  1466  0073C6  C016  F162         	movff	rotate_sidetop@tempc+2,_rgb+98	;volatile
  1467  0073CA  C017  F163         	movff	rotate_sidetop@tempc+3,_rgb+99	;volatile
  1468  0073CE  C01C  F174         	movff	rotate_sidetop@tempd+2,_rgb+116	;volatile
  1469  0073D2  C01D  F175         	movff	rotate_sidetop@tempd+3,_rgb+117	;volatile
  1470  0073D6                     
  1471                           ;newmain.c: 363:             rgb[16].b = tempc.b;rgb[19].b = tempd.b;
  1472  0073D6  C018  F164         	movff	rotate_sidetop@tempc+4,_rgb+100	;volatile
  1473  0073DA  C019  F165         	movff	rotate_sidetop@tempc+5,_rgb+101	;volatile
  1474  0073DE  C01E  F176         	movff	rotate_sidetop@tempd+4,_rgb+118	;volatile
  1475  0073E2  C01F  F177         	movff	rotate_sidetop@tempd+5,_rgb+119	;volatile
  1476  0073E6                     
  1477                           ;newmain.c: 364:             buf--;
  1478  0073E6  0606               	decf	rotate_sidetop@buf_287^0,f,c
  1479  0073E8  A0D8               	btfss	status,0,c
  1480  0073EA  0607               	decf	(rotate_sidetop@buf_287+1)^0,f,c
  1481  0073EC                     l2487:
  1482                           
  1483                           ;newmain.c: 349:         while(buf>0){
  1484  0073EC  BE07               	btfsc	(rotate_sidetop@buf_287+1)^0,7,c
  1485  0073EE  EF03  F03A         	goto	u1390
  1486  0073F2  5007               	movf	(rotate_sidetop@buf_287+1)^0,w,c
  1487  0073F4  E106               	bnz	u1391
  1488  0073F6  0406               	decf	rotate_sidetop@buf_287^0,w,c
  1489  0073F8  B0D8               	btfsc	status,0,c
  1490  0073FA  EF01  F03A         	goto	u1391
  1491  0073FE  EF03  F03A         	goto	u1390
  1492  007402                     u1391:
  1493  007402  EF81  F039         	goto	l2435
  1494  007406                     u1390:
  1495  007406                     l115:
  1496  007406  0012               	return		;funcret
  1497  007408                     __end_of_rotate_sidetop:
  1498                           	opt callstack 0
  1499                           
  1500 ;; *************** function _rotate_sidebot *****************
  1501 ;; Defined at:
  1502 ;;		line 369 in file "newmain.c"
  1503 ;; Parameters:    Size  Location     Type
  1504 ;;  val             2    0[COMRAM] int 
  1505 ;; Auto vars:     Size  Location     Type
  1506 ;;  tempd           6   25[COMRAM] struct RGB
  1507 ;;  tempc           6   19[COMRAM] struct RGB
  1508 ;;  tempb           6   13[COMRAM] struct RGB
  1509 ;;  tempa           6    7[COMRAM] struct RGB
  1510 ;;  buf             2    5[COMRAM] int 
  1511 ;;  buf             2    3[COMRAM] int 
  1512 ;; Return value:  Size  Location     Type
  1513 ;;                  1    wreg      void 
  1514 ;; Registers used:
  1515 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  1516 ;; Tracked objects:
  1517 ;;		On entry : 0/0
  1518 ;;		On exit  : 0/0
  1519 ;;		Unchanged: 0/0
  1520 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1521 ;;      Params:         2       0       0       0       0       0       0
  1522 ;;      Locals:        28       0       0       0       0       0       0
  1523 ;;      Temps:          1       0       0       0       0       0       0
  1524 ;;      Totals:        31       0       0       0       0       0       0
  1525 ;;Total ram usage:       31 bytes
  1526 ;; Hardware stack levels used:    1
  1527 ;; This function calls:
  1528 ;;		Nothing
  1529 ;; This function is called by:
  1530 ;;		_main
  1531 ;; This function uses a non-reentrant model
  1532 ;;
  1533                           
  1534                           	psect	text3
  1535  006EEC                     __ptext3:
  1536                           	opt callstack 0
  1537  006EEC                     _rotate_sidebot:
  1538                           	opt callstack 30
  1539  006EEC                     
  1540                           ;newmain.c: 371:     if(val > 3){
  1541  006EEC  BE02               	btfsc	(rotate_sidebot@val+1)^0,7,c
  1542  006EEE  EF82  F037         	goto	u1401
  1543  006EF2  5002               	movf	(rotate_sidebot@val+1)^0,w,c
  1544  006EF4  E109               	bnz	u1400
  1545  006EF6  0E04               	movlw	4
  1546  006EF8  5C01               	subwf	rotate_sidebot@val^0,w,c
  1547  006EFA  A0D8               	btfss	status,0,c
  1548  006EFC  EF82  F037         	goto	u1401
  1549  006F00  EF84  F037         	goto	u1400
  1550  006F04                     u1401:
  1551  006F04  EF88  F037         	goto	l2493
  1552  006F08                     u1400:
  1553  006F08                     
  1554                           ;newmain.c: 372:         val = 3;
  1555  006F08  0E00               	movlw	0
  1556  006F0A  6E02               	movwf	(rotate_sidebot@val+1)^0,c
  1557  006F0C  0E03               	movlw	3
  1558  006F0E  6E01               	movwf	rotate_sidebot@val^0,c
  1559  006F10                     l2493:
  1560                           
  1561                           ;newmain.c: 374:     if(val>original[5]){
  1562  006F10  5001               	movf	rotate_sidebot@val^0,w,c
  1563  006F12  5C37               	subwf	(_original+10)^0,w,c	;volatile
  1564  006F14  5038               	movf	(_original+11)^0,w,c	;volatile
  1565  006F16  0A80               	xorlw	128
  1566  006F18  6E03               	movwf	??_rotate_sidebot^0,c
  1567  006F1A  5002               	movf	(rotate_sidebot@val+1)^0,w,c
  1568  006F1C  0A80               	xorlw	128
  1569  006F1E  5803               	subwfb	??_rotate_sidebot^0,w,c
  1570  006F20  B0D8               	btfsc	status,0,c
  1571  006F22  EF95  F037         	goto	u1411
  1572  006F26  EF97  F037         	goto	u1410
  1573  006F2A                     u1411:
  1574  006F2A  EF23  F038         	goto	l2551
  1575  006F2E                     u1410:
  1576  006F2E                     
  1577                           ;newmain.c: 375:         int buf = val-original[5];
  1578  006F2E  5037               	movf	(_original+10)^0,w,c	;volatile
  1579  006F30  5C01               	subwf	rotate_sidebot@val^0,w,c
  1580  006F32  6E04               	movwf	rotate_sidebot@buf^0,c
  1581  006F34  5038               	movf	(_original+11)^0,w,c	;volatile
  1582  006F36  5802               	subwfb	(rotate_sidebot@val+1)^0,w,c
  1583  006F38  6E05               	movwf	(rotate_sidebot@buf+1)^0,c
  1584                           
  1585                           ;newmain.c: 376:         while(buf>0){
  1586  006F3A  EF14  F038         	goto	l2549
  1587  006F3E                     l2497:
  1588                           
  1589                           ;newmain.c: 377:             rgbarray tempa = rgb[5];
  1590  006F3E  EE21  F01E         	lfsr	2,_rgb+30	;volatile
  1591  006F42  EE10  F008         	lfsr	1,rotate_sidebot@tempa
  1592  006F46  0E05               	movlw	5
  1593  006F48                     u1421:
  1594  006F48  CFDB FFE3          	movff	plusw2,plusw1
  1595  006F4C  06E8               	decf	wreg,f,c
  1596  006F4E  E2FC               	bc	u1421
  1597                           
  1598                           ;newmain.c: 378:             rgbarray tempb = rgb[6];
  1599  006F50  EE21  F024         	lfsr	2,_rgb+36	;volatile
  1600  006F54  EE10  F00E         	lfsr	1,rotate_sidebot@tempb
  1601  006F58  0E05               	movlw	5
  1602  006F5A                     u1431:
  1603  006F5A  CFDB FFE3          	movff	plusw2,plusw1
  1604  006F5E  06E8               	decf	wreg,f,c
  1605  006F60  E2FC               	bc	u1431
  1606  006F62                     
  1607                           ;newmain.c: 379:             rgb[5].r = rgb[17].r;rgb[6].r = rgb[18].r;
  1608  006F62  C166  F11E         	movff	_rgb+102,_rgb+30	;volatile
  1609  006F66  C167  F11F         	movff	_rgb+103,_rgb+31	;volatile
  1610  006F6A  C16C  F124         	movff	_rgb+108,_rgb+36	;volatile
  1611  006F6E  C16D  F125         	movff	_rgb+109,_rgb+37	;volatile
  1612  006F72                     
  1613                           ;newmain.c: 380:             rgb[5].g = rgb[17].g;rgb[6].g = rgb[18].g;
  1614  006F72  C168  F120         	movff	_rgb+104,_rgb+32	;volatile
  1615  006F76  C169  F121         	movff	_rgb+105,_rgb+33	;volatile
  1616  006F7A  C16E  F126         	movff	_rgb+110,_rgb+38	;volatile
  1617  006F7E  C16F  F127         	movff	_rgb+111,_rgb+39	;volatile
  1618  006F82                     
  1619                           ;newmain.c: 381:             rgb[5].b = rgb[17].b;rgb[6].b = rgb[18].b;
  1620  006F82  C16A  F122         	movff	_rgb+106,_rgb+34	;volatile
  1621  006F86  C16B  F123         	movff	_rgb+107,_rgb+35	;volatile
  1622  006F8A  C170  F128         	movff	_rgb+112,_rgb+40	;volatile
  1623  006F8E  C171  F129         	movff	_rgb+113,_rgb+41	;volatile
  1624  006F92                     
  1625                           ;newmain.c: 382:             rgb[17].r = rgb[15].r;rgb[18].r = rgb[12].r;
  1626  006F92  C15A  F166         	movff	_rgb+90,_rgb+102	;volatile
  1627  006F96  C15B  F167         	movff	_rgb+91,_rgb+103	;volatile
  1628  006F9A  C148  F16C         	movff	_rgb+72,_rgb+108	;volatile
  1629  006F9E  C149  F16D         	movff	_rgb+73,_rgb+109	;volatile
  1630  006FA2                     
  1631                           ;newmain.c: 383:             rgb[17].g = rgb[15].g;rgb[18].g = rgb[12].g;
  1632  006FA2  C15C  F168         	movff	_rgb+92,_rgb+104	;volatile
  1633  006FA6  C15D  F169         	movff	_rgb+93,_rgb+105	;volatile
  1634  006FAA  C14A  F16E         	movff	_rgb+74,_rgb+110	;volatile
  1635  006FAE  C14B  F16F         	movff	_rgb+75,_rgb+111	;volatile
  1636  006FB2                     
  1637                           ;newmain.c: 384:             rgb[17].b = rgb[15].b;rgb[18].b = rgb[12].b;
  1638  006FB2  C15E  F16A         	movff	_rgb+94,_rgb+106	;volatile
  1639  006FB6  C15F  F16B         	movff	_rgb+95,_rgb+107	;volatile
  1640  006FBA  C14C  F170         	movff	_rgb+76,_rgb+112	;volatile
  1641  006FBE  C14D  F171         	movff	_rgb+77,_rgb+113	;volatile
  1642  006FC2                     
  1643                           ;newmain.c: 385:             rgb[15].r = rgb[21].r;rgb[12].r = rgb[22].r;
  1644  006FC2  C17E  F15A         	movff	_rgb+126,_rgb+90	;volatile
  1645  006FC6  C17F  F15B         	movff	_rgb+127,_rgb+91	;volatile
  1646  006FCA  C184  F148         	movff	_rgb+132,_rgb+72	;volatile
  1647  006FCE  C185  F149         	movff	_rgb+133,_rgb+73	;volatile
  1648  006FD2                     
  1649                           ;newmain.c: 386:             rgb[15].g = rgb[21].g;rgb[12].g = rgb[22].g;
  1650  006FD2  C180  F15C         	movff	_rgb+128,_rgb+92	;volatile
  1651  006FD6  C181  F15D         	movff	_rgb+129,_rgb+93	;volatile
  1652  006FDA  C186  F14A         	movff	_rgb+134,_rgb+74	;volatile
  1653  006FDE  C187  F14B         	movff	_rgb+135,_rgb+75	;volatile
  1654  006FE2                     
  1655                           ;newmain.c: 387:             rgb[15].b = rgb[21].b;rgb[12].b = rgb[22].b;
  1656  006FE2  C182  F15E         	movff	_rgb+130,_rgb+94	;volatile
  1657  006FE6  C183  F15F         	movff	_rgb+131,_rgb+95	;volatile
  1658  006FEA  C188  F14C         	movff	_rgb+136,_rgb+76	;volatile
  1659  006FEE  C189  F14D         	movff	_rgb+137,_rgb+77	;volatile
  1660  006FF2                     
  1661                           ;newmain.c: 388:             rgb[21].r = tempa.r;rgb[22].r = tempb.r;
  1662  006FF2  C008  F17E         	movff	rotate_sidebot@tempa,_rgb+126	;volatile
  1663  006FF6  C009  F17F         	movff	rotate_sidebot@tempa+1,_rgb+127	;volatile
  1664  006FFA  C00E  F184         	movff	rotate_sidebot@tempb,_rgb+132	;volatile
  1665  006FFE  C00F  F185         	movff	rotate_sidebot@tempb+1,_rgb+133	;volatile
  1666  007002                     
  1667                           ;newmain.c: 389:             rgb[21].g = tempa.g;rgb[22].g = tempb.g;
  1668  007002  C00A  F180         	movff	rotate_sidebot@tempa+2,_rgb+128	;volatile
  1669  007006  C00B  F181         	movff	rotate_sidebot@tempa+3,_rgb+129	;volatile
  1670  00700A  C010  F186         	movff	rotate_sidebot@tempb+2,_rgb+134	;volatile
  1671  00700E  C011  F187         	movff	rotate_sidebot@tempb+3,_rgb+135	;volatile
  1672  007012                     
  1673                           ;newmain.c: 390:             rgb[21].b = tempa.b;rgb[22].b = tempb.b;
  1674  007012  C00C  F182         	movff	rotate_sidebot@tempa+4,_rgb+130	;volatile
  1675  007016  C00D  F183         	movff	rotate_sidebot@tempa+5,_rgb+131	;volatile
  1676  00701A  C012  F188         	movff	rotate_sidebot@tempb+4,_rgb+136	;volatile
  1677  00701E  C013  F189         	movff	rotate_sidebot@tempb+5,_rgb+137	;volatile
  1678  007022                     
  1679                           ;newmain.c: 391:             buf--;
  1680  007022  0604               	decf	rotate_sidebot@buf^0,f,c
  1681  007024  A0D8               	btfss	status,0,c
  1682  007026  0605               	decf	(rotate_sidebot@buf+1)^0,f,c
  1683  007028                     l2549:
  1684                           
  1685                           ;newmain.c: 376:         while(buf>0){
  1686  007028  BE05               	btfsc	(rotate_sidebot@buf+1)^0,7,c
  1687  00702A  EF21  F038         	goto	u1440
  1688  00702E  5005               	movf	(rotate_sidebot@buf+1)^0,w,c
  1689  007030  E106               	bnz	u1441
  1690  007032  0404               	decf	rotate_sidebot@buf^0,w,c
  1691  007034  B0D8               	btfsc	status,0,c
  1692  007036  EF1F  F038         	goto	u1441
  1693  00703A  EF21  F038         	goto	u1440
  1694  00703E                     u1441:
  1695  00703E  EF9F  F037         	goto	l2497
  1696  007042                     u1440:
  1697  007042  EFBC  F038         	goto	l128
  1698  007046                     l2551:
  1699  007046  5037               	movf	(_original+10)^0,w,c	;volatile
  1700  007048  5C01               	subwf	rotate_sidebot@val^0,w,c
  1701  00704A  5002               	movf	(rotate_sidebot@val+1)^0,w,c
  1702  00704C  0A80               	xorlw	128
  1703  00704E  6E03               	movwf	??_rotate_sidebot^0,c
  1704  007050  5038               	movf	(_original+11)^0,w,c	;volatile
  1705  007052  0A80               	xorlw	128
  1706  007054  5803               	subwfb	??_rotate_sidebot^0,w,c
  1707  007056  B0D8               	btfsc	status,0,c
  1708  007058  EF30  F038         	goto	u1451
  1709  00705C  EF32  F038         	goto	u1450
  1710  007060                     u1451:
  1711  007060  EFBC  F038         	goto	l128
  1712  007064                     u1450:
  1713  007064                     
  1714                           ;newmain.c: 395:         int buf = original[5]-val;
  1715  007064  5001               	movf	rotate_sidebot@val^0,w,c
  1716  007066  5C37               	subwf	(_original+10)^0,w,c	;volatile
  1717  007068  6E06               	movwf	rotate_sidebot@buf_307^0,c
  1718  00706A  5002               	movf	(rotate_sidebot@val+1)^0,w,c
  1719  00706C  5838               	subwfb	(_original+11)^0,w,c	;volatile
  1720  00706E  6E07               	movwf	(rotate_sidebot@buf_307+1)^0,c
  1721                           
  1722                           ;newmain.c: 396:         while(buf>0){
  1723  007070  EFAF  F038         	goto	l2607
  1724  007074                     l2555:
  1725                           
  1726                           ;newmain.c: 397:             rgbarray tempc = rgb[5];
  1727  007074  EE21  F01E         	lfsr	2,_rgb+30	;volatile
  1728  007078  EE10  F014         	lfsr	1,rotate_sidebot@tempc
  1729  00707C  0E05               	movlw	5
  1730  00707E                     u1461:
  1731  00707E  CFDB FFE3          	movff	plusw2,plusw1
  1732  007082  06E8               	decf	wreg,f,c
  1733  007084  E2FC               	bc	u1461
  1734                           
  1735                           ;newmain.c: 398:             rgbarray tempd = rgb[6];
  1736  007086  EE21  F024         	lfsr	2,_rgb+36	;volatile
  1737  00708A  EE10  F01A         	lfsr	1,rotate_sidebot@tempd
  1738  00708E  0E05               	movlw	5
  1739  007090                     u1471:
  1740  007090  CFDB FFE3          	movff	plusw2,plusw1
  1741  007094  06E8               	decf	wreg,f,c
  1742  007096  E2FC               	bc	u1471
  1743  007098                     
  1744                           ;newmain.c: 399:             rgb[5].r = rgb[21].r;rgb[6].r = rgb[22].r;
  1745  007098  C17E  F11E         	movff	_rgb+126,_rgb+30	;volatile
  1746  00709C  C17F  F11F         	movff	_rgb+127,_rgb+31	;volatile
  1747  0070A0  C184  F124         	movff	_rgb+132,_rgb+36	;volatile
  1748  0070A4  C185  F125         	movff	_rgb+133,_rgb+37	;volatile
  1749  0070A8                     
  1750                           ;newmain.c: 400:             rgb[5].g = rgb[21].g;rgb[6].g = rgb[22].g;
  1751  0070A8  C180  F120         	movff	_rgb+128,_rgb+32	;volatile
  1752  0070AC  C181  F121         	movff	_rgb+129,_rgb+33	;volatile
  1753  0070B0  C186  F126         	movff	_rgb+134,_rgb+38	;volatile
  1754  0070B4  C187  F127         	movff	_rgb+135,_rgb+39	;volatile
  1755  0070B8                     
  1756                           ;newmain.c: 401:             rgb[5].b = rgb[21].b;rgb[6].b = rgb[22].b;
  1757  0070B8  C182  F122         	movff	_rgb+130,_rgb+34	;volatile
  1758  0070BC  C183  F123         	movff	_rgb+131,_rgb+35	;volatile
  1759  0070C0  C188  F128         	movff	_rgb+136,_rgb+40	;volatile
  1760  0070C4  C189  F129         	movff	_rgb+137,_rgb+41	;volatile
  1761  0070C8                     
  1762                           ;newmain.c: 402:             rgb[21].r = rgb[15].r;rgb[22].r = rgb[12].r;
  1763  0070C8  C15A  F17E         	movff	_rgb+90,_rgb+126	;volatile
  1764  0070CC  C15B  F17F         	movff	_rgb+91,_rgb+127	;volatile
  1765  0070D0  C148  F184         	movff	_rgb+72,_rgb+132	;volatile
  1766  0070D4  C149  F185         	movff	_rgb+73,_rgb+133	;volatile
  1767  0070D8                     
  1768                           ;newmain.c: 403:             rgb[21].g = rgb[15].g;rgb[22].g = rgb[12].g;
  1769  0070D8  C15C  F180         	movff	_rgb+92,_rgb+128	;volatile
  1770  0070DC  C15D  F181         	movff	_rgb+93,_rgb+129	;volatile
  1771  0070E0  C14A  F186         	movff	_rgb+74,_rgb+134	;volatile
  1772  0070E4  C14B  F187         	movff	_rgb+75,_rgb+135	;volatile
  1773  0070E8                     
  1774                           ;newmain.c: 404:             rgb[21].b = rgb[15].b;rgb[22].b = rgb[12].b;
  1775  0070E8  C15E  F182         	movff	_rgb+94,_rgb+130	;volatile
  1776  0070EC  C15F  F183         	movff	_rgb+95,_rgb+131	;volatile
  1777  0070F0  C14C  F188         	movff	_rgb+76,_rgb+136	;volatile
  1778  0070F4  C14D  F189         	movff	_rgb+77,_rgb+137	;volatile
  1779  0070F8                     
  1780                           ;newmain.c: 405:             rgb[15].r = rgb[17].r;rgb[12].r = rgb[18].r;
  1781  0070F8  C166  F15A         	movff	_rgb+102,_rgb+90	;volatile
  1782  0070FC  C167  F15B         	movff	_rgb+103,_rgb+91	;volatile
  1783  007100  C16C  F148         	movff	_rgb+108,_rgb+72	;volatile
  1784  007104  C16D  F149         	movff	_rgb+109,_rgb+73	;volatile
  1785  007108                     
  1786                           ;newmain.c: 406:             rgb[15].g = rgb[17].g;rgb[12].g = rgb[18].g;
  1787  007108  C168  F15C         	movff	_rgb+104,_rgb+92	;volatile
  1788  00710C  C169  F15D         	movff	_rgb+105,_rgb+93	;volatile
  1789  007110  C16E  F14A         	movff	_rgb+110,_rgb+74	;volatile
  1790  007114  C16F  F14B         	movff	_rgb+111,_rgb+75	;volatile
  1791  007118                     
  1792                           ;newmain.c: 407:             rgb[15].b = rgb[17].b;rgb[12].b = rgb[18].b;
  1793  007118  C16A  F15E         	movff	_rgb+106,_rgb+94	;volatile
  1794  00711C  C16B  F15F         	movff	_rgb+107,_rgb+95	;volatile
  1795  007120  C170  F14C         	movff	_rgb+112,_rgb+76	;volatile
  1796  007124  C171  F14D         	movff	_rgb+113,_rgb+77	;volatile
  1797  007128                     
  1798                           ;newmain.c: 408:             rgb[17].r = tempc.r;rgb[18].r = tempd.r;
  1799  007128  C014  F166         	movff	rotate_sidebot@tempc,_rgb+102	;volatile
  1800  00712C  C015  F167         	movff	rotate_sidebot@tempc+1,_rgb+103	;volatile
  1801  007130  C01A  F16C         	movff	rotate_sidebot@tempd,_rgb+108	;volatile
  1802  007134  C01B  F16D         	movff	rotate_sidebot@tempd+1,_rgb+109	;volatile
  1803  007138                     
  1804                           ;newmain.c: 409:             rgb[17].g = tempc.g;rgb[18].g = tempd.g;
  1805  007138  C016  F168         	movff	rotate_sidebot@tempc+2,_rgb+104	;volatile
  1806  00713C  C017  F169         	movff	rotate_sidebot@tempc+3,_rgb+105	;volatile
  1807  007140  C01C  F16E         	movff	rotate_sidebot@tempd+2,_rgb+110	;volatile
  1808  007144  C01D  F16F         	movff	rotate_sidebot@tempd+3,_rgb+111	;volatile
  1809  007148                     
  1810                           ;newmain.c: 410:             rgb[17].b = tempc.b;rgb[18].b = tempd.b;
  1811  007148  C018  F16A         	movff	rotate_sidebot@tempc+4,_rgb+106	;volatile
  1812  00714C  C019  F16B         	movff	rotate_sidebot@tempc+5,_rgb+107	;volatile
  1813  007150  C01E  F170         	movff	rotate_sidebot@tempd+4,_rgb+112	;volatile
  1814  007154  C01F  F171         	movff	rotate_sidebot@tempd+5,_rgb+113	;volatile
  1815  007158                     
  1816                           ;newmain.c: 411:             buf--;
  1817  007158  0606               	decf	rotate_sidebot@buf_307^0,f,c
  1818  00715A  A0D8               	btfss	status,0,c
  1819  00715C  0607               	decf	(rotate_sidebot@buf_307+1)^0,f,c
  1820  00715E                     l2607:
  1821                           
  1822                           ;newmain.c: 396:         while(buf>0){
  1823  00715E  BE07               	btfsc	(rotate_sidebot@buf_307+1)^0,7,c
  1824  007160  EFBC  F038         	goto	u1480
  1825  007164  5007               	movf	(rotate_sidebot@buf_307+1)^0,w,c
  1826  007166  E106               	bnz	u1481
  1827  007168  0406               	decf	rotate_sidebot@buf_307^0,w,c
  1828  00716A  B0D8               	btfsc	status,0,c
  1829  00716C  EFBA  F038         	goto	u1481
  1830  007170  EFBC  F038         	goto	u1480
  1831  007174                     u1481:
  1832  007174  EF3A  F038         	goto	l2555
  1833  007178                     u1480:
  1834  007178                     l128:
  1835  007178  0012               	return		;funcret
  1836  00717A                     __end_of_rotate_sidebot:
  1837                           	opt callstack 0
  1838                           
  1839 ;; *************** function _rotate_r *****************
  1840 ;; Defined at:
  1841 ;;		line 135 in file "newmain.c"
  1842 ;; Parameters:    Size  Location     Type
  1843 ;;  val             2    0[COMRAM] int 
  1844 ;; Auto vars:     Size  Location     Type
  1845 ;;  tempd           6   25[COMRAM] struct RGB
  1846 ;;  tempc           6   19[COMRAM] struct RGB
  1847 ;;  tempb           6   13[COMRAM] struct RGB
  1848 ;;  tempa           6    7[COMRAM] struct RGB
  1849 ;;  buf             2    5[COMRAM] int 
  1850 ;;  buf             2    3[COMRAM] int 
  1851 ;; Return value:  Size  Location     Type
  1852 ;;                  1    wreg      void 
  1853 ;; Registers used:
  1854 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  1855 ;; Tracked objects:
  1856 ;;		On entry : 0/0
  1857 ;;		On exit  : 0/0
  1858 ;;		Unchanged: 0/0
  1859 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1860 ;;      Params:         2       0       0       0       0       0       0
  1861 ;;      Locals:        28       0       0       0       0       0       0
  1862 ;;      Temps:          1       0       0       0       0       0       0
  1863 ;;      Totals:        31       0       0       0       0       0       0
  1864 ;;Total ram usage:       31 bytes
  1865 ;; Hardware stack levels used:    1
  1866 ;; This function calls:
  1867 ;;		Nothing
  1868 ;; This function is called by:
  1869 ;;		_main
  1870 ;; This function uses a non-reentrant model
  1871 ;;
  1872                           
  1873                           	psect	text4
  1874  006C5E                     __ptext4:
  1875                           	opt callstack 0
  1876  006C5E                     _rotate_r:
  1877                           	opt callstack 30
  1878  006C5E                     
  1879                           ;newmain.c: 136:     if(val > 3){
  1880  006C5E  BE02               	btfsc	(rotate_r@val+1)^0,7,c
  1881  006C60  EF3B  F036         	goto	u951
  1882  006C64  5002               	movf	(rotate_r@val+1)^0,w,c
  1883  006C66  E109               	bnz	u950
  1884  006C68  0E04               	movlw	4
  1885  006C6A  5C01               	subwf	rotate_r@val^0,w,c
  1886  006C6C  A0D8               	btfss	status,0,c
  1887  006C6E  EF3B  F036         	goto	u951
  1888  006C72  EF3D  F036         	goto	u950
  1889  006C76                     u951:
  1890  006C76  EF41  F036         	goto	l1893
  1891  006C7A                     u950:
  1892  006C7A                     
  1893                           ;newmain.c: 137:         val = 3;
  1894  006C7A  0E00               	movlw	0
  1895  006C7C  6E02               	movwf	(rotate_r@val+1)^0,c
  1896  006C7E  0E03               	movlw	3
  1897  006C80  6E01               	movwf	rotate_r@val^0,c
  1898  006C82                     l1893:
  1899                           
  1900                           ;newmain.c: 139:     if(val>original[2]){
  1901  006C82  5001               	movf	rotate_r@val^0,w,c
  1902  006C84  5C31               	subwf	(_original+4)^0,w,c	;volatile
  1903  006C86  5032               	movf	(_original+5)^0,w,c	;volatile
  1904  006C88  0A80               	xorlw	128
  1905  006C8A  6E03               	movwf	??_rotate_r^0,c
  1906  006C8C  5002               	movf	(rotate_r@val+1)^0,w,c
  1907  006C8E  0A80               	xorlw	128
  1908  006C90  5803               	subwfb	??_rotate_r^0,w,c
  1909  006C92  B0D8               	btfsc	status,0,c
  1910  006C94  EF4E  F036         	goto	u961
  1911  006C98  EF50  F036         	goto	u960
  1912  006C9C                     u961:
  1913  006C9C  EFDC  F036         	goto	l1951
  1914  006CA0                     u960:
  1915  006CA0                     
  1916                           ;newmain.c: 140:         int buf = val-original[2];
  1917  006CA0  5031               	movf	(_original+4)^0,w,c	;volatile
  1918  006CA2  5C01               	subwf	rotate_r@val^0,w,c
  1919  006CA4  6E04               	movwf	rotate_r@buf^0,c
  1920  006CA6  5032               	movf	(_original+5)^0,w,c	;volatile
  1921  006CA8  5802               	subwfb	(rotate_r@val+1)^0,w,c
  1922  006CAA  6E05               	movwf	(rotate_r@buf+1)^0,c
  1923                           
  1924                           ;newmain.c: 141:         while(buf>0){
  1925  006CAC  EFCD  F036         	goto	l1949
  1926  006CB0                     l1897:
  1927                           
  1928                           ;newmain.c: 142:             rgbarray tempa = rgb[2];
  1929  006CB0  EE21  F00C         	lfsr	2,_rgb+12	;volatile
  1930  006CB4  EE10  F008         	lfsr	1,rotate_r@tempa
  1931  006CB8  0E05               	movlw	5
  1932  006CBA                     u971:
  1933  006CBA  CFDB FFE3          	movff	plusw2,plusw1
  1934  006CBE  06E8               	decf	wreg,f,c
  1935  006CC0  E2FC               	bc	u971
  1936                           
  1937                           ;newmain.c: 143:             rgbarray tempb = rgb[3];
  1938  006CC2  EE21  F012         	lfsr	2,_rgb+18	;volatile
  1939  006CC6  EE10  F00E         	lfsr	1,rotate_r@tempb
  1940  006CCA  0E05               	movlw	5
  1941  006CCC                     u981:
  1942  006CCC  CFDB FFE3          	movff	plusw2,plusw1
  1943  006CD0  06E8               	decf	wreg,f,c
  1944  006CD2  E2FC               	bc	u981
  1945  006CD4                     
  1946                           ;newmain.c: 144:             rgb[2].r = rgb[6].r;rgb[3].r = rgb[7].r;
  1947  006CD4  C124  F10C         	movff	_rgb+36,_rgb+12	;volatile
  1948  006CD8  C125  F10D         	movff	_rgb+37,_rgb+13	;volatile
  1949  006CDC  C12A  F112         	movff	_rgb+42,_rgb+18	;volatile
  1950  006CE0  C12B  F113         	movff	_rgb+43,_rgb+19	;volatile
  1951  006CE4                     
  1952                           ;newmain.c: 145:             rgb[2].g = rgb[6].g;rgb[3].g = rgb[7].g;
  1953  006CE4  C126  F10E         	movff	_rgb+38,_rgb+14	;volatile
  1954  006CE8  C127  F10F         	movff	_rgb+39,_rgb+15	;volatile
  1955  006CEC  C12C  F114         	movff	_rgb+44,_rgb+20	;volatile
  1956  006CF0  C12D  F115         	movff	_rgb+45,_rgb+21	;volatile
  1957  006CF4                     
  1958                           ;newmain.c: 146:             rgb[2].b = rgb[6].b;rgb[3].b = rgb[7].b;
  1959  006CF4  C128  F110         	movff	_rgb+40,_rgb+16	;volatile
  1960  006CF8  C129  F111         	movff	_rgb+41,_rgb+17	;volatile
  1961  006CFC  C12E  F116         	movff	_rgb+46,_rgb+22	;volatile
  1962  006D00  C12F  F117         	movff	_rgb+47,_rgb+23	;volatile
  1963  006D04                     
  1964                           ;newmain.c: 147:             rgb[6].r = rgb[10].r;rgb[7].r = rgb[11].r;
  1965  006D04  C13C  F124         	movff	_rgb+60,_rgb+36	;volatile
  1966  006D08  C13D  F125         	movff	_rgb+61,_rgb+37	;volatile
  1967  006D0C  C142  F12A         	movff	_rgb+66,_rgb+42	;volatile
  1968  006D10  C143  F12B         	movff	_rgb+67,_rgb+43	;volatile
  1969  006D14                     
  1970                           ;newmain.c: 148:             rgb[6].g = rgb[10].g;rgb[7].g = rgb[11].g;
  1971  006D14  C13E  F126         	movff	_rgb+62,_rgb+38	;volatile
  1972  006D18  C13F  F127         	movff	_rgb+63,_rgb+39	;volatile
  1973  006D1C  C144  F12C         	movff	_rgb+68,_rgb+44	;volatile
  1974  006D20  C145  F12D         	movff	_rgb+69,_rgb+45	;volatile
  1975  006D24                     
  1976                           ;newmain.c: 149:             rgb[6].b = rgb[10].b;rgb[7].b = rgb[11].b;
  1977  006D24  C140  F128         	movff	_rgb+64,_rgb+40	;volatile
  1978  006D28  C141  F129         	movff	_rgb+65,_rgb+41	;volatile
  1979  006D2C  C146  F12E         	movff	_rgb+70,_rgb+46	;volatile
  1980  006D30  C147  F12F         	movff	_rgb+71,_rgb+47	;volatile
  1981  006D34                     
  1982                           ;newmain.c: 150:             rgb[10].r = rgb[14].r;rgb[11].r = rgb[15].r;
  1983  006D34  C154  F13C         	movff	_rgb+84,_rgb+60	;volatile
  1984  006D38  C155  F13D         	movff	_rgb+85,_rgb+61	;volatile
  1985  006D3C  C15A  F142         	movff	_rgb+90,_rgb+66	;volatile
  1986  006D40  C15B  F143         	movff	_rgb+91,_rgb+67	;volatile
  1987  006D44                     
  1988                           ;newmain.c: 151:             rgb[10].g = rgb[14].g;rgb[11].g = rgb[15].g;
  1989  006D44  C156  F13E         	movff	_rgb+86,_rgb+62	;volatile
  1990  006D48  C157  F13F         	movff	_rgb+87,_rgb+63	;volatile
  1991  006D4C  C15C  F144         	movff	_rgb+92,_rgb+68	;volatile
  1992  006D50  C15D  F145         	movff	_rgb+93,_rgb+69	;volatile
  1993  006D54                     
  1994                           ;newmain.c: 152:             rgb[10].b = rgb[14].b;rgb[11].b = rgb[15].b;
  1995  006D54  C158  F140         	movff	_rgb+88,_rgb+64	;volatile
  1996  006D58  C159  F141         	movff	_rgb+89,_rgb+65	;volatile
  1997  006D5C  C15E  F146         	movff	_rgb+94,_rgb+70	;volatile
  1998  006D60  C15F  F147         	movff	_rgb+95,_rgb+71	;volatile
  1999  006D64                     
  2000                           ;newmain.c: 153:             rgb[14].r = tempa.r;rgb[15].r = tempb.r;
  2001  006D64  C008  F154         	movff	rotate_r@tempa,_rgb+84	;volatile
  2002  006D68  C009  F155         	movff	rotate_r@tempa+1,_rgb+85	;volatile
  2003  006D6C  C00E  F15A         	movff	rotate_r@tempb,_rgb+90	;volatile
  2004  006D70  C00F  F15B         	movff	rotate_r@tempb+1,_rgb+91	;volatile
  2005  006D74                     
  2006                           ;newmain.c: 154:             rgb[14].g = tempa.g;rgb[15].g = tempb.g;
  2007  006D74  C00A  F156         	movff	rotate_r@tempa+2,_rgb+86	;volatile
  2008  006D78  C00B  F157         	movff	rotate_r@tempa+3,_rgb+87	;volatile
  2009  006D7C  C010  F15C         	movff	rotate_r@tempb+2,_rgb+92	;volatile
  2010  006D80  C011  F15D         	movff	rotate_r@tempb+3,_rgb+93	;volatile
  2011  006D84                     
  2012                           ;newmain.c: 155:             rgb[14].b = tempa.b;rgb[15].b = tempb.b;
  2013  006D84  C00C  F158         	movff	rotate_r@tempa+4,_rgb+88	;volatile
  2014  006D88  C00D  F159         	movff	rotate_r@tempa+5,_rgb+89	;volatile
  2015  006D8C  C012  F15E         	movff	rotate_r@tempb+4,_rgb+94	;volatile
  2016  006D90  C013  F15F         	movff	rotate_r@tempb+5,_rgb+95	;volatile
  2017  006D94                     
  2018                           ;newmain.c: 156:             buf--;
  2019  006D94  0604               	decf	rotate_r@buf^0,f,c
  2020  006D96  A0D8               	btfss	status,0,c
  2021  006D98  0605               	decf	(rotate_r@buf+1)^0,f,c
  2022  006D9A                     l1949:
  2023                           
  2024                           ;newmain.c: 141:         while(buf>0){
  2025  006D9A  BE05               	btfsc	(rotate_r@buf+1)^0,7,c
  2026  006D9C  EFDA  F036         	goto	u990
  2027  006DA0  5005               	movf	(rotate_r@buf+1)^0,w,c
  2028  006DA2  E106               	bnz	u991
  2029  006DA4  0404               	decf	rotate_r@buf^0,w,c
  2030  006DA6  B0D8               	btfsc	status,0,c
  2031  006DA8  EFD8  F036         	goto	u991
  2032  006DAC  EFDA  F036         	goto	u990
  2033  006DB0                     u991:
  2034  006DB0  EF58  F036         	goto	l1897
  2035  006DB4                     u990:
  2036  006DB4  EF75  F037         	goto	l63
  2037  006DB8                     l1951:
  2038  006DB8  5031               	movf	(_original+4)^0,w,c	;volatile
  2039  006DBA  5C01               	subwf	rotate_r@val^0,w,c
  2040  006DBC  5002               	movf	(rotate_r@val+1)^0,w,c
  2041  006DBE  0A80               	xorlw	128
  2042  006DC0  6E03               	movwf	??_rotate_r^0,c
  2043  006DC2  5032               	movf	(_original+5)^0,w,c	;volatile
  2044  006DC4  0A80               	xorlw	128
  2045  006DC6  5803               	subwfb	??_rotate_r^0,w,c
  2046  006DC8  B0D8               	btfsc	status,0,c
  2047  006DCA  EFE9  F036         	goto	u1001
  2048  006DCE  EFEB  F036         	goto	u1000
  2049  006DD2                     u1001:
  2050  006DD2  EF75  F037         	goto	l63
  2051  006DD6                     u1000:
  2052  006DD6                     
  2053                           ;newmain.c: 160:         int buf = original[2]-val;
  2054  006DD6  5001               	movf	rotate_r@val^0,w,c
  2055  006DD8  5C31               	subwf	(_original+4)^0,w,c	;volatile
  2056  006DDA  6E06               	movwf	rotate_r@buf_207^0,c
  2057  006DDC  5002               	movf	(rotate_r@val+1)^0,w,c
  2058  006DDE  5832               	subwfb	(_original+5)^0,w,c	;volatile
  2059  006DE0  6E07               	movwf	(rotate_r@buf_207+1)^0,c
  2060                           
  2061                           ;newmain.c: 161:         while(buf>0){
  2062  006DE2  EF68  F037         	goto	l2007
  2063  006DE6                     l1955:
  2064                           
  2065                           ;newmain.c: 162:             rgbarray tempc = rgb[14];
  2066  006DE6  EE21  F054         	lfsr	2,_rgb+84	;volatile
  2067  006DEA  EE10  F014         	lfsr	1,rotate_r@tempc
  2068  006DEE  0E05               	movlw	5
  2069  006DF0                     u1011:
  2070  006DF0  CFDB FFE3          	movff	plusw2,plusw1
  2071  006DF4  06E8               	decf	wreg,f,c
  2072  006DF6  E2FC               	bc	u1011
  2073                           
  2074                           ;newmain.c: 163:             rgbarray tempd = rgb[15];
  2075  006DF8  EE21  F05A         	lfsr	2,_rgb+90	;volatile
  2076  006DFC  EE10  F01A         	lfsr	1,rotate_r@tempd
  2077  006E00  0E05               	movlw	5
  2078  006E02                     u1021:
  2079  006E02  CFDB FFE3          	movff	plusw2,plusw1
  2080  006E06  06E8               	decf	wreg,f,c
  2081  006E08  E2FC               	bc	u1021
  2082  006E0A                     
  2083                           ;newmain.c: 164:             rgb[14].r = rgb[10].r;rgb[15].r = rgb[11].r;
  2084  006E0A  C13C  F154         	movff	_rgb+60,_rgb+84	;volatile
  2085  006E0E  C13D  F155         	movff	_rgb+61,_rgb+85	;volatile
  2086  006E12  C142  F15A         	movff	_rgb+66,_rgb+90	;volatile
  2087  006E16  C143  F15B         	movff	_rgb+67,_rgb+91	;volatile
  2088  006E1A                     
  2089                           ;newmain.c: 165:             rgb[14].g = rgb[10].g;rgb[15].g = rgb[11].g;
  2090  006E1A  C13E  F156         	movff	_rgb+62,_rgb+86	;volatile
  2091  006E1E  C13F  F157         	movff	_rgb+63,_rgb+87	;volatile
  2092  006E22  C144  F15C         	movff	_rgb+68,_rgb+92	;volatile
  2093  006E26  C145  F15D         	movff	_rgb+69,_rgb+93	;volatile
  2094  006E2A                     
  2095                           ;newmain.c: 166:             rgb[14].b = rgb[10].b;rgb[15].b = rgb[11].b;
  2096  006E2A  C140  F158         	movff	_rgb+64,_rgb+88	;volatile
  2097  006E2E  C141  F159         	movff	_rgb+65,_rgb+89	;volatile
  2098  006E32  C146  F15E         	movff	_rgb+70,_rgb+94	;volatile
  2099  006E36  C147  F15F         	movff	_rgb+71,_rgb+95	;volatile
  2100  006E3A                     
  2101                           ;newmain.c: 167:             rgb[10].r = rgb[6].r;rgb[11].r = rgb[7].r;
  2102  006E3A  C124  F13C         	movff	_rgb+36,_rgb+60	;volatile
  2103  006E3E  C125  F13D         	movff	_rgb+37,_rgb+61	;volatile
  2104  006E42  C12A  F142         	movff	_rgb+42,_rgb+66	;volatile
  2105  006E46  C12B  F143         	movff	_rgb+43,_rgb+67	;volatile
  2106  006E4A                     
  2107                           ;newmain.c: 168:             rgb[10].g = rgb[6].g;rgb[11].g = rgb[7].g;
  2108  006E4A  C126  F13E         	movff	_rgb+38,_rgb+62	;volatile
  2109  006E4E  C127  F13F         	movff	_rgb+39,_rgb+63	;volatile
  2110  006E52  C12C  F144         	movff	_rgb+44,_rgb+68	;volatile
  2111  006E56  C12D  F145         	movff	_rgb+45,_rgb+69	;volatile
  2112  006E5A                     
  2113                           ;newmain.c: 169:             rgb[10].b = rgb[6].b;rgb[11].b = rgb[7].b;
  2114  006E5A  C128  F140         	movff	_rgb+40,_rgb+64	;volatile
  2115  006E5E  C129  F141         	movff	_rgb+41,_rgb+65	;volatile
  2116  006E62  C12E  F146         	movff	_rgb+46,_rgb+70	;volatile
  2117  006E66  C12F  F147         	movff	_rgb+47,_rgb+71	;volatile
  2118  006E6A                     
  2119                           ;newmain.c: 170:             rgb[6].r = rgb[2].r;rgb[7].r = rgb[3].r;
  2120  006E6A  C10C  F124         	movff	_rgb+12,_rgb+36	;volatile
  2121  006E6E  C10D  F125         	movff	_rgb+13,_rgb+37	;volatile
  2122  006E72  C112  F12A         	movff	_rgb+18,_rgb+42	;volatile
  2123  006E76  C113  F12B         	movff	_rgb+19,_rgb+43	;volatile
  2124  006E7A                     
  2125                           ;newmain.c: 171:             rgb[6].g = rgb[2].g;rgb[7].g = rgb[3].g;
  2126  006E7A  C10E  F126         	movff	_rgb+14,_rgb+38	;volatile
  2127  006E7E  C10F  F127         	movff	_rgb+15,_rgb+39	;volatile
  2128  006E82  C114  F12C         	movff	_rgb+20,_rgb+44	;volatile
  2129  006E86  C115  F12D         	movff	_rgb+21,_rgb+45	;volatile
  2130  006E8A                     
  2131                           ;newmain.c: 172:             rgb[6].b = rgb[2].b;rgb[7].b = rgb[3].b;
  2132  006E8A  C110  F128         	movff	_rgb+16,_rgb+40	;volatile
  2133  006E8E  C111  F129         	movff	_rgb+17,_rgb+41	;volatile
  2134  006E92  C116  F12E         	movff	_rgb+22,_rgb+46	;volatile
  2135  006E96  C117  F12F         	movff	_rgb+23,_rgb+47	;volatile
  2136  006E9A                     
  2137                           ;newmain.c: 173:             rgb[2].r = tempc.r;rgb[3].r = tempd.r;
  2138  006E9A  C014  F10C         	movff	rotate_r@tempc,_rgb+12	;volatile
  2139  006E9E  C015  F10D         	movff	rotate_r@tempc+1,_rgb+13	;volatile
  2140  006EA2  C01A  F112         	movff	rotate_r@tempd,_rgb+18	;volatile
  2141  006EA6  C01B  F113         	movff	rotate_r@tempd+1,_rgb+19	;volatile
  2142  006EAA                     
  2143                           ;newmain.c: 174:             rgb[2].g = tempc.g;rgb[3].g = tempd.g;
  2144  006EAA  C016  F10E         	movff	rotate_r@tempc+2,_rgb+14	;volatile
  2145  006EAE  C017  F10F         	movff	rotate_r@tempc+3,_rgb+15	;volatile
  2146  006EB2  C01C  F114         	movff	rotate_r@tempd+2,_rgb+20	;volatile
  2147  006EB6  C01D  F115         	movff	rotate_r@tempd+3,_rgb+21	;volatile
  2148  006EBA                     
  2149                           ;newmain.c: 175:             rgb[2].b = tempc.b;rgb[3].b = tempd.b;
  2150  006EBA  C018  F110         	movff	rotate_r@tempc+4,_rgb+16	;volatile
  2151  006EBE  C019  F111         	movff	rotate_r@tempc+5,_rgb+17	;volatile
  2152  006EC2  C01E  F116         	movff	rotate_r@tempd+4,_rgb+22	;volatile
  2153  006EC6  C01F  F117         	movff	rotate_r@tempd+5,_rgb+23	;volatile
  2154  006ECA                     
  2155                           ;newmain.c: 176:             buf--;
  2156  006ECA  0606               	decf	rotate_r@buf_207^0,f,c
  2157  006ECC  A0D8               	btfss	status,0,c
  2158  006ECE  0607               	decf	(rotate_r@buf_207+1)^0,f,c
  2159  006ED0                     l2007:
  2160                           
  2161                           ;newmain.c: 161:         while(buf>0){
  2162  006ED0  BE07               	btfsc	(rotate_r@buf_207+1)^0,7,c
  2163  006ED2  EF75  F037         	goto	u1030
  2164  006ED6  5007               	movf	(rotate_r@buf_207+1)^0,w,c
  2165  006ED8  E106               	bnz	u1031
  2166  006EDA  0406               	decf	rotate_r@buf_207^0,w,c
  2167  006EDC  B0D8               	btfsc	status,0,c
  2168  006EDE  EF73  F037         	goto	u1031
  2169  006EE2  EF75  F037         	goto	u1030
  2170  006EE6                     u1031:
  2171  006EE6  EFF3  F036         	goto	l1955
  2172  006EEA                     u1030:
  2173  006EEA                     l63:
  2174  006EEA  0012               	return		;funcret
  2175  006EEC                     __end_of_rotate_r:
  2176                           	opt callstack 0
  2177                           
  2178 ;; *************** function _rotate_l *****************
  2179 ;; Defined at:
  2180 ;;		line 181 in file "newmain.c"
  2181 ;; Parameters:    Size  Location     Type
  2182 ;;  val             2    0[COMRAM] int 
  2183 ;; Auto vars:     Size  Location     Type
  2184 ;;  tempd           6   25[COMRAM] struct RGB
  2185 ;;  tempc           6   19[COMRAM] struct RGB
  2186 ;;  tempb           6   13[COMRAM] struct RGB
  2187 ;;  tempa           6    7[COMRAM] struct RGB
  2188 ;;  buf             2    5[COMRAM] int 
  2189 ;;  buf             2    3[COMRAM] int 
  2190 ;; Return value:  Size  Location     Type
  2191 ;;                  1    wreg      void 
  2192 ;; Registers used:
  2193 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  2194 ;; Tracked objects:
  2195 ;;		On entry : 0/0
  2196 ;;		On exit  : 0/0
  2197 ;;		Unchanged: 0/0
  2198 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2199 ;;      Params:         2       0       0       0       0       0       0
  2200 ;;      Locals:        28       0       0       0       0       0       0
  2201 ;;      Temps:          1       0       0       0       0       0       0
  2202 ;;      Totals:        31       0       0       0       0       0       0
  2203 ;;Total ram usage:       31 bytes
  2204 ;; Hardware stack levels used:    1
  2205 ;; This function calls:
  2206 ;;		Nothing
  2207 ;; This function is called by:
  2208 ;;		_main
  2209 ;; This function uses a non-reentrant model
  2210 ;;
  2211                           
  2212                           	psect	text5
  2213  0069D0                     __ptext5:
  2214                           	opt callstack 0
  2215  0069D0                     _rotate_l:
  2216                           	opt callstack 30
  2217  0069D0                     
  2218                           ;newmain.c: 183:     if(val > 3){
  2219  0069D0  BE02               	btfsc	(rotate_l@val+1)^0,7,c
  2220  0069D2  EFF4  F034         	goto	u1041
  2221  0069D6  5002               	movf	(rotate_l@val+1)^0,w,c
  2222  0069D8  E109               	bnz	u1040
  2223  0069DA  0E04               	movlw	4
  2224  0069DC  5C01               	subwf	rotate_l@val^0,w,c
  2225  0069DE  A0D8               	btfss	status,0,c
  2226  0069E0  EFF4  F034         	goto	u1041
  2227  0069E4  EFF6  F034         	goto	u1040
  2228  0069E8                     u1041:
  2229  0069E8  EFFA  F034         	goto	l2013
  2230  0069EC                     u1040:
  2231  0069EC                     
  2232                           ;newmain.c: 184:         val = 3;
  2233  0069EC  0E00               	movlw	0
  2234  0069EE  6E02               	movwf	(rotate_l@val+1)^0,c
  2235  0069F0  0E03               	movlw	3
  2236  0069F2  6E01               	movwf	rotate_l@val^0,c
  2237  0069F4                     l2013:
  2238                           
  2239                           ;newmain.c: 186:     if(val>original[3]){
  2240  0069F4  5001               	movf	rotate_l@val^0,w,c
  2241  0069F6  5C33               	subwf	(_original+6)^0,w,c	;volatile
  2242  0069F8  5034               	movf	(_original+7)^0,w,c	;volatile
  2243  0069FA  0A80               	xorlw	128
  2244  0069FC  6E03               	movwf	??_rotate_l^0,c
  2245  0069FE  5002               	movf	(rotate_l@val+1)^0,w,c
  2246  006A00  0A80               	xorlw	128
  2247  006A02  5803               	subwfb	??_rotate_l^0,w,c
  2248  006A04  B0D8               	btfsc	status,0,c
  2249  006A06  EF07  F035         	goto	u1051
  2250  006A0A  EF09  F035         	goto	u1050
  2251  006A0E                     u1051:
  2252  006A0E  EF95  F035         	goto	l2071
  2253  006A12                     u1050:
  2254  006A12                     
  2255                           ;newmain.c: 187:         int buf = val-original[3];
  2256  006A12  5033               	movf	(_original+6)^0,w,c	;volatile
  2257  006A14  5C01               	subwf	rotate_l@val^0,w,c
  2258  006A16  6E04               	movwf	rotate_l@buf^0,c
  2259  006A18  5034               	movf	(_original+7)^0,w,c	;volatile
  2260  006A1A  5802               	subwfb	(rotate_l@val+1)^0,w,c
  2261  006A1C  6E05               	movwf	(rotate_l@buf+1)^0,c
  2262                           
  2263                           ;newmain.c: 188:         while(buf>0){
  2264  006A1E  EF86  F035         	goto	l2069
  2265  006A22                     l2017:
  2266                           
  2267                           ;newmain.c: 189:             rgbarray tempa = rgb[0];
  2268  006A22  EE21  F000         	lfsr	2,_rgb	;volatile
  2269  006A26  EE10  F008         	lfsr	1,rotate_l@tempa
  2270  006A2A  0E05               	movlw	5
  2271  006A2C                     u1061:
  2272  006A2C  CFDB FFE3          	movff	plusw2,plusw1
  2273  006A30  06E8               	decf	wreg,f,c
  2274  006A32  E2FC               	bc	u1061
  2275                           
  2276                           ;newmain.c: 190:             rgbarray tempb = rgb[1];
  2277  006A34  EE21  F006         	lfsr	2,_rgb+6	;volatile
  2278  006A38  EE10  F00E         	lfsr	1,rotate_l@tempb
  2279  006A3C  0E05               	movlw	5
  2280  006A3E                     u1071:
  2281  006A3E  CFDB FFE3          	movff	plusw2,plusw1
  2282  006A42  06E8               	decf	wreg,f,c
  2283  006A44  E2FC               	bc	u1071
  2284  006A46                     
  2285                           ;newmain.c: 191:             rgb[0].r = rgb[4].r;rgb[1].r = rgb[5].r;
  2286  006A46  C118  F100         	movff	_rgb+24,_rgb	;volatile
  2287  006A4A  C119  F101         	movff	_rgb+25,_rgb+1	;volatile
  2288  006A4E  C11E  F106         	movff	_rgb+30,_rgb+6	;volatile
  2289  006A52  C11F  F107         	movff	_rgb+31,_rgb+7	;volatile
  2290  006A56                     
  2291                           ;newmain.c: 192:             rgb[0].g = rgb[4].g;rgb[1].g = rgb[5].g;
  2292  006A56  C11A  F102         	movff	_rgb+26,_rgb+2	;volatile
  2293  006A5A  C11B  F103         	movff	_rgb+27,_rgb+3	;volatile
  2294  006A5E  C120  F108         	movff	_rgb+32,_rgb+8	;volatile
  2295  006A62  C121  F109         	movff	_rgb+33,_rgb+9	;volatile
  2296  006A66                     
  2297                           ;newmain.c: 193:             rgb[0].b = rgb[4].b;rgb[1].b = rgb[5].b;
  2298  006A66  C11C  F104         	movff	_rgb+28,_rgb+4	;volatile
  2299  006A6A  C11D  F105         	movff	_rgb+29,_rgb+5	;volatile
  2300  006A6E  C122  F10A         	movff	_rgb+34,_rgb+10	;volatile
  2301  006A72  C123  F10B         	movff	_rgb+35,_rgb+11	;volatile
  2302  006A76                     
  2303                           ;newmain.c: 194:             rgb[4].r = rgb[8].r;rgb[5].r = rgb[9].r;
  2304  006A76  C130  F118         	movff	_rgb+48,_rgb+24	;volatile
  2305  006A7A  C131  F119         	movff	_rgb+49,_rgb+25	;volatile
  2306  006A7E  C136  F11E         	movff	_rgb+54,_rgb+30	;volatile
  2307  006A82  C137  F11F         	movff	_rgb+55,_rgb+31	;volatile
  2308  006A86                     
  2309                           ;newmain.c: 195:             rgb[4].g = rgb[8].g;rgb[5].g = rgb[9].g;
  2310  006A86  C132  F11A         	movff	_rgb+50,_rgb+26	;volatile
  2311  006A8A  C133  F11B         	movff	_rgb+51,_rgb+27	;volatile
  2312  006A8E  C138  F120         	movff	_rgb+56,_rgb+32	;volatile
  2313  006A92  C139  F121         	movff	_rgb+57,_rgb+33	;volatile
  2314  006A96                     
  2315                           ;newmain.c: 196:             rgb[4].b = rgb[8].b;rgb[5].b = rgb[9].b;
  2316  006A96  C134  F11C         	movff	_rgb+52,_rgb+28	;volatile
  2317  006A9A  C135  F11D         	movff	_rgb+53,_rgb+29	;volatile
  2318  006A9E  C13A  F122         	movff	_rgb+58,_rgb+34	;volatile
  2319  006AA2  C13B  F123         	movff	_rgb+59,_rgb+35	;volatile
  2320  006AA6                     
  2321                           ;newmain.c: 197:             rgb[8].r = rgb[12].r;rgb[9].r = rgb[13].r;
  2322  006AA6  C148  F130         	movff	_rgb+72,_rgb+48	;volatile
  2323  006AAA  C149  F131         	movff	_rgb+73,_rgb+49	;volatile
  2324  006AAE  C14E  F136         	movff	_rgb+78,_rgb+54	;volatile
  2325  006AB2  C14F  F137         	movff	_rgb+79,_rgb+55	;volatile
  2326  006AB6                     
  2327                           ;newmain.c: 198:             rgb[8].g = rgb[12].g;rgb[9].g = rgb[13].g;
  2328  006AB6  C14A  F132         	movff	_rgb+74,_rgb+50	;volatile
  2329  006ABA  C14B  F133         	movff	_rgb+75,_rgb+51	;volatile
  2330  006ABE  C150  F138         	movff	_rgb+80,_rgb+56	;volatile
  2331  006AC2  C151  F139         	movff	_rgb+81,_rgb+57	;volatile
  2332  006AC6                     
  2333                           ;newmain.c: 199:             rgb[8].b = rgb[12].b;rgb[9].b = rgb[13].b;
  2334  006AC6  C14C  F134         	movff	_rgb+76,_rgb+52	;volatile
  2335  006ACA  C14D  F135         	movff	_rgb+77,_rgb+53	;volatile
  2336  006ACE  C152  F13A         	movff	_rgb+82,_rgb+58	;volatile
  2337  006AD2  C153  F13B         	movff	_rgb+83,_rgb+59	;volatile
  2338  006AD6                     
  2339                           ;newmain.c: 200:             rgb[12].r = tempa.r;rgb[13].r = tempb.r;
  2340  006AD6  C008  F148         	movff	rotate_l@tempa,_rgb+72	;volatile
  2341  006ADA  C009  F149         	movff	rotate_l@tempa+1,_rgb+73	;volatile
  2342  006ADE  C00E  F14E         	movff	rotate_l@tempb,_rgb+78	;volatile
  2343  006AE2  C00F  F14F         	movff	rotate_l@tempb+1,_rgb+79	;volatile
  2344  006AE6                     
  2345                           ;newmain.c: 201:             rgb[12].g = tempa.g;rgb[13].g = tempb.g;
  2346  006AE6  C00A  F14A         	movff	rotate_l@tempa+2,_rgb+74	;volatile
  2347  006AEA  C00B  F14B         	movff	rotate_l@tempa+3,_rgb+75	;volatile
  2348  006AEE  C010  F150         	movff	rotate_l@tempb+2,_rgb+80	;volatile
  2349  006AF2  C011  F151         	movff	rotate_l@tempb+3,_rgb+81	;volatile
  2350  006AF6                     
  2351                           ;newmain.c: 202:             rgb[12].b = tempa.b;rgb[13].b = tempb.b;
  2352  006AF6  C00C  F14C         	movff	rotate_l@tempa+4,_rgb+76	;volatile
  2353  006AFA  C00D  F14D         	movff	rotate_l@tempa+5,_rgb+77	;volatile
  2354  006AFE  C012  F152         	movff	rotate_l@tempb+4,_rgb+82	;volatile
  2355  006B02  C013  F153         	movff	rotate_l@tempb+5,_rgb+83	;volatile
  2356  006B06                     
  2357                           ;newmain.c: 203:             buf--;
  2358  006B06  0604               	decf	rotate_l@buf^0,f,c
  2359  006B08  A0D8               	btfss	status,0,c
  2360  006B0A  0605               	decf	(rotate_l@buf+1)^0,f,c
  2361  006B0C                     l2069:
  2362                           
  2363                           ;newmain.c: 188:         while(buf>0){
  2364  006B0C  BE05               	btfsc	(rotate_l@buf+1)^0,7,c
  2365  006B0E  EF93  F035         	goto	u1080
  2366  006B12  5005               	movf	(rotate_l@buf+1)^0,w,c
  2367  006B14  E106               	bnz	u1081
  2368  006B16  0404               	decf	rotate_l@buf^0,w,c
  2369  006B18  B0D8               	btfsc	status,0,c
  2370  006B1A  EF91  F035         	goto	u1081
  2371  006B1E  EF93  F035         	goto	u1080
  2372  006B22                     u1081:
  2373  006B22  EF11  F035         	goto	l2017
  2374  006B26                     u1080:
  2375  006B26  EF2E  F036         	goto	l76
  2376  006B2A                     l2071:
  2377  006B2A  5033               	movf	(_original+6)^0,w,c	;volatile
  2378  006B2C  5C01               	subwf	rotate_l@val^0,w,c
  2379  006B2E  5002               	movf	(rotate_l@val+1)^0,w,c
  2380  006B30  0A80               	xorlw	128
  2381  006B32  6E03               	movwf	??_rotate_l^0,c
  2382  006B34  5034               	movf	(_original+7)^0,w,c	;volatile
  2383  006B36  0A80               	xorlw	128
  2384  006B38  5803               	subwfb	??_rotate_l^0,w,c
  2385  006B3A  B0D8               	btfsc	status,0,c
  2386  006B3C  EFA2  F035         	goto	u1091
  2387  006B40  EFA4  F035         	goto	u1090
  2388  006B44                     u1091:
  2389  006B44  EF2E  F036         	goto	l76
  2390  006B48                     u1090:
  2391  006B48                     
  2392                           ;newmain.c: 207:         int buf = original[3]-val;
  2393  006B48  5001               	movf	rotate_l@val^0,w,c
  2394  006B4A  5C33               	subwf	(_original+6)^0,w,c	;volatile
  2395  006B4C  6E06               	movwf	rotate_l@buf_227^0,c
  2396  006B4E  5002               	movf	(rotate_l@val+1)^0,w,c
  2397  006B50  5834               	subwfb	(_original+7)^0,w,c	;volatile
  2398  006B52  6E07               	movwf	(rotate_l@buf_227+1)^0,c
  2399                           
  2400                           ;newmain.c: 208:         while(buf>0){
  2401  006B54  EF21  F036         	goto	l2127
  2402  006B58                     l2075:
  2403                           
  2404                           ;newmain.c: 209:             rgbarray tempc = rgb[12];
  2405  006B58  EE21  F048         	lfsr	2,_rgb+72	;volatile
  2406  006B5C  EE10  F014         	lfsr	1,rotate_l@tempc
  2407  006B60  0E05               	movlw	5
  2408  006B62                     u1101:
  2409  006B62  CFDB FFE3          	movff	plusw2,plusw1
  2410  006B66  06E8               	decf	wreg,f,c
  2411  006B68  E2FC               	bc	u1101
  2412                           
  2413                           ;newmain.c: 210:             rgbarray tempd = rgb[13];
  2414  006B6A  EE21  F04E         	lfsr	2,_rgb+78	;volatile
  2415  006B6E  EE10  F01A         	lfsr	1,rotate_l@tempd
  2416  006B72  0E05               	movlw	5
  2417  006B74                     u1111:
  2418  006B74  CFDB FFE3          	movff	plusw2,plusw1
  2419  006B78  06E8               	decf	wreg,f,c
  2420  006B7A  E2FC               	bc	u1111
  2421  006B7C                     
  2422                           ;newmain.c: 211:             rgb[12].r = rgb[8].r;rgb[13].r = rgb[9].r;
  2423  006B7C  C130  F148         	movff	_rgb+48,_rgb+72	;volatile
  2424  006B80  C131  F149         	movff	_rgb+49,_rgb+73	;volatile
  2425  006B84  C136  F14E         	movff	_rgb+54,_rgb+78	;volatile
  2426  006B88  C137  F14F         	movff	_rgb+55,_rgb+79	;volatile
  2427  006B8C                     
  2428                           ;newmain.c: 212:             rgb[12].g = rgb[8].g;rgb[13].g = rgb[9].g;
  2429  006B8C  C132  F14A         	movff	_rgb+50,_rgb+74	;volatile
  2430  006B90  C133  F14B         	movff	_rgb+51,_rgb+75	;volatile
  2431  006B94  C138  F150         	movff	_rgb+56,_rgb+80	;volatile
  2432  006B98  C139  F151         	movff	_rgb+57,_rgb+81	;volatile
  2433  006B9C                     
  2434                           ;newmain.c: 213:             rgb[12].b = rgb[8].b;rgb[13].b = rgb[9].b;
  2435  006B9C  C134  F14C         	movff	_rgb+52,_rgb+76	;volatile
  2436  006BA0  C135  F14D         	movff	_rgb+53,_rgb+77	;volatile
  2437  006BA4  C13A  F152         	movff	_rgb+58,_rgb+82	;volatile
  2438  006BA8  C13B  F153         	movff	_rgb+59,_rgb+83	;volatile
  2439  006BAC                     
  2440                           ;newmain.c: 214:             rgb[8].r = rgb[4].r;rgb[9].r = rgb[5].r;
  2441  006BAC  C118  F130         	movff	_rgb+24,_rgb+48	;volatile
  2442  006BB0  C119  F131         	movff	_rgb+25,_rgb+49	;volatile
  2443  006BB4  C11E  F136         	movff	_rgb+30,_rgb+54	;volatile
  2444  006BB8  C11F  F137         	movff	_rgb+31,_rgb+55	;volatile
  2445  006BBC                     
  2446                           ;newmain.c: 215:             rgb[8].g = rgb[4].g;rgb[9].g = rgb[5].g;
  2447  006BBC  C11A  F132         	movff	_rgb+26,_rgb+50	;volatile
  2448  006BC0  C11B  F133         	movff	_rgb+27,_rgb+51	;volatile
  2449  006BC4  C120  F138         	movff	_rgb+32,_rgb+56	;volatile
  2450  006BC8  C121  F139         	movff	_rgb+33,_rgb+57	;volatile
  2451  006BCC                     
  2452                           ;newmain.c: 216:             rgb[8].b = rgb[4].b;rgb[9].b = rgb[5].b;
  2453  006BCC  C11C  F134         	movff	_rgb+28,_rgb+52	;volatile
  2454  006BD0  C11D  F135         	movff	_rgb+29,_rgb+53	;volatile
  2455  006BD4  C122  F13A         	movff	_rgb+34,_rgb+58	;volatile
  2456  006BD8  C123  F13B         	movff	_rgb+35,_rgb+59	;volatile
  2457  006BDC                     
  2458                           ;newmain.c: 217:             rgb[4].r = rgb[0].r;rgb[5].r = rgb[1].r;
  2459  006BDC  C100  F118         	movff	_rgb,_rgb+24	;volatile
  2460  006BE0  C101  F119         	movff	_rgb+1,_rgb+25	;volatile
  2461  006BE4  C106  F11E         	movff	_rgb+6,_rgb+30	;volatile
  2462  006BE8  C107  F11F         	movff	_rgb+7,_rgb+31	;volatile
  2463  006BEC                     
  2464                           ;newmain.c: 218:             rgb[4].g = rgb[0].g;rgb[5].g = rgb[1].g;
  2465  006BEC  C102  F11A         	movff	_rgb+2,_rgb+26	;volatile
  2466  006BF0  C103  F11B         	movff	_rgb+3,_rgb+27	;volatile
  2467  006BF4  C108  F120         	movff	_rgb+8,_rgb+32	;volatile
  2468  006BF8  C109  F121         	movff	_rgb+9,_rgb+33	;volatile
  2469  006BFC                     
  2470                           ;newmain.c: 219:             rgb[4].b = rgb[0].b;rgb[5].b = rgb[1].b;
  2471  006BFC  C104  F11C         	movff	_rgb+4,_rgb+28	;volatile
  2472  006C00  C105  F11D         	movff	_rgb+5,_rgb+29	;volatile
  2473  006C04  C10A  F122         	movff	_rgb+10,_rgb+34	;volatile
  2474  006C08  C10B  F123         	movff	_rgb+11,_rgb+35	;volatile
  2475  006C0C                     
  2476                           ;newmain.c: 220:             rgb[0].r = tempc.r;rgb[1].r = tempd.r;
  2477  006C0C  C014  F100         	movff	rotate_l@tempc,_rgb	;volatile
  2478  006C10  C015  F101         	movff	rotate_l@tempc+1,_rgb+1	;volatile
  2479  006C14  C01A  F106         	movff	rotate_l@tempd,_rgb+6	;volatile
  2480  006C18  C01B  F107         	movff	rotate_l@tempd+1,_rgb+7	;volatile
  2481  006C1C                     
  2482                           ;newmain.c: 221:             rgb[0].g = tempc.g;rgb[1].g = tempd.g;
  2483  006C1C  C016  F102         	movff	rotate_l@tempc+2,_rgb+2	;volatile
  2484  006C20  C017  F103         	movff	rotate_l@tempc+3,_rgb+3	;volatile
  2485  006C24  C01C  F108         	movff	rotate_l@tempd+2,_rgb+8	;volatile
  2486  006C28  C01D  F109         	movff	rotate_l@tempd+3,_rgb+9	;volatile
  2487  006C2C                     
  2488                           ;newmain.c: 222:             rgb[0].b = tempc.b;rgb[1].b = tempd.b;
  2489  006C2C  C018  F104         	movff	rotate_l@tempc+4,_rgb+4	;volatile
  2490  006C30  C019  F105         	movff	rotate_l@tempc+5,_rgb+5	;volatile
  2491  006C34  C01E  F10A         	movff	rotate_l@tempd+4,_rgb+10	;volatile
  2492  006C38  C01F  F10B         	movff	rotate_l@tempd+5,_rgb+11	;volatile
  2493  006C3C                     
  2494                           ;newmain.c: 223:             buf--;
  2495  006C3C  0606               	decf	rotate_l@buf_227^0,f,c
  2496  006C3E  A0D8               	btfss	status,0,c
  2497  006C40  0607               	decf	(rotate_l@buf_227+1)^0,f,c
  2498  006C42                     l2127:
  2499                           
  2500                           ;newmain.c: 208:         while(buf>0){
  2501  006C42  BE07               	btfsc	(rotate_l@buf_227+1)^0,7,c
  2502  006C44  EF2E  F036         	goto	u1120
  2503  006C48  5007               	movf	(rotate_l@buf_227+1)^0,w,c
  2504  006C4A  E106               	bnz	u1121
  2505  006C4C  0406               	decf	rotate_l@buf_227^0,w,c
  2506  006C4E  B0D8               	btfsc	status,0,c
  2507  006C50  EF2C  F036         	goto	u1121
  2508  006C54  EF2E  F036         	goto	u1120
  2509  006C58                     u1121:
  2510  006C58  EFAC  F035         	goto	l2075
  2511  006C5C                     u1120:
  2512  006C5C                     l76:
  2513  006C5C  0012               	return		;funcret
  2514  006C5E                     __end_of_rotate_l:
  2515                           	opt callstack 0
  2516                           
  2517 ;; *************** function _rotate_bot *****************
  2518 ;; Defined at:
  2519 ;;		line 275 in file "newmain.c"
  2520 ;; Parameters:    Size  Location     Type
  2521 ;;  val             2    0[COMRAM] int 
  2522 ;; Auto vars:     Size  Location     Type
  2523 ;;  tempd           6   25[COMRAM] struct RGB
  2524 ;;  tempc           6   19[COMRAM] struct RGB
  2525 ;;  tempb           6   13[COMRAM] struct RGB
  2526 ;;  tempa           6    7[COMRAM] struct RGB
  2527 ;;  buf             2    5[COMRAM] int 
  2528 ;;  buf             2    3[COMRAM] int 
  2529 ;; Return value:  Size  Location     Type
  2530 ;;                  1    wreg      void 
  2531 ;; Registers used:
  2532 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  2533 ;; Tracked objects:
  2534 ;;		On entry : 0/0
  2535 ;;		On exit  : 0/0
  2536 ;;		Unchanged: 0/0
  2537 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2538 ;;      Params:         2       0       0       0       0       0       0
  2539 ;;      Locals:        28       0       0       0       0       0       0
  2540 ;;      Temps:          1       0       0       0       0       0       0
  2541 ;;      Totals:        31       0       0       0       0       0       0
  2542 ;;Total ram usage:       31 bytes
  2543 ;; Hardware stack levels used:    1
  2544 ;; This function calls:
  2545 ;;		Nothing
  2546 ;; This function is called by:
  2547 ;;		_main
  2548 ;; This function uses a non-reentrant model
  2549 ;;
  2550                           
  2551                           	psect	text6
  2552  006742                     __ptext6:
  2553                           	opt callstack 0
  2554  006742                     _rotate_bot:
  2555                           	opt callstack 30
  2556  006742                     
  2557                           ;newmain.c: 277:     if(val > 3){
  2558  006742  BE02               	btfsc	(rotate_bot@val+1)^0,7,c
  2559  006744  EFAD  F033         	goto	u1221
  2560  006748  5002               	movf	(rotate_bot@val+1)^0,w,c
  2561  00674A  E109               	bnz	u1220
  2562  00674C  0E04               	movlw	4
  2563  00674E  5C01               	subwf	rotate_bot@val^0,w,c
  2564  006750  A0D8               	btfss	status,0,c
  2565  006752  EFAD  F033         	goto	u1221
  2566  006756  EFAF  F033         	goto	u1220
  2567  00675A                     u1221:
  2568  00675A  EFB3  F033         	goto	l2253
  2569  00675E                     u1220:
  2570  00675E                     
  2571                           ;newmain.c: 278:         val = 3;
  2572  00675E  0E00               	movlw	0
  2573  006760  6E02               	movwf	(rotate_bot@val+1)^0,c
  2574  006762  0E03               	movlw	3
  2575  006764  6E01               	movwf	rotate_bot@val^0,c
  2576  006766                     l2253:
  2577                           
  2578                           ;newmain.c: 280:     if(val>original[1]){
  2579  006766  5001               	movf	rotate_bot@val^0,w,c
  2580  006768  5C2F               	subwf	(_original+2)^0,w,c	;volatile
  2581  00676A  5030               	movf	(_original+3)^0,w,c	;volatile
  2582  00676C  0A80               	xorlw	128
  2583  00676E  6E03               	movwf	??_rotate_bot^0,c
  2584  006770  5002               	movf	(rotate_bot@val+1)^0,w,c
  2585  006772  0A80               	xorlw	128
  2586  006774  5803               	subwfb	??_rotate_bot^0,w,c
  2587  006776  B0D8               	btfsc	status,0,c
  2588  006778  EFC0  F033         	goto	u1231
  2589  00677C  EFC2  F033         	goto	u1230
  2590  006780                     u1231:
  2591  006780  EF4E  F034         	goto	l2311
  2592  006784                     u1230:
  2593  006784                     
  2594                           ;newmain.c: 281:         int buf = val-original[1];
  2595  006784  502F               	movf	(_original+2)^0,w,c	;volatile
  2596  006786  5C01               	subwf	rotate_bot@val^0,w,c
  2597  006788  6E04               	movwf	rotate_bot@buf^0,c
  2598  00678A  5030               	movf	(_original+3)^0,w,c	;volatile
  2599  00678C  5802               	subwfb	(rotate_bot@val+1)^0,w,c
  2600  00678E  6E05               	movwf	(rotate_bot@buf+1)^0,c
  2601                           
  2602                           ;newmain.c: 282:         while(buf>0){
  2603  006790  EF3F  F034         	goto	l2309
  2604  006794                     l2257:
  2605                           
  2606                           ;newmain.c: 283:             rgbarray tempa = rgb[1];
  2607  006794  EE21  F006         	lfsr	2,_rgb+6	;volatile
  2608  006798  EE10  F008         	lfsr	1,rotate_bot@tempa
  2609  00679C  0E05               	movlw	5
  2610  00679E                     u1241:
  2611  00679E  CFDB FFE3          	movff	plusw2,plusw1
  2612  0067A2  06E8               	decf	wreg,f,c
  2613  0067A4  E2FC               	bc	u1241
  2614                           
  2615                           ;newmain.c: 284:             rgbarray tempb = rgb[2];
  2616  0067A6  EE21  F00C         	lfsr	2,_rgb+12	;volatile
  2617  0067AA  EE10  F00E         	lfsr	1,rotate_bot@tempb
  2618  0067AE  0E05               	movlw	5
  2619  0067B0                     u1251:
  2620  0067B0  CFDB FFE3          	movff	plusw2,plusw1
  2621  0067B4  06E8               	decf	wreg,f,c
  2622  0067B6  E2FC               	bc	u1251
  2623  0067B8                     
  2624                           ;newmain.c: 285:             rgb[1].r = rgb[18].r;rgb[2].r = rgb[19].r;
  2625  0067B8  C16C  F106         	movff	_rgb+108,_rgb+6	;volatile
  2626  0067BC  C16D  F107         	movff	_rgb+109,_rgb+7	;volatile
  2627  0067C0  C172  F10C         	movff	_rgb+114,_rgb+12	;volatile
  2628  0067C4  C173  F10D         	movff	_rgb+115,_rgb+13	;volatile
  2629  0067C8                     
  2630                           ;newmain.c: 286:             rgb[1].g = rgb[18].g;rgb[2].g = rgb[19].g;
  2631  0067C8  C16E  F108         	movff	_rgb+110,_rgb+8	;volatile
  2632  0067CC  C16F  F109         	movff	_rgb+111,_rgb+9	;volatile
  2633  0067D0  C174  F10E         	movff	_rgb+116,_rgb+14	;volatile
  2634  0067D4  C175  F10F         	movff	_rgb+117,_rgb+15	;volatile
  2635  0067D8                     
  2636                           ;newmain.c: 287:             rgb[1].b = rgb[18].b;rgb[2].b = rgb[19].b;
  2637  0067D8  C170  F10A         	movff	_rgb+112,_rgb+10	;volatile
  2638  0067DC  C171  F10B         	movff	_rgb+113,_rgb+11	;volatile
  2639  0067E0  C176  F110         	movff	_rgb+118,_rgb+16	;volatile
  2640  0067E4  C177  F111         	movff	_rgb+119,_rgb+17	;volatile
  2641  0067E8                     
  2642                           ;newmain.c: 288:             rgb[18].r = rgb[11].r;rgb[19].r = rgb[8].r;
  2643  0067E8  C142  F16C         	movff	_rgb+66,_rgb+108	;volatile
  2644  0067EC  C143  F16D         	movff	_rgb+67,_rgb+109	;volatile
  2645  0067F0  C130  F172         	movff	_rgb+48,_rgb+114	;volatile
  2646  0067F4  C131  F173         	movff	_rgb+49,_rgb+115	;volatile
  2647  0067F8                     
  2648                           ;newmain.c: 289:             rgb[18].g = rgb[11].g;rgb[19].g = rgb[8].g;
  2649  0067F8  C144  F16E         	movff	_rgb+68,_rgb+110	;volatile
  2650  0067FC  C145  F16F         	movff	_rgb+69,_rgb+111	;volatile
  2651  006800  C132  F174         	movff	_rgb+50,_rgb+116	;volatile
  2652  006804  C133  F175         	movff	_rgb+51,_rgb+117	;volatile
  2653  006808                     
  2654                           ;newmain.c: 290:             rgb[18].b = rgb[11].b;rgb[19].b = rgb[8].b;
  2655  006808  C146  F170         	movff	_rgb+70,_rgb+112	;volatile
  2656  00680C  C147  F171         	movff	_rgb+71,_rgb+113	;volatile
  2657  006810  C134  F176         	movff	_rgb+52,_rgb+118	;volatile
  2658  006814  C135  F177         	movff	_rgb+53,_rgb+119	;volatile
  2659  006818                     
  2660                           ;newmain.c: 291:             rgb[11].r = rgb[20].r;rgb[8].r = rgb[21].r;
  2661  006818  C178  F142         	movff	_rgb+120,_rgb+66	;volatile
  2662  00681C  C179  F143         	movff	_rgb+121,_rgb+67	;volatile
  2663  006820  C17E  F130         	movff	_rgb+126,_rgb+48	;volatile
  2664  006824  C17F  F131         	movff	_rgb+127,_rgb+49	;volatile
  2665  006828                     
  2666                           ;newmain.c: 292:             rgb[11].g = rgb[20].g;rgb[8].g = rgb[21].g;
  2667  006828  C17A  F144         	movff	_rgb+122,_rgb+68	;volatile
  2668  00682C  C17B  F145         	movff	_rgb+123,_rgb+69	;volatile
  2669  006830  C180  F132         	movff	_rgb+128,_rgb+50	;volatile
  2670  006834  C181  F133         	movff	_rgb+129,_rgb+51	;volatile
  2671  006838                     
  2672                           ;newmain.c: 293:             rgb[11].b = rgb[20].b;rgb[8].b = rgb[21].b;
  2673  006838  C17C  F146         	movff	_rgb+124,_rgb+70	;volatile
  2674  00683C  C17D  F147         	movff	_rgb+125,_rgb+71	;volatile
  2675  006840  C182  F134         	movff	_rgb+130,_rgb+52	;volatile
  2676  006844  C183  F135         	movff	_rgb+131,_rgb+53	;volatile
  2677  006848                     
  2678                           ;newmain.c: 294:             rgb[20].r = tempa.r;rgb[21].r = tempb.r;
  2679  006848  C008  F178         	movff	rotate_bot@tempa,_rgb+120	;volatile
  2680  00684C  C009  F179         	movff	rotate_bot@tempa+1,_rgb+121	;volatile
  2681  006850  C00E  F17E         	movff	rotate_bot@tempb,_rgb+126	;volatile
  2682  006854  C00F  F17F         	movff	rotate_bot@tempb+1,_rgb+127	;volatile
  2683  006858                     
  2684                           ;newmain.c: 295:             rgb[20].g = tempa.g;rgb[21].g = tempb.g;
  2685  006858  C00A  F17A         	movff	rotate_bot@tempa+2,_rgb+122	;volatile
  2686  00685C  C00B  F17B         	movff	rotate_bot@tempa+3,_rgb+123	;volatile
  2687  006860  C010  F180         	movff	rotate_bot@tempb+2,_rgb+128	;volatile
  2688  006864  C011  F181         	movff	rotate_bot@tempb+3,_rgb+129	;volatile
  2689  006868                     
  2690                           ;newmain.c: 296:             rgb[20].b = tempa.b;rgb[21].b = tempb.b;
  2691  006868  C00C  F17C         	movff	rotate_bot@tempa+4,_rgb+124	;volatile
  2692  00686C  C00D  F17D         	movff	rotate_bot@tempa+5,_rgb+125	;volatile
  2693  006870  C012  F182         	movff	rotate_bot@tempb+4,_rgb+130	;volatile
  2694  006874  C013  F183         	movff	rotate_bot@tempb+5,_rgb+131	;volatile
  2695  006878                     
  2696                           ;newmain.c: 297:             buf--;
  2697  006878  0604               	decf	rotate_bot@buf^0,f,c
  2698  00687A  A0D8               	btfss	status,0,c
  2699  00687C  0605               	decf	(rotate_bot@buf+1)^0,f,c
  2700  00687E                     l2309:
  2701                           
  2702                           ;newmain.c: 282:         while(buf>0){
  2703  00687E  BE05               	btfsc	(rotate_bot@buf+1)^0,7,c
  2704  006880  EF4C  F034         	goto	u1260
  2705  006884  5005               	movf	(rotate_bot@buf+1)^0,w,c
  2706  006886  E106               	bnz	u1261
  2707  006888  0404               	decf	rotate_bot@buf^0,w,c
  2708  00688A  B0D8               	btfsc	status,0,c
  2709  00688C  EF4A  F034         	goto	u1261
  2710  006890  EF4C  F034         	goto	u1260
  2711  006894                     u1261:
  2712  006894  EFCA  F033         	goto	l2257
  2713  006898                     u1260:
  2714  006898  EFE7  F034         	goto	l102
  2715  00689C                     l2311:
  2716  00689C  502F               	movf	(_original+2)^0,w,c	;volatile
  2717  00689E  5C01               	subwf	rotate_bot@val^0,w,c
  2718  0068A0  5002               	movf	(rotate_bot@val+1)^0,w,c
  2719  0068A2  0A80               	xorlw	128
  2720  0068A4  6E03               	movwf	??_rotate_bot^0,c
  2721  0068A6  5030               	movf	(_original+3)^0,w,c	;volatile
  2722  0068A8  0A80               	xorlw	128
  2723  0068AA  5803               	subwfb	??_rotate_bot^0,w,c
  2724  0068AC  B0D8               	btfsc	status,0,c
  2725  0068AE  EF5B  F034         	goto	u1271
  2726  0068B2  EF5D  F034         	goto	u1270
  2727  0068B6                     u1271:
  2728  0068B6  EFE7  F034         	goto	l102
  2729  0068BA                     u1270:
  2730  0068BA                     
  2731                           ;newmain.c: 301:         int buf = original[1]-val;
  2732  0068BA  5001               	movf	rotate_bot@val^0,w,c
  2733  0068BC  5C2F               	subwf	(_original+2)^0,w,c	;volatile
  2734  0068BE  6E06               	movwf	rotate_bot@buf_267^0,c
  2735  0068C0  5002               	movf	(rotate_bot@val+1)^0,w,c
  2736  0068C2  5830               	subwfb	(_original+3)^0,w,c	;volatile
  2737  0068C4  6E07               	movwf	(rotate_bot@buf_267+1)^0,c
  2738                           
  2739                           ;newmain.c: 302:         while(buf>0){
  2740  0068C6  EFDA  F034         	goto	l2367
  2741  0068CA                     l2315:
  2742                           
  2743                           ;newmain.c: 303:             rgbarray tempc = rgb[1];
  2744  0068CA  EE21  F006         	lfsr	2,_rgb+6	;volatile
  2745  0068CE  EE10  F014         	lfsr	1,rotate_bot@tempc
  2746  0068D2  0E05               	movlw	5
  2747  0068D4                     u1281:
  2748  0068D4  CFDB FFE3          	movff	plusw2,plusw1
  2749  0068D8  06E8               	decf	wreg,f,c
  2750  0068DA  E2FC               	bc	u1281
  2751                           
  2752                           ;newmain.c: 304:             rgbarray tempd = rgb[2];
  2753  0068DC  EE21  F00C         	lfsr	2,_rgb+12	;volatile
  2754  0068E0  EE10  F01A         	lfsr	1,rotate_bot@tempd
  2755  0068E4  0E05               	movlw	5
  2756  0068E6                     u1291:
  2757  0068E6  CFDB FFE3          	movff	plusw2,plusw1
  2758  0068EA  06E8               	decf	wreg,f,c
  2759  0068EC  E2FC               	bc	u1291
  2760  0068EE                     
  2761                           ;newmain.c: 305:             rgb[1].r = rgb[20].r;rgb[2].r = rgb[21].r;
  2762  0068EE  C178  F106         	movff	_rgb+120,_rgb+6	;volatile
  2763  0068F2  C179  F107         	movff	_rgb+121,_rgb+7	;volatile
  2764  0068F6  C17E  F10C         	movff	_rgb+126,_rgb+12	;volatile
  2765  0068FA  C17F  F10D         	movff	_rgb+127,_rgb+13	;volatile
  2766  0068FE                     
  2767                           ;newmain.c: 306:             rgb[1].g = rgb[20].g;rgb[2].g = rgb[21].g;
  2768  0068FE  C17A  F108         	movff	_rgb+122,_rgb+8	;volatile
  2769  006902  C17B  F109         	movff	_rgb+123,_rgb+9	;volatile
  2770  006906  C180  F10E         	movff	_rgb+128,_rgb+14	;volatile
  2771  00690A  C181  F10F         	movff	_rgb+129,_rgb+15	;volatile
  2772  00690E                     
  2773                           ;newmain.c: 307:             rgb[1].b = rgb[20].b;rgb[2].b = rgb[21].b;
  2774  00690E  C17C  F10A         	movff	_rgb+124,_rgb+10	;volatile
  2775  006912  C17D  F10B         	movff	_rgb+125,_rgb+11	;volatile
  2776  006916  C182  F110         	movff	_rgb+130,_rgb+16	;volatile
  2777  00691A  C183  F111         	movff	_rgb+131,_rgb+17	;volatile
  2778  00691E                     
  2779                           ;newmain.c: 308:             rgb[20].r = rgb[11].r;rgb[21].r = rgb[8].r;
  2780  00691E  C142  F178         	movff	_rgb+66,_rgb+120	;volatile
  2781  006922  C143  F179         	movff	_rgb+67,_rgb+121	;volatile
  2782  006926  C130  F17E         	movff	_rgb+48,_rgb+126	;volatile
  2783  00692A  C131  F17F         	movff	_rgb+49,_rgb+127	;volatile
  2784  00692E                     
  2785                           ;newmain.c: 309:             rgb[20].g = rgb[11].g;rgb[21].g = rgb[8].g;
  2786  00692E  C144  F17A         	movff	_rgb+68,_rgb+122	;volatile
  2787  006932  C145  F17B         	movff	_rgb+69,_rgb+123	;volatile
  2788  006936  C132  F180         	movff	_rgb+50,_rgb+128	;volatile
  2789  00693A  C133  F181         	movff	_rgb+51,_rgb+129	;volatile
  2790  00693E                     
  2791                           ;newmain.c: 310:             rgb[20].b = rgb[11].b;rgb[21].b = rgb[8].b;
  2792  00693E  C146  F17C         	movff	_rgb+70,_rgb+124	;volatile
  2793  006942  C147  F17D         	movff	_rgb+71,_rgb+125	;volatile
  2794  006946  C134  F182         	movff	_rgb+52,_rgb+130	;volatile
  2795  00694A  C135  F183         	movff	_rgb+53,_rgb+131	;volatile
  2796  00694E                     
  2797                           ;newmain.c: 311:             rgb[11].r = rgb[18].r;rgb[8].r = rgb[19].r;
  2798  00694E  C16C  F142         	movff	_rgb+108,_rgb+66	;volatile
  2799  006952  C16D  F143         	movff	_rgb+109,_rgb+67	;volatile
  2800  006956  C172  F130         	movff	_rgb+114,_rgb+48	;volatile
  2801  00695A  C173  F131         	movff	_rgb+115,_rgb+49	;volatile
  2802  00695E                     
  2803                           ;newmain.c: 312:             rgb[11].g = rgb[18].g;rgb[8].g = rgb[19].g;
  2804  00695E  C16E  F144         	movff	_rgb+110,_rgb+68	;volatile
  2805  006962  C16F  F145         	movff	_rgb+111,_rgb+69	;volatile
  2806  006966  C174  F132         	movff	_rgb+116,_rgb+50	;volatile
  2807  00696A  C175  F133         	movff	_rgb+117,_rgb+51	;volatile
  2808  00696E                     
  2809                           ;newmain.c: 313:             rgb[11].b = rgb[18].b;rgb[8].b = rgb[19].b;
  2810  00696E  C170  F146         	movff	_rgb+112,_rgb+70	;volatile
  2811  006972  C171  F147         	movff	_rgb+113,_rgb+71	;volatile
  2812  006976  C176  F134         	movff	_rgb+118,_rgb+52	;volatile
  2813  00697A  C177  F135         	movff	_rgb+119,_rgb+53	;volatile
  2814  00697E                     
  2815                           ;newmain.c: 314:             rgb[18].r = tempc.r;rgb[19].r = tempd.r;
  2816  00697E  C014  F16C         	movff	rotate_bot@tempc,_rgb+108	;volatile
  2817  006982  C015  F16D         	movff	rotate_bot@tempc+1,_rgb+109	;volatile
  2818  006986  C01A  F172         	movff	rotate_bot@tempd,_rgb+114	;volatile
  2819  00698A  C01B  F173         	movff	rotate_bot@tempd+1,_rgb+115	;volatile
  2820  00698E                     
  2821                           ;newmain.c: 315:             rgb[18].g = tempc.g;rgb[19].g = tempd.g;
  2822  00698E  C016  F16E         	movff	rotate_bot@tempc+2,_rgb+110	;volatile
  2823  006992  C017  F16F         	movff	rotate_bot@tempc+3,_rgb+111	;volatile
  2824  006996  C01C  F174         	movff	rotate_bot@tempd+2,_rgb+116	;volatile
  2825  00699A  C01D  F175         	movff	rotate_bot@tempd+3,_rgb+117	;volatile
  2826  00699E                     
  2827                           ;newmain.c: 316:             rgb[18].b = tempc.b;rgb[19].b = tempd.b;
  2828  00699E  C018  F170         	movff	rotate_bot@tempc+4,_rgb+112	;volatile
  2829  0069A2  C019  F171         	movff	rotate_bot@tempc+5,_rgb+113	;volatile
  2830  0069A6  C01E  F176         	movff	rotate_bot@tempd+4,_rgb+118	;volatile
  2831  0069AA  C01F  F177         	movff	rotate_bot@tempd+5,_rgb+119	;volatile
  2832  0069AE                     
  2833                           ;newmain.c: 317:             buf--;
  2834  0069AE  0606               	decf	rotate_bot@buf_267^0,f,c
  2835  0069B0  A0D8               	btfss	status,0,c
  2836  0069B2  0607               	decf	(rotate_bot@buf_267+1)^0,f,c
  2837  0069B4                     l2367:
  2838                           
  2839                           ;newmain.c: 302:         while(buf>0){
  2840  0069B4  BE07               	btfsc	(rotate_bot@buf_267+1)^0,7,c
  2841  0069B6  EFE7  F034         	goto	u1300
  2842  0069BA  5007               	movf	(rotate_bot@buf_267+1)^0,w,c
  2843  0069BC  E106               	bnz	u1301
  2844  0069BE  0406               	decf	rotate_bot@buf_267^0,w,c
  2845  0069C0  B0D8               	btfsc	status,0,c
  2846  0069C2  EFE5  F034         	goto	u1301
  2847  0069C6  EFE7  F034         	goto	u1300
  2848  0069CA                     u1301:
  2849  0069CA  EF65  F034         	goto	l2315
  2850  0069CE                     u1300:
  2851  0069CE                     l102:
  2852  0069CE  0012               	return		;funcret
  2853  0069D0                     __end_of_rotate_bot:
  2854                           	opt callstack 0
  2855                           
  2856 ;; *************** function _initial *****************
  2857 ;; Defined at:
  2858 ;;		line 102 in file "newmain.c"
  2859 ;; Parameters:    Size  Location     Type
  2860 ;;		None
  2861 ;; Auto vars:     Size  Location     Type
  2862 ;;  i               2    6[COMRAM] int 
  2863 ;; Return value:  Size  Location     Type
  2864 ;;                  1    wreg      void 
  2865 ;; Registers used:
  2866 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2867 ;; Tracked objects:
  2868 ;;		On entry : 0/0
  2869 ;;		On exit  : 0/0
  2870 ;;		Unchanged: 0/0
  2871 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2872 ;;      Params:         0       0       0       0       0       0       0
  2873 ;;      Locals:         2       0       0       0       0       0       0
  2874 ;;      Temps:          0       0       0       0       0       0       0
  2875 ;;      Totals:         2       0       0       0       0       0       0
  2876 ;;Total ram usage:        2 bytes
  2877 ;; Hardware stack levels used:    1
  2878 ;; Hardware stack levels required when called:    1
  2879 ;; This function calls:
  2880 ;;		___wmul
  2881 ;; This function is called by:
  2882 ;;		_main
  2883 ;; This function uses a non-reentrant model
  2884 ;;
  2885                           
  2886                           	psect	text7
  2887  0079FE                     __ptext7:
  2888                           	opt callstack 0
  2889  0079FE                     _initial:
  2890                           	opt callstack 29
  2891  0079FE                     
  2892                           ;newmain.c: 103:     int i;;newmain.c: 104:     for(i = 0;i < 4;i++){
  2893  0079FE  0E00               	movlw	0
  2894  007A00  6E08               	movwf	(initial@i+1)^0,c
  2895  007A02  0E00               	movlw	0
  2896  007A04  6E07               	movwf	initial@i^0,c
  2897  007A06                     l1823:
  2898                           
  2899                           ;newmain.c: 105:         rgb[i].r = 0;
  2900  007A06  C007  F001         	movff	initial@i,___wmul@multiplier
  2901  007A0A  C008  F002         	movff	initial@i+1,___wmul@multiplier+1
  2902  007A0E  0E00               	movlw	0
  2903  007A10  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  2904  007A12  0E06               	movlw	6
  2905  007A14  6E03               	movwf	___wmul@multiplicand^0,c
  2906  007A16  EC0A  F033         	call	___wmul	;wreg free
  2907  007A1A  0E00               	movlw	low _rgb
  2908  007A1C  2401               	addwf	?___wmul^0,w,c
  2909  007A1E  6ED9               	movwf	fsr2l,c
  2910  007A20  0E01               	movlw	high _rgb
  2911  007A22  2002               	addwfc	(?___wmul+1)^0,w,c
  2912  007A24  6EDA               	movwf	fsr2h,c
  2913  007A26  0E00               	movlw	0
  2914  007A28  6EDE               	movwf	postinc2,c
  2915  007A2A  0E00               	movlw	0
  2916  007A2C  6EDD               	movwf	postdec2,c
  2917                           
  2918                           ;newmain.c: 106:         rgb[i].g = 1;
  2919  007A2E  C007  F001         	movff	initial@i,___wmul@multiplier
  2920  007A32  C008  F002         	movff	initial@i+1,___wmul@multiplier+1
  2921  007A36  0E00               	movlw	0
  2922  007A38  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  2923  007A3A  0E06               	movlw	6
  2924  007A3C  6E03               	movwf	___wmul@multiplicand^0,c
  2925  007A3E  EC0A  F033         	call	___wmul	;wreg free
  2926  007A42  0E02               	movlw	low (_rgb+2)
  2927  007A44  2401               	addwf	?___wmul^0,w,c
  2928  007A46  6ED9               	movwf	fsr2l,c
  2929  007A48  0E01               	movlw	high (_rgb+2)
  2930  007A4A  2002               	addwfc	(?___wmul+1)^0,w,c
  2931  007A4C  6EDA               	movwf	fsr2h,c
  2932  007A4E  0E01               	movlw	1
  2933  007A50  6EDE               	movwf	postinc2,c
  2934  007A52  0E00               	movlw	0
  2935  007A54  6EDD               	movwf	postdec2,c
  2936                           
  2937                           ;newmain.c: 107:         rgb[i].b = 1;
  2938  007A56  C007  F001         	movff	initial@i,___wmul@multiplier
  2939  007A5A  C008  F002         	movff	initial@i+1,___wmul@multiplier+1
  2940  007A5E  0E00               	movlw	0
  2941  007A60  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  2942  007A62  0E06               	movlw	6
  2943  007A64  6E03               	movwf	___wmul@multiplicand^0,c
  2944  007A66  EC0A  F033         	call	___wmul	;wreg free
  2945  007A6A  0E04               	movlw	low (_rgb+4)
  2946  007A6C  2401               	addwf	?___wmul^0,w,c
  2947  007A6E  6ED9               	movwf	fsr2l,c
  2948  007A70  0E01               	movlw	high (_rgb+4)
  2949  007A72  2002               	addwfc	(?___wmul+1)^0,w,c
  2950  007A74  6EDA               	movwf	fsr2h,c
  2951  007A76  0E01               	movlw	1
  2952  007A78  6EDE               	movwf	postinc2,c
  2953  007A7A  0E00               	movlw	0
  2954  007A7C  6EDD               	movwf	postdec2,c
  2955  007A7E                     
  2956                           ;newmain.c: 108:     }
  2957  007A7E  4A07               	infsnz	initial@i^0,f,c
  2958  007A80  2A08               	incf	(initial@i+1)^0,f,c
  2959  007A82  BE08               	btfsc	(initial@i+1)^0,7,c
  2960  007A84  EF4D  F03D         	goto	u891
  2961  007A88  5008               	movf	(initial@i+1)^0,w,c
  2962  007A8A  E109               	bnz	u890
  2963  007A8C  0E04               	movlw	4
  2964  007A8E  5C07               	subwf	initial@i^0,w,c
  2965  007A90  A0D8               	btfss	status,0,c
  2966  007A92  EF4D  F03D         	goto	u891
  2967  007A96  EF4F  F03D         	goto	u890
  2968  007A9A                     u891:
  2969  007A9A  EF03  F03D         	goto	l1823
  2970  007A9E                     u890:
  2971  007A9E                     
  2972                           ;newmain.c: 109:     for(i = 4;i < 8;i++){
  2973  007A9E  0E00               	movlw	0
  2974  007AA0  6E08               	movwf	(initial@i+1)^0,c
  2975  007AA2  0E04               	movlw	4
  2976  007AA4  6E07               	movwf	initial@i^0,c
  2977  007AA6                     l1835:
  2978                           
  2979                           ;newmain.c: 110:         rgb[i].r = 1;
  2980  007AA6  C007  F001         	movff	initial@i,___wmul@multiplier
  2981  007AAA  C008  F002         	movff	initial@i+1,___wmul@multiplier+1
  2982  007AAE  0E00               	movlw	0
  2983  007AB0  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  2984  007AB2  0E06               	movlw	6
  2985  007AB4  6E03               	movwf	___wmul@multiplicand^0,c
  2986  007AB6  EC0A  F033         	call	___wmul	;wreg free
  2987  007ABA  0E00               	movlw	low _rgb
  2988  007ABC  2401               	addwf	?___wmul^0,w,c
  2989  007ABE  6ED9               	movwf	fsr2l,c
  2990  007AC0  0E01               	movlw	high _rgb
  2991  007AC2  2002               	addwfc	(?___wmul+1)^0,w,c
  2992  007AC4  6EDA               	movwf	fsr2h,c
  2993  007AC6  0E01               	movlw	1
  2994  007AC8  6EDE               	movwf	postinc2,c
  2995  007ACA  0E00               	movlw	0
  2996  007ACC  6EDD               	movwf	postdec2,c
  2997                           
  2998                           ;newmain.c: 111:         rgb[i].g = 0;
  2999  007ACE  C007  F001         	movff	initial@i,___wmul@multiplier
  3000  007AD2  C008  F002         	movff	initial@i+1,___wmul@multiplier+1
  3001  007AD6  0E00               	movlw	0
  3002  007AD8  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  3003  007ADA  0E06               	movlw	6
  3004  007ADC  6E03               	movwf	___wmul@multiplicand^0,c
  3005  007ADE  EC0A  F033         	call	___wmul	;wreg free
  3006  007AE2  0E02               	movlw	low (_rgb+2)
  3007  007AE4  2401               	addwf	?___wmul^0,w,c
  3008  007AE6  6ED9               	movwf	fsr2l,c
  3009  007AE8  0E01               	movlw	high (_rgb+2)
  3010  007AEA  2002               	addwfc	(?___wmul+1)^0,w,c
  3011  007AEC  6EDA               	movwf	fsr2h,c
  3012  007AEE  0E00               	movlw	0
  3013  007AF0  6EDE               	movwf	postinc2,c
  3014  007AF2  0E00               	movlw	0
  3015  007AF4  6EDD               	movwf	postdec2,c
  3016                           
  3017                           ;newmain.c: 112:         rgb[i].b = 1;
  3018  007AF6  C007  F001         	movff	initial@i,___wmul@multiplier
  3019  007AFA  C008  F002         	movff	initial@i+1,___wmul@multiplier+1
  3020  007AFE  0E00               	movlw	0
  3021  007B00  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  3022  007B02  0E06               	movlw	6
  3023  007B04  6E03               	movwf	___wmul@multiplicand^0,c
  3024  007B06  EC0A  F033         	call	___wmul	;wreg free
  3025  007B0A  0E04               	movlw	low (_rgb+4)
  3026  007B0C  2401               	addwf	?___wmul^0,w,c
  3027  007B0E  6ED9               	movwf	fsr2l,c
  3028  007B10  0E01               	movlw	high (_rgb+4)
  3029  007B12  2002               	addwfc	(?___wmul+1)^0,w,c
  3030  007B14  6EDA               	movwf	fsr2h,c
  3031  007B16  0E01               	movlw	1
  3032  007B18  6EDE               	movwf	postinc2,c
  3033  007B1A  0E00               	movlw	0
  3034  007B1C  6EDD               	movwf	postdec2,c
  3035  007B1E                     
  3036                           ;newmain.c: 113:     }
  3037  007B1E  4A07               	infsnz	initial@i^0,f,c
  3038  007B20  2A08               	incf	(initial@i+1)^0,f,c
  3039  007B22  BE08               	btfsc	(initial@i+1)^0,7,c
  3040  007B24  EF9D  F03D         	goto	u901
  3041  007B28  5008               	movf	(initial@i+1)^0,w,c
  3042  007B2A  E109               	bnz	u900
  3043  007B2C  0E08               	movlw	8
  3044  007B2E  5C07               	subwf	initial@i^0,w,c
  3045  007B30  A0D8               	btfss	status,0,c
  3046  007B32  EF9D  F03D         	goto	u901
  3047  007B36  EF9F  F03D         	goto	u900
  3048  007B3A                     u901:
  3049  007B3A  EF53  F03D         	goto	l1835
  3050  007B3E                     u900:
  3051  007B3E                     
  3052                           ;newmain.c: 114:     for(i = 8;i < 12;i++){
  3053  007B3E  0E00               	movlw	0
  3054  007B40  6E08               	movwf	(initial@i+1)^0,c
  3055  007B42  0E08               	movlw	8
  3056  007B44  6E07               	movwf	initial@i^0,c
  3057  007B46                     l1847:
  3058                           
  3059                           ;newmain.c: 115:         rgb[i].r = 1;
  3060  007B46  C007  F001         	movff	initial@i,___wmul@multiplier
  3061  007B4A  C008  F002         	movff	initial@i+1,___wmul@multiplier+1
  3062  007B4E  0E00               	movlw	0
  3063  007B50  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  3064  007B52  0E06               	movlw	6
  3065  007B54  6E03               	movwf	___wmul@multiplicand^0,c
  3066  007B56  EC0A  F033         	call	___wmul	;wreg free
  3067  007B5A  0E00               	movlw	low _rgb
  3068  007B5C  2401               	addwf	?___wmul^0,w,c
  3069  007B5E  6ED9               	movwf	fsr2l,c
  3070  007B60  0E01               	movlw	high _rgb
  3071  007B62  2002               	addwfc	(?___wmul+1)^0,w,c
  3072  007B64  6EDA               	movwf	fsr2h,c
  3073  007B66  0E01               	movlw	1
  3074  007B68  6EDE               	movwf	postinc2,c
  3075  007B6A  0E00               	movlw	0
  3076  007B6C  6EDD               	movwf	postdec2,c
  3077                           
  3078                           ;newmain.c: 116:         rgb[i].g = 1;
  3079  007B6E  C007  F001         	movff	initial@i,___wmul@multiplier
  3080  007B72  C008  F002         	movff	initial@i+1,___wmul@multiplier+1
  3081  007B76  0E00               	movlw	0
  3082  007B78  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  3083  007B7A  0E06               	movlw	6
  3084  007B7C  6E03               	movwf	___wmul@multiplicand^0,c
  3085  007B7E  EC0A  F033         	call	___wmul	;wreg free
  3086  007B82  0E02               	movlw	low (_rgb+2)
  3087  007B84  2401               	addwf	?___wmul^0,w,c
  3088  007B86  6ED9               	movwf	fsr2l,c
  3089  007B88  0E01               	movlw	high (_rgb+2)
  3090  007B8A  2002               	addwfc	(?___wmul+1)^0,w,c
  3091  007B8C  6EDA               	movwf	fsr2h,c
  3092  007B8E  0E01               	movlw	1
  3093  007B90  6EDE               	movwf	postinc2,c
  3094  007B92  0E00               	movlw	0
  3095  007B94  6EDD               	movwf	postdec2,c
  3096                           
  3097                           ;newmain.c: 117:         rgb[i].b = 0;
  3098  007B96  C007  F001         	movff	initial@i,___wmul@multiplier
  3099  007B9A  C008  F002         	movff	initial@i+1,___wmul@multiplier+1
  3100  007B9E  0E00               	movlw	0
  3101  007BA0  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  3102  007BA2  0E06               	movlw	6
  3103  007BA4  6E03               	movwf	___wmul@multiplicand^0,c
  3104  007BA6  EC0A  F033         	call	___wmul	;wreg free
  3105  007BAA  0E04               	movlw	low (_rgb+4)
  3106  007BAC  2401               	addwf	?___wmul^0,w,c
  3107  007BAE  6ED9               	movwf	fsr2l,c
  3108  007BB0  0E01               	movlw	high (_rgb+4)
  3109  007BB2  2002               	addwfc	(?___wmul+1)^0,w,c
  3110  007BB4  6EDA               	movwf	fsr2h,c
  3111  007BB6  0E00               	movlw	0
  3112  007BB8  6EDE               	movwf	postinc2,c
  3113  007BBA  0E00               	movlw	0
  3114  007BBC  6EDD               	movwf	postdec2,c
  3115  007BBE                     
  3116                           ;newmain.c: 118:     }
  3117  007BBE  4A07               	infsnz	initial@i^0,f,c
  3118  007BC0  2A08               	incf	(initial@i+1)^0,f,c
  3119  007BC2  BE08               	btfsc	(initial@i+1)^0,7,c
  3120  007BC4  EFED  F03D         	goto	u911
  3121  007BC8  5008               	movf	(initial@i+1)^0,w,c
  3122  007BCA  E109               	bnz	u910
  3123  007BCC  0E0C               	movlw	12
  3124  007BCE  5C07               	subwf	initial@i^0,w,c
  3125  007BD0  A0D8               	btfss	status,0,c
  3126  007BD2  EFED  F03D         	goto	u911
  3127  007BD6  EFEF  F03D         	goto	u910
  3128  007BDA                     u911:
  3129  007BDA  EFA3  F03D         	goto	l1847
  3130  007BDE                     u910:
  3131  007BDE                     
  3132                           ;newmain.c: 119:     for(i = 12;i < 16;i++){
  3133  007BDE  0E00               	movlw	0
  3134  007BE0  6E08               	movwf	(initial@i+1)^0,c
  3135  007BE2  0E0C               	movlw	12
  3136  007BE4  6E07               	movwf	initial@i^0,c
  3137  007BE6                     l1859:
  3138                           
  3139                           ;newmain.c: 120:         rgb[i].r = 0;
  3140  007BE6  C007  F001         	movff	initial@i,___wmul@multiplier
  3141  007BEA  C008  F002         	movff	initial@i+1,___wmul@multiplier+1
  3142  007BEE  0E00               	movlw	0
  3143  007BF0  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  3144  007BF2  0E06               	movlw	6
  3145  007BF4  6E03               	movwf	___wmul@multiplicand^0,c
  3146  007BF6  EC0A  F033         	call	___wmul	;wreg free
  3147  007BFA  0E00               	movlw	low _rgb
  3148  007BFC  2401               	addwf	?___wmul^0,w,c
  3149  007BFE  6ED9               	movwf	fsr2l,c
  3150  007C00  0E01               	movlw	high _rgb
  3151  007C02  2002               	addwfc	(?___wmul+1)^0,w,c
  3152  007C04  6EDA               	movwf	fsr2h,c
  3153  007C06  0E00               	movlw	0
  3154  007C08  6EDE               	movwf	postinc2,c
  3155  007C0A  0E00               	movlw	0
  3156  007C0C  6EDD               	movwf	postdec2,c
  3157                           
  3158                           ;newmain.c: 121:         rgb[i].g = 1;
  3159  007C0E  C007  F001         	movff	initial@i,___wmul@multiplier
  3160  007C12  C008  F002         	movff	initial@i+1,___wmul@multiplier+1
  3161  007C16  0E00               	movlw	0
  3162  007C18  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  3163  007C1A  0E06               	movlw	6
  3164  007C1C  6E03               	movwf	___wmul@multiplicand^0,c
  3165  007C1E  EC0A  F033         	call	___wmul	;wreg free
  3166  007C22  0E02               	movlw	low (_rgb+2)
  3167  007C24  2401               	addwf	?___wmul^0,w,c
  3168  007C26  6ED9               	movwf	fsr2l,c
  3169  007C28  0E01               	movlw	high (_rgb+2)
  3170  007C2A  2002               	addwfc	(?___wmul+1)^0,w,c
  3171  007C2C  6EDA               	movwf	fsr2h,c
  3172  007C2E  0E01               	movlw	1
  3173  007C30  6EDE               	movwf	postinc2,c
  3174  007C32  0E00               	movlw	0
  3175  007C34  6EDD               	movwf	postdec2,c
  3176                           
  3177                           ;newmain.c: 122:         rgb[i].b = 0;
  3178  007C36  C007  F001         	movff	initial@i,___wmul@multiplier
  3179  007C3A  C008  F002         	movff	initial@i+1,___wmul@multiplier+1
  3180  007C3E  0E00               	movlw	0
  3181  007C40  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  3182  007C42  0E06               	movlw	6
  3183  007C44  6E03               	movwf	___wmul@multiplicand^0,c
  3184  007C46  EC0A  F033         	call	___wmul	;wreg free
  3185  007C4A  0E04               	movlw	low (_rgb+4)
  3186  007C4C  2401               	addwf	?___wmul^0,w,c
  3187  007C4E  6ED9               	movwf	fsr2l,c
  3188  007C50  0E01               	movlw	high (_rgb+4)
  3189  007C52  2002               	addwfc	(?___wmul+1)^0,w,c
  3190  007C54  6EDA               	movwf	fsr2h,c
  3191  007C56  0E00               	movlw	0
  3192  007C58  6EDE               	movwf	postinc2,c
  3193  007C5A  0E00               	movlw	0
  3194  007C5C  6EDD               	movwf	postdec2,c
  3195  007C5E                     
  3196                           ;newmain.c: 123:     }
  3197  007C5E  4A07               	infsnz	initial@i^0,f,c
  3198  007C60  2A08               	incf	(initial@i+1)^0,f,c
  3199  007C62  BE08               	btfsc	(initial@i+1)^0,7,c
  3200  007C64  EF3D  F03E         	goto	u921
  3201  007C68  5008               	movf	(initial@i+1)^0,w,c
  3202  007C6A  E109               	bnz	u920
  3203  007C6C  0E10               	movlw	16
  3204  007C6E  5C07               	subwf	initial@i^0,w,c
  3205  007C70  A0D8               	btfss	status,0,c
  3206  007C72  EF3D  F03E         	goto	u921
  3207  007C76  EF3F  F03E         	goto	u920
  3208  007C7A                     u921:
  3209  007C7A  EFF3  F03D         	goto	l1859
  3210  007C7E                     u920:
  3211  007C7E                     
  3212                           ;newmain.c: 124:     for(i = 16;i < 20;i++){
  3213  007C7E  0E00               	movlw	0
  3214  007C80  6E08               	movwf	(initial@i+1)^0,c
  3215  007C82  0E10               	movlw	16
  3216  007C84  6E07               	movwf	initial@i^0,c
  3217  007C86                     l1871:
  3218                           
  3219                           ;newmain.c: 125:         rgb[i].r = 0;
  3220  007C86  C007  F001         	movff	initial@i,___wmul@multiplier
  3221  007C8A  C008  F002         	movff	initial@i+1,___wmul@multiplier+1
  3222  007C8E  0E00               	movlw	0
  3223  007C90  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  3224  007C92  0E06               	movlw	6
  3225  007C94  6E03               	movwf	___wmul@multiplicand^0,c
  3226  007C96  EC0A  F033         	call	___wmul	;wreg free
  3227  007C9A  0E00               	movlw	low _rgb
  3228  007C9C  2401               	addwf	?___wmul^0,w,c
  3229  007C9E  6ED9               	movwf	fsr2l,c
  3230  007CA0  0E01               	movlw	high _rgb
  3231  007CA2  2002               	addwfc	(?___wmul+1)^0,w,c
  3232  007CA4  6EDA               	movwf	fsr2h,c
  3233  007CA6  0E00               	movlw	0
  3234  007CA8  6EDE               	movwf	postinc2,c
  3235  007CAA  0E00               	movlw	0
  3236  007CAC  6EDD               	movwf	postdec2,c
  3237                           
  3238                           ;newmain.c: 126:         rgb[i].g = 0;
  3239  007CAE  C007  F001         	movff	initial@i,___wmul@multiplier
  3240  007CB2  C008  F002         	movff	initial@i+1,___wmul@multiplier+1
  3241  007CB6  0E00               	movlw	0
  3242  007CB8  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  3243  007CBA  0E06               	movlw	6
  3244  007CBC  6E03               	movwf	___wmul@multiplicand^0,c
  3245  007CBE  EC0A  F033         	call	___wmul	;wreg free
  3246  007CC2  0E02               	movlw	low (_rgb+2)
  3247  007CC4  2401               	addwf	?___wmul^0,w,c
  3248  007CC6  6ED9               	movwf	fsr2l,c
  3249  007CC8  0E01               	movlw	high (_rgb+2)
  3250  007CCA  2002               	addwfc	(?___wmul+1)^0,w,c
  3251  007CCC  6EDA               	movwf	fsr2h,c
  3252  007CCE  0E00               	movlw	0
  3253  007CD0  6EDE               	movwf	postinc2,c
  3254  007CD2  0E00               	movlw	0
  3255  007CD4  6EDD               	movwf	postdec2,c
  3256                           
  3257                           ;newmain.c: 127:         rgb[i].b = 1;
  3258  007CD6  C007  F001         	movff	initial@i,___wmul@multiplier
  3259  007CDA  C008  F002         	movff	initial@i+1,___wmul@multiplier+1
  3260  007CDE  0E00               	movlw	0
  3261  007CE0  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  3262  007CE2  0E06               	movlw	6
  3263  007CE4  6E03               	movwf	___wmul@multiplicand^0,c
  3264  007CE6  EC0A  F033         	call	___wmul	;wreg free
  3265  007CEA  0E04               	movlw	low (_rgb+4)
  3266  007CEC  2401               	addwf	?___wmul^0,w,c
  3267  007CEE  6ED9               	movwf	fsr2l,c
  3268  007CF0  0E01               	movlw	high (_rgb+4)
  3269  007CF2  2002               	addwfc	(?___wmul+1)^0,w,c
  3270  007CF4  6EDA               	movwf	fsr2h,c
  3271  007CF6  0E01               	movlw	1
  3272  007CF8  6EDE               	movwf	postinc2,c
  3273  007CFA  0E00               	movlw	0
  3274  007CFC  6EDD               	movwf	postdec2,c
  3275  007CFE                     
  3276                           ;newmain.c: 128:     }
  3277  007CFE  4A07               	infsnz	initial@i^0,f,c
  3278  007D00  2A08               	incf	(initial@i+1)^0,f,c
  3279  007D02  BE08               	btfsc	(initial@i+1)^0,7,c
  3280  007D04  EF8D  F03E         	goto	u931
  3281  007D08  5008               	movf	(initial@i+1)^0,w,c
  3282  007D0A  E109               	bnz	u930
  3283  007D0C  0E14               	movlw	20
  3284  007D0E  5C07               	subwf	initial@i^0,w,c
  3285  007D10  A0D8               	btfss	status,0,c
  3286  007D12  EF8D  F03E         	goto	u931
  3287  007D16  EF8F  F03E         	goto	u930
  3288  007D1A                     u931:
  3289  007D1A  EF43  F03E         	goto	l1871
  3290  007D1E                     u930:
  3291  007D1E                     
  3292                           ;newmain.c: 129:     for(i = 20;i < 24;i++){
  3293  007D1E  0E00               	movlw	0
  3294  007D20  6E08               	movwf	(initial@i+1)^0,c
  3295  007D22  0E14               	movlw	20
  3296  007D24  6E07               	movwf	initial@i^0,c
  3297  007D26                     l1883:
  3298                           
  3299                           ;newmain.c: 130:         rgb[i].r = 0;
  3300  007D26  C007  F001         	movff	initial@i,___wmul@multiplier
  3301  007D2A  C008  F002         	movff	initial@i+1,___wmul@multiplier+1
  3302  007D2E  0E00               	movlw	0
  3303  007D30  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  3304  007D32  0E06               	movlw	6
  3305  007D34  6E03               	movwf	___wmul@multiplicand^0,c
  3306  007D36  EC0A  F033         	call	___wmul	;wreg free
  3307  007D3A  0E00               	movlw	low _rgb
  3308  007D3C  2401               	addwf	?___wmul^0,w,c
  3309  007D3E  6ED9               	movwf	fsr2l,c
  3310  007D40  0E01               	movlw	high _rgb
  3311  007D42  2002               	addwfc	(?___wmul+1)^0,w,c
  3312  007D44  6EDA               	movwf	fsr2h,c
  3313  007D46  0E00               	movlw	0
  3314  007D48  6EDE               	movwf	postinc2,c
  3315  007D4A  0E00               	movlw	0
  3316  007D4C  6EDD               	movwf	postdec2,c
  3317                           
  3318                           ;newmain.c: 131:         rgb[i].g = 0;
  3319  007D4E  C007  F001         	movff	initial@i,___wmul@multiplier
  3320  007D52  C008  F002         	movff	initial@i+1,___wmul@multiplier+1
  3321  007D56  0E00               	movlw	0
  3322  007D58  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  3323  007D5A  0E06               	movlw	6
  3324  007D5C  6E03               	movwf	___wmul@multiplicand^0,c
  3325  007D5E  EC0A  F033         	call	___wmul	;wreg free
  3326  007D62  0E02               	movlw	low (_rgb+2)
  3327  007D64  2401               	addwf	?___wmul^0,w,c
  3328  007D66  6ED9               	movwf	fsr2l,c
  3329  007D68  0E01               	movlw	high (_rgb+2)
  3330  007D6A  2002               	addwfc	(?___wmul+1)^0,w,c
  3331  007D6C  6EDA               	movwf	fsr2h,c
  3332  007D6E  0E00               	movlw	0
  3333  007D70  6EDE               	movwf	postinc2,c
  3334  007D72  0E00               	movlw	0
  3335  007D74  6EDD               	movwf	postdec2,c
  3336                           
  3337                           ;newmain.c: 132:         rgb[i].b = 0;
  3338  007D76  C007  F001         	movff	initial@i,___wmul@multiplier
  3339  007D7A  C008  F002         	movff	initial@i+1,___wmul@multiplier+1
  3340  007D7E  0E00               	movlw	0
  3341  007D80  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  3342  007D82  0E06               	movlw	6
  3343  007D84  6E03               	movwf	___wmul@multiplicand^0,c
  3344  007D86  EC0A  F033         	call	___wmul	;wreg free
  3345  007D8A  0E04               	movlw	low (_rgb+4)
  3346  007D8C  2401               	addwf	?___wmul^0,w,c
  3347  007D8E  6ED9               	movwf	fsr2l,c
  3348  007D90  0E01               	movlw	high (_rgb+4)
  3349  007D92  2002               	addwfc	(?___wmul+1)^0,w,c
  3350  007D94  6EDA               	movwf	fsr2h,c
  3351  007D96  0E00               	movlw	0
  3352  007D98  6EDE               	movwf	postinc2,c
  3353  007D9A  0E00               	movlw	0
  3354  007D9C  6EDD               	movwf	postdec2,c
  3355  007D9E                     
  3356                           ;newmain.c: 133:     }
  3357  007D9E  4A07               	infsnz	initial@i^0,f,c
  3358  007DA0  2A08               	incf	(initial@i+1)^0,f,c
  3359  007DA2  BE08               	btfsc	(initial@i+1)^0,7,c
  3360  007DA4  EFDD  F03E         	goto	u941
  3361  007DA8  5008               	movf	(initial@i+1)^0,w,c
  3362  007DAA  E109               	bnz	u940
  3363  007DAC  0E18               	movlw	24
  3364  007DAE  5C07               	subwf	initial@i^0,w,c
  3365  007DB0  A0D8               	btfss	status,0,c
  3366  007DB2  EFDD  F03E         	goto	u941
  3367  007DB6  EFDF  F03E         	goto	u940
  3368  007DBA                     u941:
  3369  007DBA  EF93  F03E         	goto	l1883
  3370  007DBE                     u940:
  3371  007DBE  0012               	return		;funcret
  3372  007DC0                     __end_of_initial:
  3373                           	opt callstack 0
  3374                           
  3375 ;; *************** function ___wmul *****************
  3376 ;; Defined at:
  3377 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\Umul16.c"
  3378 ;; Parameters:    Size  Location     Type
  3379 ;;  multiplier      2    0[COMRAM] unsigned int 
  3380 ;;  multiplicand    2    2[COMRAM] unsigned int 
  3381 ;; Auto vars:     Size  Location     Type
  3382 ;;  product         2    4[COMRAM] unsigned int 
  3383 ;; Return value:  Size  Location     Type
  3384 ;;                  2    0[COMRAM] unsigned int 
  3385 ;; Registers used:
  3386 ;;		wreg, status,2, status,0, prodl, prodh
  3387 ;; Tracked objects:
  3388 ;;		On entry : 0/0
  3389 ;;		On exit  : 0/0
  3390 ;;		Unchanged: 0/0
  3391 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3392 ;;      Params:         4       0       0       0       0       0       0
  3393 ;;      Locals:         2       0       0       0       0       0       0
  3394 ;;      Temps:          0       0       0       0       0       0       0
  3395 ;;      Totals:         6       0       0       0       0       0       0
  3396 ;;Total ram usage:        6 bytes
  3397 ;; Hardware stack levels used:    1
  3398 ;; This function calls:
  3399 ;;		Nothing
  3400 ;; This function is called by:
  3401 ;;		_initial
  3402 ;;		_main
  3403 ;; This function uses a non-reentrant model
  3404 ;;
  3405                           
  3406                           	psect	text8
  3407  006614                     __ptext8:
  3408                           	opt callstack 0
  3409  006614                     ___wmul:
  3410                           	opt callstack 29
  3411  006614  5001               	movf	___wmul@multiplier^0,w,c
  3412  006616  0203               	mulwf	___wmul@multiplicand^0,c
  3413  006618  CFF3 F005          	movff	prodl,___wmul@product
  3414  00661C  CFF4 F006          	movff	prodh,___wmul@product+1
  3415  006620  5001               	movf	___wmul@multiplier^0,w,c
  3416  006622  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  3417  006624  50F3               	movf	243,w,c
  3418  006626  2606               	addwf	(___wmul@product+1)^0,f,c
  3419  006628  5002               	movf	(___wmul@multiplier+1)^0,w,c
  3420  00662A  0203               	mulwf	___wmul@multiplicand^0,c
  3421  00662C  50F3               	movf	243,w,c
  3422  00662E  2606               	addwf	(___wmul@product+1)^0,f,c
  3423  006630  C005  F001         	movff	___wmul@product,?___wmul
  3424  006634  C006  F002         	movff	___wmul@product+1,?___wmul+1
  3425  006638  0012               	return		;funcret
  3426  00663A                     __end_of___wmul:
  3427                           	opt callstack 0
  3428                           
  3429 ;; *************** function ___awdiv *****************
  3430 ;; Defined at:
  3431 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\awdiv.c"
  3432 ;; Parameters:    Size  Location     Type
  3433 ;;  dividend        2    0[COMRAM] int 
  3434 ;;  divisor         2    2[COMRAM] int 
  3435 ;; Auto vars:     Size  Location     Type
  3436 ;;  quotient        2    6[COMRAM] int 
  3437 ;;  sign            1    5[COMRAM] unsigned char 
  3438 ;;  counter         1    4[COMRAM] unsigned char 
  3439 ;; Return value:  Size  Location     Type
  3440 ;;                  2    0[COMRAM] int 
  3441 ;; Registers used:
  3442 ;;		wreg, status,2, status,0
  3443 ;; Tracked objects:
  3444 ;;		On entry : 0/0
  3445 ;;		On exit  : 0/0
  3446 ;;		Unchanged: 0/0
  3447 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3448 ;;      Params:         4       0       0       0       0       0       0
  3449 ;;      Locals:         4       0       0       0       0       0       0
  3450 ;;      Temps:          0       0       0       0       0       0       0
  3451 ;;      Totals:         8       0       0       0       0       0       0
  3452 ;;Total ram usage:        8 bytes
  3453 ;; Hardware stack levels used:    1
  3454 ;; This function calls:
  3455 ;;		Nothing
  3456 ;; This function is called by:
  3457 ;;		_main
  3458 ;; This function uses a non-reentrant model
  3459 ;;
  3460                           
  3461                           	psect	text9
  3462  00667E                     __ptext9:
  3463                           	opt callstack 0
  3464  00667E                     ___awdiv:
  3465                           	opt callstack 30
  3466  00667E  0E00               	movlw	0
  3467  006680  6E06               	movwf	___awdiv@sign^0,c
  3468  006682  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
  3469  006684  EF48  F033         	goto	u1490
  3470  006688  EF46  F033         	goto	u1491
  3471  00668C                     u1491:
  3472  00668C  EF4E  F033         	goto	l2617
  3473  006690                     u1490:
  3474  006690  6C03               	negf	___awdiv@divisor^0,c
  3475  006692  1E04               	comf	(___awdiv@divisor+1)^0,f,c
  3476  006694  B0D8               	btfsc	status,0,c
  3477  006696  2A04               	incf	(___awdiv@divisor+1)^0,f,c
  3478  006698  0E01               	movlw	1
  3479  00669A  6E06               	movwf	___awdiv@sign^0,c
  3480  00669C                     l2617:
  3481  00669C  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
  3482  00669E  EF55  F033         	goto	u1500
  3483  0066A2  EF53  F033         	goto	u1501
  3484  0066A6                     u1501:
  3485  0066A6  EF5B  F033         	goto	l2623
  3486  0066AA                     u1500:
  3487  0066AA  6C01               	negf	___awdiv@dividend^0,c
  3488  0066AC  1E02               	comf	(___awdiv@dividend+1)^0,f,c
  3489  0066AE  B0D8               	btfsc	status,0,c
  3490  0066B0  2A02               	incf	(___awdiv@dividend+1)^0,f,c
  3491  0066B2  0E01               	movlw	1
  3492  0066B4  1A06               	xorwf	___awdiv@sign^0,f,c
  3493  0066B6                     l2623:
  3494  0066B6  0E00               	movlw	0
  3495  0066B8  6E08               	movwf	(___awdiv@quotient+1)^0,c
  3496  0066BA  0E00               	movlw	0
  3497  0066BC  6E07               	movwf	___awdiv@quotient^0,c
  3498  0066BE  5003               	movf	___awdiv@divisor^0,w,c
  3499  0066C0  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
  3500  0066C2  B4D8               	btfsc	status,2,c
  3501  0066C4  EF66  F033         	goto	u1511
  3502  0066C8  EF68  F033         	goto	u1510
  3503  0066CC                     u1511:
  3504  0066CC  EF90  F033         	goto	l2645
  3505  0066D0                     u1510:
  3506  0066D0  0E01               	movlw	1
  3507  0066D2  6E05               	movwf	___awdiv@counter^0,c
  3508  0066D4  EF70  F033         	goto	l2631
  3509  0066D8                     l2629:
  3510  0066D8  90D8               	bcf	status,0,c
  3511  0066DA  3603               	rlcf	___awdiv@divisor^0,f,c
  3512  0066DC  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
  3513  0066DE  2A05               	incf	___awdiv@counter^0,f,c
  3514  0066E0                     l2631:
  3515  0066E0  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
  3516  0066E2  EF75  F033         	goto	u1521
  3517  0066E6  EF77  F033         	goto	u1520
  3518  0066EA                     u1521:
  3519  0066EA  EF6C  F033         	goto	l2629
  3520  0066EE                     u1520:
  3521  0066EE                     l2633:
  3522  0066EE  90D8               	bcf	status,0,c
  3523  0066F0  3607               	rlcf	___awdiv@quotient^0,f,c
  3524  0066F2  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
  3525  0066F4  5003               	movf	___awdiv@divisor^0,w,c
  3526  0066F6  5C01               	subwf	___awdiv@dividend^0,w,c
  3527  0066F8  5004               	movf	(___awdiv@divisor+1)^0,w,c
  3528  0066FA  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
  3529  0066FC  A0D8               	btfss	status,0,c
  3530  0066FE  EF83  F033         	goto	u1531
  3531  006702  EF85  F033         	goto	u1530
  3532  006706                     u1531:
  3533  006706  EF8A  F033         	goto	l2641
  3534  00670A                     u1530:
  3535  00670A  5003               	movf	___awdiv@divisor^0,w,c
  3536  00670C  5E01               	subwf	___awdiv@dividend^0,f,c
  3537  00670E  5004               	movf	(___awdiv@divisor+1)^0,w,c
  3538  006710  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
  3539  006712  8007               	bsf	___awdiv@quotient^0,0,c
  3540  006714                     l2641:
  3541  006714  90D8               	bcf	status,0,c
  3542  006716  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
  3543  006718  3203               	rrcf	___awdiv@divisor^0,f,c
  3544  00671A  2E05               	decfsz	___awdiv@counter^0,f,c
  3545  00671C  EF77  F033         	goto	l2633
  3546  006720                     l2645:
  3547  006720  5006               	movf	___awdiv@sign^0,w,c
  3548  006722  B4D8               	btfsc	status,2,c
  3549  006724  EF96  F033         	goto	u1541
  3550  006728  EF98  F033         	goto	u1540
  3551  00672C                     u1541:
  3552  00672C  EF9C  F033         	goto	l2649
  3553  006730                     u1540:
  3554  006730  6C07               	negf	___awdiv@quotient^0,c
  3555  006732  1E08               	comf	(___awdiv@quotient+1)^0,f,c
  3556  006734  B0D8               	btfsc	status,0,c
  3557  006736  2A08               	incf	(___awdiv@quotient+1)^0,f,c
  3558  006738                     l2649:
  3559  006738  C007  F001         	movff	___awdiv@quotient,?___awdiv
  3560  00673C  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  3561  006740  0012               	return		;funcret
  3562  006742                     __end_of___awdiv:
  3563                           	opt callstack 0
  3564                           
  3565 ;; *************** function _ADC_Read *****************
  3566 ;; Defined at:
  3567 ;;		line 88 in file "newmain.c"
  3568 ;; Parameters:    Size  Location     Type
  3569 ;;  channle         2    0[COMRAM] int 
  3570 ;; Auto vars:     Size  Location     Type
  3571 ;;  digital         2    4[COMRAM] int 
  3572 ;; Return value:  Size  Location     Type
  3573 ;;                  2    0[COMRAM] int 
  3574 ;; Registers used:
  3575 ;;		wreg, status,2, status,0
  3576 ;; Tracked objects:
  3577 ;;		On entry : 0/0
  3578 ;;		On exit  : 0/0
  3579 ;;		Unchanged: 0/0
  3580 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3581 ;;      Params:         2       0       0       0       0       0       0
  3582 ;;      Locals:         2       0       0       0       0       0       0
  3583 ;;      Temps:          2       0       0       0       0       0       0
  3584 ;;      Totals:         6       0       0       0       0       0       0
  3585 ;;Total ram usage:        6 bytes
  3586 ;; Hardware stack levels used:    1
  3587 ;; This function calls:
  3588 ;;		Nothing
  3589 ;; This function is called by:
  3590 ;;		_main
  3591 ;; This function uses a non-reentrant model
  3592 ;;
  3593                           
  3594                           	psect	text10
  3595  00663A                     __ptext10:
  3596                           	opt callstack 0
  3597  00663A                     _ADC_Read:
  3598                           	opt callstack 30
  3599  00663A                     
  3600                           ;newmain.c: 88: int ADC_Read(int channle);newmain.c: 89: {;newmain.c: 90:     int digita
      +                          l;;newmain.c: 92:     ADCON0bits.CHS = channle;
  3601  00663A  C001  F003         	movff	ADC_Read@channle,??_ADC_Read
  3602  00663E  4603               	rlncf	??_ADC_Read^0,f,c
  3603  006640  4603               	rlncf	??_ADC_Read^0,f,c
  3604  006642  50C2               	movf	194,w,c	;volatile
  3605  006644  1803               	xorwf	??_ADC_Read^0,w,c
  3606  006646  0BC3               	andlw	-61
  3607  006648  1803               	xorwf	??_ADC_Read^0,w,c
  3608  00664A  6EC2               	movwf	194,c	;volatile
  3609  00664C                     
  3610                           ;newmain.c: 93:     ADCON0bits.GO = 1;
  3611  00664C  82C2               	bsf	194,1,c	;volatile
  3612  00664E                     
  3613                           ;newmain.c: 94:     ADCON0bits.ADON = 1;
  3614  00664E  80C2               	bsf	194,0,c	;volatile
  3615  006650                     l32:
  3616  006650  B2C2               	btfsc	194,1,c	;volatile
  3617  006652  EF2D  F033         	goto	u881
  3618  006656  EF2F  F033         	goto	u880
  3619  00665A                     u881:
  3620  00665A  EF28  F033         	goto	l32
  3621  00665E                     u880:
  3622  00665E                     
  3623                           ;newmain.c: 98:     digital = (ADRESH*256) | (ADRESL);
  3624  00665E  50C3               	movf	195,w,c	;volatile
  3625  006660  CFC4 F003          	movff	4036,??_ADC_Read	;volatile
  3626  006664  6A04               	clrf	(??_ADC_Read+1)^0,c
  3627  006666  C003  F004         	movff	??_ADC_Read,??_ADC_Read+1
  3628  00666A  6A03               	clrf	??_ADC_Read^0,c
  3629  00666C  1003               	iorwf	??_ADC_Read^0,w,c
  3630  00666E  6E05               	movwf	ADC_Read@digital^0,c
  3631  006670  5004               	movf	(??_ADC_Read+1)^0,w,c
  3632  006672  6E06               	movwf	(ADC_Read@digital+1)^0,c
  3633  006674                     
  3634                           ;newmain.c: 99:     return(digital);
  3635  006674  C005  F001         	movff	ADC_Read@digital,?_ADC_Read
  3636  006678  C006  F002         	movff	ADC_Read@digital+1,?_ADC_Read+1
  3637  00667C  0012               	return		;funcret
  3638  00667E                     __end_of_ADC_Read:
  3639                           	opt callstack 0
  3640                           
  3641 ;; *************** function _ADC_Initialize *****************
  3642 ;; Defined at:
  3643 ;;		line 78 in file "newmain.c"
  3644 ;; Parameters:    Size  Location     Type
  3645 ;;		None
  3646 ;; Auto vars:     Size  Location     Type
  3647 ;;		None
  3648 ;; Return value:  Size  Location     Type
  3649 ;;                  1    wreg      void 
  3650 ;; Registers used:
  3651 ;;		wreg, status,2
  3652 ;; Tracked objects:
  3653 ;;		On entry : 0/0
  3654 ;;		On exit  : 0/0
  3655 ;;		Unchanged: 0/0
  3656 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3657 ;;      Params:         0       0       0       0       0       0       0
  3658 ;;      Locals:         0       0       0       0       0       0       0
  3659 ;;      Temps:          0       0       0       0       0       0       0
  3660 ;;      Totals:         0       0       0       0       0       0       0
  3661 ;;Total ram usage:        0 bytes
  3662 ;; Hardware stack levels used:    1
  3663 ;; This function calls:
  3664 ;;		Nothing
  3665 ;; This function is called by:
  3666 ;;		_main
  3667 ;; This function uses a non-reentrant model
  3668 ;;
  3669                           
  3670                           	psect	text11
  3671  0065DA                     __ptext11:
  3672                           	opt callstack 0
  3673  0065DA                     _ADC_Initialize:
  3674                           	opt callstack 30
  3675  0065DA                     
  3676                           ;newmain.c: 80:     TRISA = 1;
  3677  0065DA  0E01               	movlw	1
  3678  0065DC  6E92               	movwf	146,c	;volatile
  3679                           
  3680                           ;newmain.c: 81:     ADCON1 = 0x0e;
  3681  0065DE  0E0E               	movlw	14
  3682  0065E0  6EC1               	movwf	193,c	;volatile
  3683                           
  3684                           ;newmain.c: 82:     ADCON2 = 0x90;
  3685  0065E2  0E90               	movlw	144
  3686  0065E4  6EC0               	movwf	192,c	;volatile
  3687  0065E6                     
  3688                           ;newmain.c: 83:     ADFM = 1 ;
  3689  0065E6  8EC0               	bsf	4032,7,c	;volatile
  3690                           
  3691                           ;newmain.c: 84:     ADCON2bits.ADCS = 0;
  3692  0065E8  0EF8               	movlw	-8
  3693  0065EA  16C0               	andwf	192,f,c	;volatile
  3694                           
  3695                           ;newmain.c: 85:     ADRESH=0;
  3696  0065EC  0E00               	movlw	0
  3697  0065EE  6EC4               	movwf	196,c	;volatile
  3698                           
  3699                           ;newmain.c: 86:     ADRESL=0;
  3700  0065F0  0E00               	movlw	0
  3701  0065F2  6EC3               	movwf	195,c	;volatile
  3702  0065F4  0012               	return		;funcret
  3703  0065F6                     __end_of_ADC_Initialize:
  3704                           	opt callstack 0
  3705  0000                     
  3706                           	psect	rparam
  3707  0000                     tosu	equ	0xFFF
  3708                           tosh	equ	0xFFE
  3709                           tosl	equ	0xFFD
  3710                           stkptr	equ	0xFFC
  3711                           pclatu	equ	0xFFB
  3712                           pclath	equ	0xFFA
  3713                           pcl	equ	0xFF9
  3714                           tblptru	equ	0xFF8
  3715                           tblptrh	equ	0xFF7
  3716                           tblptrl	equ	0xFF6
  3717                           tablat	equ	0xFF5
  3718                           prodh	equ	0xFF4
  3719                           prodl	equ	0xFF3
  3720                           indf0	equ	0xFEF
  3721                           postinc0	equ	0xFEE
  3722                           postdec0	equ	0xFED
  3723                           preinc0	equ	0xFEC
  3724                           plusw0	equ	0xFEB
  3725                           fsr0h	equ	0xFEA
  3726                           fsr0l	equ	0xFE9
  3727                           wreg	equ	0xFE8
  3728                           indf1	equ	0xFE7
  3729                           postinc1	equ	0xFE6
  3730                           postdec1	equ	0xFE5
  3731                           preinc1	equ	0xFE4
  3732                           plusw1	equ	0xFE3
  3733                           fsr1h	equ	0xFE2
  3734                           fsr1l	equ	0xFE1
  3735                           bsr	equ	0xFE0
  3736                           indf2	equ	0xFDF
  3737                           postinc2	equ	0xFDE
  3738                           postdec2	equ	0xFDD
  3739                           preinc2	equ	0xFDC
  3740                           plusw2	equ	0xFDB
  3741                           fsr2h	equ	0xFDA
  3742                           fsr2l	equ	0xFD9
  3743                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         156
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     44      56
    BANK0           128      0       0
    BANK1           256      0     144
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           244      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_rotate_bot
    _main->_rotate_l
    _main->_rotate_r
    _main->_rotate_sidebot
    _main->_rotate_sidetop
    _main->_rotate_top
    _initial->___wmul

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                13    13      0   12067
                                             31 COMRAM    13    13      0
                     _ADC_Initialize
                           _ADC_Read
                            ___awdiv
                             ___wmul
                            _initial
                         _rotate_bot
                           _rotate_l
                           _rotate_r
                     _rotate_sidebot
                     _rotate_sidetop
                         _rotate_top
 ---------------------------------------------------------------------------------
 (1) _rotate_top                                          31    29      2     511
                                              0 COMRAM    31    29      2
 ---------------------------------------------------------------------------------
 (1) _rotate_sidetop                                      31    29      2     511
                                              0 COMRAM    31    29      2
 ---------------------------------------------------------------------------------
 (1) _rotate_sidebot                                      31    29      2     511
                                              0 COMRAM    31    29      2
 ---------------------------------------------------------------------------------
 (1) _rotate_r                                            31    29      2     511
                                              0 COMRAM    31    29      2
 ---------------------------------------------------------------------------------
 (1) _rotate_l                                            31    29      2     511
                                              0 COMRAM    31    29      2
 ---------------------------------------------------------------------------------
 (1) _rotate_bot                                          31    29      2     511
                                              0 COMRAM    31    29      2
 ---------------------------------------------------------------------------------
 (1) _initial                                              2     2      0    4023
                                              6 COMRAM     2     2      0
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4    3351
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              8     4      4     604
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (1) _ADC_Read                                             6     4      2     197
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (1) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_Initialize
   _ADC_Read
   ___awdiv
   ___wmul
   _initial
     ___wmul
   _rotate_bot
   _rotate_l
   _rotate_r
   _rotate_sidebot
   _rotate_sidetop
   _rotate_top

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5F3      0       0      16        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK4           100      0       0      11        0.0%
BANK4              100      0       0      12        0.0%
BITBANK3           100      0       0       9        0.0%
BANK3              100      0       0      10        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0      90       6       56.3%
BITBANK5            F4      0       0      15        0.0%
BANK5               F4      0       0      13        0.0%
BITBANK0            80      0       0       3        0.0%
BANK0               80      0       0       4        0.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     2C      38       1       44.1%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      C8      14        0.0%
DATA                 0      0      C8      17        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Thu Dec 19 21:33:44 2019

                     l32 6650                       l50 7DBE                       l35 667C  
                     l29 65F4                       l63 6EEA                       l76 6C5C  
                     l89 7694             ___awdiv@sign 0006      ___wmul@multiplicand 0003  
            __CFG_BORV$3 000000             __CFG_CP0$OFF 000000             __CFG_CP1$OFF 000000  
           __CFG_CP2$OFF 000000             __CFG_CP3$OFF 000000                      l102 69CE  
                    l115 7406                      l141 78E6                      l128 7178  
                    l154 6638                      l385 6740                      l833 65DA  
                    l835 65E6             __CFG_CPB$OFF 000000             __CFG_CPD$OFF 000000  
                    u900 7B3E                      u901 7B3A                      u910 7BDE  
                    u911 7BDA                      u920 7C7E                      u921 7C7A  
                    u930 7D1E                      u931 7D1A                      u940 7DBE  
                    u941 7DBA                      u950 6C7A                      u951 6C76  
                    u880 665E                      u960 6CA0                      u881 665A  
                    u961 6C9C                      u890 7A9E                      u891 7A9A  
                    u971 6CBA                      u981 6CCC                      u990 6DB4  
                    u991 6DB0                      _rgb 0100                      wreg 000FE8  
           __CFG_LVP$OFF 000000             __CFG_WDT$OFF 000000                     l2001 6EBA  
                   l2011 69EC                     l2003 6EC2                     l2101 6BDC  
                   l2021 6A4E                     l2013 69F4                     l2005 6ECA  
                   l2111 6C04                     l2103 6BE4                     l2031 6A76  
                   l2023 6A56                     l2015 6A12                     l2007 6ED0  
                   l2121 6C2C                     l2113 6C0C                     l2105 6BEC  
                   l2041 6A9E                     l2033 6A7E                     l2025 6A5E  
                   l2017 6A22                     l2009 69D0                     l2201 75C4  
                   l2123 6C34                     l2115 6C14                     l2107 6BF4  
                   l2051 6AC6                     l2043 6AA6                     l2035 6A86  
                   l2027 6A66                     l2019 6A46                     l2211 75EC  
                   l2203 75CC                     l2131 7424                     l2301 6860  
                   l2125 6C3C                     l2117 6C1C                     l2109 6BFC  
                   l2061 6AEE                     l2053 6ACE                     l2045 6AAE  
                   l2037 6A8E                     l2029 6A6E                     l2221 7614  
                   l2213 75F4                     l2205 75D4                     l2141 7486  
                   l2133 742C                     l2303 6868                     l2311 689C  
                   l2119 6C24                     l2127 6C42                     l2063 6AF6  
                   l2055 6AD6                     l2047 6AB6                     l2039 6A96  
                   l2071 6B2A                     l2231 763C                     l2223 761C  
                   l2215 75FC                     l2207 75DC                     l2151 74AE  
                   l2143 748E                     l2135 744A                     l2321 68FE  
                   l2313 68BA                     l2305 6870                     l2081 6B8C  
                   l2073 6B48                     l2065 6AFE                     l2057 6ADE  
                   l2049 6ABE                     l2401 7248                     l2241 7664  
                   l2233 7644                     l2225 7624                     l2217 7604  
                   l2209 75E4                     l2161 74D6                     l2153 74B6  
                   l2145 7496                     l2137 745A                     l2129 7408  
                   l2331 6926                     l2323 6906                     l2315 68CA  
                   l2307 6878                     l2251 675E                     l2091 6BB4  
                   l2083 6B94                     l2075 6B58                     l2067 6B06  
                   l2059 6AE6                     l2411 7270                     l2403 7250  
                   l2243 766C                     l2235 764C                     l2227 762C  
                   l2219 760C                     l2171 74FE                     l2163 74DE  
                   l2155 74BE                     l2147 749E                     l2139 747E  
                   l2341 694E                     l2333 692E                     l2325 690E  
                   l2317 68EE                     l2261 67C0                     l2309 687E  
                   l2253 6766                     l2093 6BBC                     l2085 6B9C  
                   l2077 6B7C                     l2069 6B0C                     l2501 6F6A  
                   l2421 7298                     l2413 7278                     l2405 7258  
                   l2245 7674                     l2237 7654                     l2229 7634  
                   l2181 7526                     l2173 7506                     l2165 74E6  
                   l2157 74C6                     l2149 74A6                     l2351 6976  
                   l2343 6956                     l2335 6936                     l2327 6916  
                   l2319 68F6                     l2271 67E8                     l2263 67C8  
                   l2255 6784                     l2095 6BC4                     l2087 6BA4  
                   l2079 6B84                     l2511 6F92                     l2503 6F72  
                   l2423 72A0                     l2415 7280                     l2407 7260  
                   l2431 72D4                     l2239 765C                     l2247 767A  
                   l2183 752E                     l2175 750E                     l2167 74EE  
                   l2159 74CE                     l2191 7562                     l1801 6630  
                   l2361 699E                     l2353 697E                     l2345 695E  
                   l2337 693E                     l2329 691E                     l2281 6810  
                   l2273 67F0                     l2265 67D0                     l2257 6794  
                   l2249 6742                     l2097 6BCC                     l2089 6BAC  
                   l2601 7148                     l2521 6FBA                     l2513 6F9A  
                   l2505 6F7A                     l2441 7336                     l2433 72F2  
                   l2425 72A8                     l2417 7288                     l2409 7268  
                   l2193 7580                     l2185 7536                     l2177 7516  
                   l2169 74F6                     l1811 665E                     l2611 6682  
                   l2363 69A6                     l2355 6986                     l2347 6966  
                   l2339 6946                     l2291 6838                     l2283 6818  
                   l2275 67F8                     l2267 67D8                     l2259 67B8  
                   l2099 6BD4                     l2603 7150                     l2531 6FE2  
                   l2523 6FC2                     l2515 6FA2                     l2507 6F82  
                   l2451 735E                     l2443 733E                     l2435 7302  
                   l2427 72B0                     l2419 7290                     l2371 7196  
                   l2195 7590                     l2187 753E                     l2179 751E  
                   l1813 6674                     l1805 663A                     l2621 66B2  
                   l2613 6690                     l2365 69AE                     l2357 698E  
                   l2349 696E                     l2293 6840                     l2285 6820  
                   l2277 6800                     l2269 67E0                     l1901 6CDC  
                   l2605 7158                     l2541 700A                     l2533 6FEA  
                   l2525 6FCA                     l2517 6FAA                     l2509 6F8A  
                   l2461 7386                     l2453 7366                     l2445 7346  
                   l2437 7326                     l2381 71F8                     l2429 72B6  
                   l2373 719E                     l2197 75B4                     l2189 7544  
                   l2701 77D6                     l1807 664C                     l2631 66E0  
                   l2623 66B6                     l2615 6698                     l1823 7A06  
                   l2359 6996                     l2367 69B4                     l2295 6848  
                   l2287 6828                     l2279 6808                     l1911 6D04  
                   l1903 6CE4                     l2607 715E                     l2543 7012  
                   l2535 6FF2                     l2527 6FD2                     l2519 6FB2  
                   l2551 7046                     l2471 73AE                     l2463 738E  
                   l2455 736E                     l2447 734E                     l2439 732E  
                   l2391 7220                     l2383 7200                     l2375 71BC  
                   l2199 75BC                     l2711 782E                     l2703 77EA  
                   l1809 664E                     l2641 6714                     l2633 66EE  
                   l2625 66BE                     l2617 669C                     l2609 667E  
                   l1841 7B3E                     l1825 7A7E                     l1817 79FE  
                   l2297 6850                     l2289 6830                     l1921 6D2C  
                   l1913 6D0C                     l1905 6CEC                     l2561 70A8  
                   l2553 7064                     l2545 701A                     l2537 6FFA  
                   l2529 6FDA                     l2481 73D6                     l2473 73B6  
                   l2465 7396                     l2457 7376                     l2449 7356  
                   l2393 7228                     l2385 7208                     l2377 71CC  
                   l2369 717A                     l2721 788A                     l2713 7846  
                   l2705 7802                     l2643 671A                     l2635 66F4  
                   l2627 66D0                     l2619 66AA                     l1851 7BC2  
                   l1835 7AA6                     l1827 7A82                     l2299 6858  
                   l1931 6D54                     l1923 6D34                     l1915 6D14  
                   l1907 6CF4                     l2571 70D0                     l2563 70B0  
                   l2555 7074                     l2547 7022                     l2539 7002  
                   l2491 6F08                     l2483 73DE                     l2475 73BE  
                   l2467 739E                     l2459 737E                     l2395 7230  
                   l2387 7210                     l2379 71F0                     l2731 78DA  
                   l2723 7896                     l2715 7852                     l2707 780E  
                   l2637 670A                     l2629 66D8                     l2645 6720  
                   l1861 7C5E                     l1853 7BDE                     l1837 7B1E  
                   l1829 7A9E                     l1941 6D7C                     l1933 6D5C  
                   l1925 6D3C                     l1917 6D1C                     l1909 6CFC  
                   l2581 70F8                     l2573 70D8                     l2565 70B8  
                   l2557 7098                     l2549 7028                     l2493 6F10  
                   l2485 73E6                     l2477 73C6                     l2469 73A6  
                   l2397 7238                     l2389 7218                     l2741 7978  
                   l2725 78A2                     l2717 785E                     l2709 781A  
                   l2733 78E6                     l2661 76A6                     l2653 7696  
                   l2647 6730                     l2639 6712                     l1871 7C86  
                   l1863 7C62                     l1847 7B46                     l1839 7B22  
                   l1943 6D84                     l1935 6D64                     l1927 6D44  
                   l1919 6D24                     l1951 6DB8                     l2591 7120  
                   l2583 7100                     l2575 70E0                     l2567 70C0  
                   l2559 70A0                     l2495 6F2E                     l2479 73CE  
                   l2487 73EC                     l2399 7240                     l2751 79AA  
                   l2743 797A                     l2735 7914                     l2727 78B6  
                   l2719 7872                     l2671 76B8                     l2663 76A8  
                   l2655 769A                     l2649 6738                     l1873 7CFE  
                   l1865 7C7E                     l1849 7BBE                     l1961 6E1A  
                   l1953 6DD6                     l1945 6D8C                     l1937 6D6C  
                   l1929 6D4C                     l2593 7128                     l2585 7108  
                   l2577 70E8                     l2569 70C8                     l2497 6F3E  
                   l2489 6EEC                     l2761 79DE                     l2753 79B4  
                   l2745 797C                     l2737 7944                     l2729 78CE  
                   l2681 7722                     l2673 76CC                     l2665 76B0  
                   l2657 769E                     l1883 7D26                     l1875 7D02  
                   l1859 7BE6                     l1971 6E42                     l1963 6E22  
                   l1955 6DE6                     l1947 6D94                     l1939 6D74  
                   l1891 6C7A                     l2595 7130                     l2587 7110  
                   l2579 70F0                     l2499 6F62                     l2763 79E2  
                   l2755 79BE                     l2747 7996                     l2739 7976  
                   l2691 7788                     l2683 7736                     l2675 76FA  
                   l2659 76A2                     l1885 7D9E                     l1877 7D1E  
                   l1981 6E6A                     l1973 6E4A                     l1965 6E2A  
                   l1957 6E0A                     l1949 6D9A                     l1893 6C82  
                   l2597 7138                     l2589 7118                     l2757 79C2  
                   l2749 79A0                     l2693 7794                     l2685 7752  
                   l2677 76FE                     l1799 6614                     l1887 7DA2  
                   l1991 6E92                     l1983 6E72                     l1975 6E52  
                   l1967 6E32                     l1959 6E12                     l1895 6CA0  
                   l2599 7140                     l2759 79D6                     l2695 77A6  
                   l2687 7764                     l2679 771A                     l1993 6E9A  
                   l1985 6E7A                     l1977 6E5A                     l1969 6E3A  
                   l1897 6CB0                     l1889 6C5E                     l2697 77BE  
                   l2689 777C                     l1995 6EA2                     l1987 6E82  
                   l1979 6E62                     l1899 6CD4                     l2699 77CA  
                   l1997 6EAA                     l1989 6E8A                     l1999 6EB2  
                   _ADFM 007E07                     u1000 6DD6                     u1001 6DD2  
                   u1011 6DF0                     u1101 6B62                     u1021 6E02  
                   u1030 6EEA                     u1111 6B74                     u1031 6EE6  
                   u1120 6C5C                     u1040 69EC                     u1121 6C58  
                   u1041 69E8                     u1201 75AC                     u1050 6A12  
                   u1210 7694                     u1130 7424                     u1051 6A0E  
                   u1211 7690                     u1131 7420                     u1300 69CE  
                   u1220 675E                     u1140 744A                     u1301 69CA  
                   u1221 675A                     u1061 6A2C                     u1141 7446  
                   u1230 6784                     u1310 7196                     u1231 6780  
                   u1071 6A3E                     u1311 7192                     u1151 7464  
                   u1080 6B26                     u1400 6F08                     u1320 71BC  
                   u1241 679E                     u1081 6B22                     u1401 6F04  
                   u1321 71B8                     u1161 7476                     u1090 6B48  
                   u1410 6F2E                     u1170 755E                     u1251 67B0  
                   u1091 6B44                     u1411 6F2A                     u1331 71D6  
                   u1171 755A                     u1500 66AA                     u1260 6898  
                   u1180 7580                     u1501 66A6                     u1261 6894  
                   u1421 6F48                     u1341 71E8                     u1181 757C  
                   u1510 66D0                     u1270 68BA                     u1350 72D0  
                   u1511 66CC                     u1271 68B6                     u1431 6F5A  
                   u1351 72CC                     u1191 759A                     u1520 66EE  
                   u1440 7042                     u1360 72F2                     u1600 77EA  
                   _LATD 000F8C                     u1521 66EA                     u1281 68D4  
                   u1441 703E                     u1361 72EE                     u1601 77E6  
                   u1530 670A                     u1450 7064                     u1610 7802  
                   u1531 6706                     u1291 68E6                     u1451 7060  
                   u1371 730C                     u1611 77FE                     u1540 6730  
                   u1620 782E                     u1541 672C                     u1461 707E  
                   u1381 731E                     u1621 782A                     u1390 7406  
                   u1630 7846                     u1550 771A                     u1471 7090  
                   u1391 7402                     u1631 7842                     u1551 7716  
                   u1480 7178                     u1640 7872                     u1560 7764  
                   u1481 7174                     u1705 79A8                     u1641 786E  
                   u1561 7760                     u1490 6690                     u1730 79D6  
                   u1650 788A                     u1570 777C                     u1491 668C  
                   u1731 79D2                     u1715 79B2                     u1707 79AA  
                   u1651 7886                     u1571 7778                     u1740 79F6  
                   u1660 78B6                     u1580 77A6                     u1741 79F2  
                   u1725 79BC                     u1717 79B4                     u1661 78B2  
                   u1581 77A2                     u1726 79BE                     u1670 78CE  
                   u1590 77BE                     u1671 78CA                     u1591 77BA  
                   u1680 798E                     u1681 7986                     u1695 799E  
                   u1688 7990                     u1697 79A0                     _main 7696  
                   fsr2h 000FDA                     indf2 000FDF                     fsr2l 000FD9  
       __end_of_ADC_Read 667E                     prodh 000FF4                     prodl 000FF3  
                   start 0000            __CFG_IESO$OFF 000000            __CFG_MCLRE$ON 000000  
           ___param_bank 000000                    ?_main 0001          __end_of___awdiv 6742  
        ___awdiv@divisor 0003          ___awdiv@counter 0005                    _TRISA 000F92  
                  _TRISD 000F95           _rotate_sidebot 6EEC             main@init_adc 0021  
  rotate_sidebot@buf_307 0006           _rotate_sidetop 717A            __CFG_PWRT$OFF 000000  
          __CFG_WRT0$OFF 000000            __CFG_WRT1$OFF 000000            __CFG_WRT2$OFF 000000  
          __CFG_WRT3$OFF 000000           __CFG_EBTR0$OFF 000000           __CFG_FCMEN$OFF 000000  
         __CFG_EBTR1$OFF 000000           __CFG_EBTR2$OFF 000000           __CFG_EBTR3$OFF 000000  
          __CFG_WRTB$OFF 000000            __CFG_WRTC$OFF 000000            __CFG_WRTD$OFF 000000  
         __CFG_EBTRB$OFF 000000          __end_of_initial 7DC0                    main@i 0027  
                  main@j 0025                    plusw1 000FE3                    plusw2 000FDB  
                  status 000FD8          __initialization 65F6             __end_of_main 79FE  
 __end_of_rotate_sidebot 717A                   ??_main 0020   __end_of_rotate_sidetop 7408  
          __activetblptr 000000                   _ADCON1 000FC1                   _ADCON2 000FC0  
                 _ADRESH 000FC4                   _ADRESL 000FC3         ___awdiv@dividend 0001  
         __CFG_XINST$OFF 000000                   ___wmul 6614                ??___awdiv 0005  
         __CFG_STVREN$ON 000000          ADC_Read@channle 0001          ADC_Read@digital 0005  
                 clear_0 65FC                   clear_1 6608         ___awdiv@quotient 0007  
        ?_rotate_sidebot 0001          ?_rotate_sidetop 0001                ??_initial 0007  
              ?_ADC_Read 0001         __end_of_rotate_l 6C5E         __end_of_rotate_r 6EEC  
             __accesstop 0080  __end_of__initialization 660E          __CFG_PBADEN$OFF 000000  
          ___rparam_used 000001           __pcstackCOMRAM 0001      rotate_sidebot@tempa 0008  
    rotate_sidebot@tempb 000E      rotate_sidebot@tempc 0014      rotate_sidebot@tempd 001A  
             ??_ADC_Read 0003               __pbssBANK1 0100          rotate_l@buf_227 0006  
                ?___wmul 0001            rotate_l@tempa 0008            rotate_l@tempb 000E  
          rotate_l@tempc 0014            rotate_l@tempd 001A            rotate_r@tempa 0008  
          rotate_r@tempb 000E            rotate_r@tempc 0014            rotate_r@tempd 001A  
          rotate_bot@buf 0004            rotate_bot@val 0001      rotate_sidetop@tempa 0008  
    rotate_sidetop@tempb 000E      rotate_sidetop@tempc 0014      rotate_sidetop@tempd 001A  
__size_of_ADC_Initialize 001C          rotate_r@buf_207 0006            rotate_top@buf 0004  
          rotate_top@val 0001    rotate_sidetop@buf_287 0006                  __Hparam 0000  
        rotate_bot@tempa 0008          rotate_bot@tempb 000E          rotate_bot@tempc 0014  
        rotate_bot@tempd 001A                  __Lparam 0000                  ___awdiv 667E  
        __size_of___wmul 0026                ?_rotate_l 0001                ?_rotate_r 0001  
                __pcinit 65F6                  __ramtop 0600                  __ptext0 7696  
                __ptext1 7408                  __ptext2 717A                  __ptext3 6EEC  
                __ptext4 6C5E                  __ptext5 69D0                  __ptext6 6742  
                __ptext7 79FE                  __ptext8 6614                  __ptext9 667E  
                _initial 79FE                  main@val 002B     end_of_initialization 660E  
        rotate_top@tempa 0008          rotate_top@tempb 000E          rotate_top@tempc 0014  
        rotate_top@tempd 001A                  postdec2 000FDD         ??_rotate_sidebot 0003  
                postinc0 000FEE                  postinc2 000FDE         ??_rotate_sidetop 0003  
             ??_rotate_l 0003               ??_rotate_r 0003               _rotate_bot 6742  
      __size_of_ADC_Read 0044               _rotate_top 7408           __end_of___wmul 663A  
         _ADC_Initialize 65DA      start_initialization 65F6        rotate_bot@buf_267 0006  
            rotate_l@buf 0004              rotate_l@val 0001              rotate_r@buf 0004  
            rotate_r@val 0001         __CFG_OSC$INTIO67 000000                 ??___wmul 0005  
 __end_of_ADC_Initialize 65F6         __CFG_LPT1OSC$OFF 000000              __pbssCOMRAM 002D  
            ?_rotate_bot 0001              ?_rotate_top 0001        __CFG_CCP2MX$PORTC 000000  
               ?___awdiv 0001          ?_ADC_Initialize 0001        __size_of_rotate_l 028E  
      __size_of_rotate_r 028E                 ?_initial 0001                 _ADC_Read 663A  
         ___wmul@product 0005                 _LATDbits 000F8C         __CFG_WDTPS$32768 000000  
    __size_of_rotate_bot 028E      __size_of_rotate_top 028E               _ADCON0bits 000FC2  
             _ADCON2bits 000FC0        ___wmul@multiplier 0001                 __Hrparam 0000  
               __Lrparam 0000       __CFG_BOREN$SBORDIS 000000         __size_of___awdiv 00C4  
      rotate_sidebot@buf 0004        rotate_sidebot@val 0001         __size_of_initial 03C2  
      rotate_sidetop@buf 0004                 __ptext10 663A                 __ptext11 65DA  
      rotate_sidetop@val 0001            __size_of_main 0368        rotate_top@buf_247 0006  
               _original 002D                 _rotate_l 69D0                 _rotate_r 6C5E  
               main@temp 0023                 main@turn 0029  __size_of_rotate_sidebot 028E  
__size_of_rotate_sidetop 028E                 initial@i 0007             ??_rotate_bot 0003  
           ??_rotate_top 0003         ??_ADC_Initialize 0001       __end_of_rotate_bot 69D0  
     __end_of_rotate_top 7696  
