Microchip MPLAB XC8 Compiler V2.10 ()

Linker command line:

-W-3 --edf=C:\Program Files (x86)\Microchip\xc8\v2.10\pic\dat\en_msgs.txt \
  -cs -h+dist/default/debug\testt.X.debug.sym \
  --cmf=dist/default/debug\testt.X.debug.cmf -z -Q18F4520 \
  -oC:\Users\user\AppData\Local\Temp\s4hs.2 --defsym=__MPLAB_BUILD=1 \
  -Mdist/default/debug/testt.X.debug.map -E1 -ver=XC8 --acfsm=1493 \
  -ASTACK=0190h-05F3h -pstack=STACK -ACODE=00h-07DBFh -ACONST=00h-07DBFh \
  -ASMALLCONST=0600h-06FFhx119,07D00h-07DBFh -AMEDIUMCONST=0600h-07DBFh \
  -ACOMRAM=01h-07Fh -AABS1=00h-05F3h -ABIGRAM=01h-05F3h \
  -ARAM=080h-0FFh,0100h-01FFhx4,0500h-05F3h -ABANK0=080h-0FFh \
  -ABANK1=0100h-01FFh -ABANK2=0200h-02FFh -ABANK3=0300h-03FFh \
  -ABANK4=0400h-04FFh -ABANK5=0500h-05F3h \
  -ASFR=0F80h-0F9Bh,0F9Dh-0FD3h,0FD5h-0FDAh,0FE0h-0FE2h,0FE8h-0FEAh,0FF0h-0FFCh \
  -preset_vec=00h,intcode,intcodelo,powerup,init -pramtop=0600h \
  -psmallconst=SMALLCONST -pmediumconst=MEDIUMCONST -pconst=CONST \
  -AFARRAM=00h-00h -ACONFIG=0300000h-030000Dh -pconfig=CONFIG \
  -AIDLOC=0200000h-0200007h -pidloc=IDLOC -AEEDATA=0F00000h-0F000FFh \
  -peeprom_data=EEDATA \
  -prdata=COMRAM,nvrram=COMRAM,nvbit=COMRAM,rbss=COMRAM,rbit=COMRAM \
  -pfarbss=FARRAM,fardata=FARRAM,nvFARRAM=FARRAM \
  -pintsave_regs=BIGRAM,bigbss=BIGRAM,bigdata=BIGRAM -pbss=RAM \
  -pidata=CODE,irdata=CODE,ibigdata=CODE,ifardata=CODE -prparam=COMRAM \
  C:\Users\user\AppData\Local\Temp\s4hs.o \
  dist/default/debug\testt.X.debug.o 

Object code version is 3.11

Machine type is 18F4520

Call graph: (short form)




                Name                               Link     Load   Length Selector   Space Scale
C:\Users\user\AppData\Local\Temp\s4hs.o
                init                                  0        0        4        0       0
                idloc                            200000   200000        8   200000       0
                config                           300000   300000        E   300000       0
dist/default/debug\testt.X.debug.o
                text11                             643A     643A       1A     321D       0
                text10                             6498     6498       44     324C       0
                text9                              64DC     64DC       C4     326E       0
                text8                              6472     6472       26     3239       0
                text7                              74F4     74F4      3C2     3A7A       0
                text6                              65A0     65A0      28E     32D0       0
                text5                              682E     682E      28E     3417       0
                text4                              6ABC     6ABC      28E     355E       0
                text3                              6D4A     6D4A      28E     36A5       0
                text2                              6FD8     6FD8      28E     37EC       0
                text1                              7266     7266      28E     3933       0
                text0                              78B6     78B6      50A     3C5B       0
                cstackCOMRAM                          1        1       3E        1       1
                bssBANK1                            100      100       90      100       1
                bssCOMRAM                            3F       3F        C        1       1
                cinit                              6454     6454       1E     322A       0

TOTAL           Name                               Link     Load   Length     Space
        CLASS   STACK          

        CLASS   CODE           
                init                                  0        0        4         0
                text11                             643A     643A       1A         0
                text10                             6498     6498       44         0
                text9                              64DC     64DC       C4         0
                text8                              6472     6472       26         0
                text7                              74F4     74F4      3C2         0
                text6                              65A0     65A0      28E         0
                text5                              682E     682E      28E         0
                text4                              6ABC     6ABC      28E         0
                text3                              6D4A     6D4A      28E         0
                text2                              6FD8     6FD8      28E         0
                text1                              7266     7266      28E         0
                text0                              78B6     78B6      50A         0
                cinit                              6454     6454       1E         0

        CLASS   CONST          

        CLASS   SMALLCONST     

        CLASS   MEDIUMCONST    

        CLASS   COMRAM         
                cstackCOMRAM                          1        1       3E         1
                bssCOMRAM                            3F       3F        C         1

        CLASS   ABS1           

        CLASS   BIGRAM         

        CLASS   RAM            

        CLASS   BANK0          

        CLASS   BANK1          
                bssBANK1                            100      100       90         1

        CLASS   BANK2          

        CLASS   BANK3          

        CLASS   BANK4          

        CLASS   BANK5          

        CLASS   SFR            

        CLASS   FARRAM         

        CLASS   CONFIG         
                config                           300000   300000        E         0

        CLASS   IDLOC          
                idloc                            200000   200000        8         0

        CLASS   EEDATA         



SEGMENTS        Name                           Load    Length   Top    Selector   Space  Class

                reset_vec                      000000  000004  000004         0       0  CODE    
                cstackCOMRAM                   000001  00004A  00004B         1       1  COMRAM  
                bssBANK1                       000100  000090  000190       100       1  BANK1   
                text11                         00643A  00001A  006454      321D       0  CODE    
                cinit                          006454  00001E  006472      322A       0  CODE    
                text8                          006472  000026  006498      3239       0  CODE    
                text10                         006498  000044  0064DC      324C       0  CODE    
                text9                          0064DC  0000C4  0065A0      326E       0  CODE    
                text6                          0065A0  00028E  00682E      32D0       0  CODE    
                text5                          00682E  00028E  006ABC      3417       0  CODE    
                text4                          006ABC  00028E  006D4A      355E       0  CODE    
                text3                          006D4A  00028E  006FD8      36A5       0  CODE    
                text2                          006FD8  00028E  007266      37EC       0  CODE    
                text1                          007266  00028E  0074F4      3933       0  CODE    
                text7                          0074F4  0003C2  0078B6      3A7A       0  CODE    
                text0                          0078B6  00050A  007DC0      3C5B       0  CODE    
                idloc                          200000  000008  200008    200000       0  IDLOC   
                config                         300000  00000E  30000E    300000       0  CONFIG  


UNUSED ADDRESS RANGES

        Name                Unused          Largest block    Delta
        BANK0            000080-0000FF               80
        BANK1            000190-0001FF               70
        BANK2            000200-0002FF              100
        BANK3            000300-0003FF              100
        BANK4            000400-0004FF              100
        BANK5            000500-0005F3               F4
        BIGRAM           00004B-0000FF               B5
                         000190-0005F3              464
        CODE             000004-006439             6436
        COMRAM           00004B-00007F               35
        CONST            000004-006439             6436
        EEDATA           F00000-F000FF              100
        MEDIUMCONST      000600-006439             5E3A
        RAM              000080-0000FF               80
                         000190-0005F3              100
        SFR              000F80-000F9B               1C
                         000F9D-000FD3               37
                         000FD5-000FDA                6
                         000FE0-000FE2                3
                         000FE8-000FEA                3
                         000FF0-000FFC                D
        SMALLCONST       000600-006439              100
        STACK            000190-0005F3              464

                                  Symbol Table

?_ADC_Read               cstackCOMRAM 000001
?___awdiv                cstackCOMRAM 000001
?___wmul                 cstackCOMRAM 000001
ADC_Read@channle         cstackCOMRAM 000001
ADC_Read@digital         cstackCOMRAM 000005
_ADCON0bits              (abs)        000FC2
_ADCON1                  (abs)        000FC1
_ADCON2                  (abs)        000FC0
_ADCON2bits              (abs)        000FC0
_ADC_Initialize          text11       00643A
_ADC_Read                text10       006498
_ADFM                    (abs)        007E07
_ADRESH                  (abs)        000FC4
_ADRESL                  (abs)        000FC3
_LATB                    (abs)        000F8A
_LATBbits                (abs)        000F8A
_LATD                    (abs)        000F8C
_LATDbits                (abs)        000F8C
_TRISA                   (abs)        000F92
_TRISB                   (abs)        000F93
_TRISD                   (abs)        000F95
__CFG_BOREN$SBORDIS      (abs)        000000
__CFG_BORV$3             (abs)        000000
__CFG_CCP2MX$PORTC       (abs)        000000
__CFG_CP0$OFF            (abs)        000000
__CFG_CP1$OFF            (abs)        000000
__CFG_CP2$OFF            (abs)        000000
__CFG_CP3$OFF            (abs)        000000
__CFG_CPB$OFF            (abs)        000000
__CFG_CPD$OFF            (abs)        000000
__CFG_EBTR0$OFF          (abs)        000000
__CFG_EBTR1$OFF          (abs)        000000
__CFG_EBTR2$OFF          (abs)        000000
__CFG_EBTR3$OFF          (abs)        000000
__CFG_EBTRB$OFF          (abs)        000000
__CFG_FCMEN$OFF          (abs)        000000
__CFG_IESO$OFF           (abs)        000000
__CFG_LPT1OSC$OFF        (abs)        000000
__CFG_LVP$OFF            (abs)        000000
__CFG_MCLRE$ON           (abs)        000000
__CFG_OSC$INTIO67        (abs)        000000
__CFG_PBADEN$OFF         (abs)        000000
__CFG_PWRT$OFF           (abs)        000000
__CFG_STVREN$ON          (abs)        000000
__CFG_WDT$OFF            (abs)        000000
__CFG_WDTPS$32768        (abs)        000000
__CFG_WRT0$OFF           (abs)        000000
__CFG_WRT1$OFF           (abs)        000000
__CFG_WRT2$OFF           (abs)        000000
__CFG_WRT3$OFF           (abs)        000000
__CFG_WRTB$OFF           (abs)        000000
__CFG_WRTC$OFF           (abs)        000000
__CFG_WRTD$OFF           (abs)        000000
__CFG_XINST$OFF          (abs)        000000
__HRAM                   (abs)        000000
__Habs1                  abs1         000000
__Hbank0                 bank0        000000
__Hbank1                 bank1        000000
__Hbank2                 bank2        000000
__Hbank3                 bank3        000000
__Hbank4                 bank4        000000
__Hbank5                 bank5        000000
__Hbigbss                bigbss       000000
__Hbigdata               bigdata      000000
__Hbigram                bigram       000000
__Hbss                   bss          000000
__HbssBANK1              bssBANK1     000000
__HbssCOMRAM             bssCOMRAM    000000
__Hcinit                 cinit        000000
__Hclrtext               clrtext      000000
__Hcomram                comram       000000
__Hconfig                config       30000E
__Hconst                 const        000000
__HcstackCOMRAM          cstackCOMRAM 000000
__Hdata                  data         000000
__Heeprom_data           eeprom_data  000000
__Hfarbss                farbss       000000
__Hfardata               fardata      000000
__Hibigdata              ibigdata     000000
__Hidata                 idata        000000
__Hidloc                 idloc        200008
__Hifardata              ifardata     000000
__Hinit                  init         000004
__Hintcode               intcode      000000
__Hintcode_body          intcode_body 000000
__Hintcodelo             intcodelo    000000
__Hintentry              intentry     000000
__Hintret                intret       000000
__Hintsave_regs          intsave_regs 000000
__Hirdata                irdata       000000
__Hmediumconst           mediumconst  000000
__HnvFARRAM              nvFARRAM     000000
__Hnvbit                 nvbit        000000
__Hnvrram                nvrram       000000
__Hparam                 rparam       000000
__Hpowerup               powerup      000000
__Hram                   ram          000000
__Hramtop                ramtop       000600
__Hrbit                  rbit         000000
__Hrbss                  rbss         000000
__Hrdata                 rdata        000000
__Hreset_vec             reset_vec    000000
__Hrparam                rparam       000000
__Hsfr                   sfr          000000
__Hsmallconst            smallconst   000000
__Hspace_0               (abs)        30000E
__Hspace_1               (abs)        000190
__Hspace_2               (abs)        000000
__Hstack                 stack        000000
__Hstruct                struct       000000
__Htemp                  temp         000000
__Htext                  text         000000
__Htext0                 text0        000000
__Htext1                 text1        000000
__Htext10                text10       000000
__Htext11                text11       000000
__Htext2                 text2        000000
__Htext3                 text3        000000
__Htext4                 text4        000000
__Htext5                 text5        000000
__Htext6                 text6        000000
__Htext7                 text7        000000
__Htext8                 text8        000000
__Htext9                 text9        000000
__LRAM                   (abs)        000001
__Labs1                  abs1         000000
__Lbank0                 bank0        000000
__Lbank1                 bank1        000000
__Lbank2                 bank2        000000
__Lbank3                 bank3        000000
__Lbank4                 bank4        000000
__Lbank5                 bank5        000000
__Lbigbss                bigbss       000000
__Lbigdata               bigdata      000000
__Lbigram                bigram       000000
__Lbss                   bss          000000
__LbssBANK1              bssBANK1     000000
__LbssCOMRAM             bssCOMRAM    000000
__Lcinit                 cinit        000000
__Lclrtext               clrtext      000000
__Lcomram                comram       000000
__Lconfig                config       300000
__Lconst                 const        000000
__LcstackCOMRAM          cstackCOMRAM 000000
__Ldata                  data         000000
__Leeprom_data           eeprom_data  000000
__Lfarbss                farbss       000000
__Lfardata               fardata      000000
__Libigdata              ibigdata     000000
__Lidata                 idata        000000
__Lidloc                 idloc        200000
__Lifardata              ifardata     000000
__Linit                  init         000000
__Lintcode               intcode      000000
__Lintcode_body          intcode_body 000000
__Lintcodelo             intcodelo    000000
__Lintentry              intentry     000000
__Lintret                intret       000000
__Lintsave_regs          intsave_regs 000000
__Lirdata                irdata       000000
__Lmediumconst           mediumconst  000000
__LnvFARRAM              nvFARRAM     000000
__Lnvbit                 nvbit        000000
__Lnvrram                nvrram       000000
__Lparam                 rparam       000000
__Lpowerup               powerup      000000
__Lram                   ram          000000
__Lramtop                ramtop       000600
__Lrbit                  rbit         000000
__Lrbss                  rbss         000000
__Lrdata                 rdata        000000
__Lreset_vec             reset_vec    000000
__Lrparam                rparam       000000
__Lsfr                   sfr          000000
__Lsmallconst            smallconst   000000
__Lspace_0               (abs)        000000
__Lspace_1               (abs)        000000
__Lspace_2               (abs)        000000
__Lstack                 stack        000000
__Lstruct                struct       000000
__Ltemp                  temp         000000
__Ltext                  text         000000
__Ltext0                 text0        000000
__Ltext1                 text1        000000
__Ltext10                text10       000000
__Ltext11                text11       000000
__Ltext2                 text2        000000
__Ltext3                 text3        000000
__Ltext4                 text4        000000
__Ltext5                 text5        000000
__Ltext6                 text6        000000
__Ltext7                 text7        000000
__Ltext8                 text8        000000
__Ltext9                 text9        000000
__S0                     (abs)        30000E
__S1                     (abs)        000190
__S2                     (abs)        000000
___awdiv                 text9        0064DC
___awdiv@counter         cstackCOMRAM 000005
___awdiv@dividend        cstackCOMRAM 000001
___awdiv@divisor         cstackCOMRAM 000003
___awdiv@quotient        cstackCOMRAM 000007
___awdiv@sign            cstackCOMRAM 000006
___inthi_sp              stack        000000
___intlo_sp              stack        000000
___param_bank            (abs)        000000
___rparam_used           (abs)        000001
___sp                    stack        000000
___wmul                  text8        006472
___wmul@multiplicand     cstackCOMRAM 000003
___wmul@multiplier       cstackCOMRAM 000001
___wmul@product          cstackCOMRAM 000005
__accesstop              (abs)        000080
__activetblptr           (abs)        000000
__end_of_ADC_Initialize  text11       006454
__end_of_ADC_Read        text10       0064DC
__end_of___awdiv         text9        0065A0
__end_of___wmul          text8        006498
__end_of__initialization cinit        00646C
__end_of_initial         text7        0078B6
__end_of_main            text0        007DC0
__end_of_rotate_bot      text6        00682E
__end_of_rotate_l        text5        006ABC
__end_of_rotate_r        text4        006D4A
__end_of_rotate_sidebot  text3        006FD8
__end_of_rotate_sidetop  text2        007266
__end_of_rotate_top      text1        0074F4
__initialization         cinit        006454
__mediumconst            mediumconst  000000
__pbssBANK1              bssBANK1     000100
__pbssCOMRAM             bssCOMRAM    00003F
__pcinit                 cinit        006454
__pcstackCOMRAM          cstackCOMRAM 000001
__ptext0                 text0        0078B6
__ptext1                 text1        007266
__ptext10                text10       006498
__ptext11                text11       00643A
__ptext2                 text2        006FD8
__ptext3                 text3        006D4A
__ptext4                 text4        006ABC
__ptext5                 text5        00682E
__ptext6                 text6        0065A0
__ptext7                 text7        0074F4
__ptext8                 text8        006472
__ptext9                 text9        0064DC
__ramtop                 ramtop       000600
__size_of_ADC_Initialize (abs)        000000
__size_of_ADC_Read       (abs)        000000
__size_of___awdiv        (abs)        000000
__size_of___wmul         (abs)        000000
__size_of_initial        (abs)        000000
__size_of_main           (abs)        000000
__size_of_rotate_bot     (abs)        000000
__size_of_rotate_l       (abs)        000000
__size_of_rotate_r       (abs)        000000
__size_of_rotate_sidebot (abs)        000000
__size_of_rotate_sidetop (abs)        000000
__size_of_rotate_top     (abs)        000000
__smallconst             smallconst   000000
_initial                 text7        0074F4
_main                    text0        0078B6
_original                bssCOMRAM    00003F
_rgb                     bssBANK1     000100
_rotate_bot              text6        0065A0
_rotate_l                text5        00682E
_rotate_r                text4        006ABC
_rotate_sidebot          text3        006D4A
_rotate_sidetop          text2        006FD8
_rotate_top              text1        007266
end_of_initialization    cinit        00646C
initial@i                cstackCOMRAM 000007
intlevel0                text         000000
intlevel1                text         000000
intlevel2                text         000000
intlevel3                text         000000
main@i                   cstackCOMRAM 00003D
main@index               cstackCOMRAM 000039
main@j                   cstackCOMRAM 000037
main@temp                cstackCOMRAM 000029
main@turn                cstackCOMRAM 00003B
main@val                 cstackCOMRAM 00002B
main@val_385             cstackCOMRAM 00002D
main@val_387             cstackCOMRAM 00002F
main@val_389             cstackCOMRAM 000031
main@val_391             cstackCOMRAM 000033
main@val_393             cstackCOMRAM 000035
rotate_bot@buf           cstackCOMRAM 00000C
rotate_bot@buf_315       cstackCOMRAM 00000E
rotate_bot@tempa         cstackCOMRAM 000010
rotate_bot@tempb         cstackCOMRAM 000016
rotate_bot@tempc         cstackCOMRAM 00001C
rotate_bot@tempd         cstackCOMRAM 000022
rotate_bot@val           cstackCOMRAM 000009
rotate_l@buf             cstackCOMRAM 00000C
rotate_l@buf_275         cstackCOMRAM 00000E
rotate_l@tempa           cstackCOMRAM 000010
rotate_l@tempb           cstackCOMRAM 000016
rotate_l@tempc           cstackCOMRAM 00001C
rotate_l@tempd           cstackCOMRAM 000022
rotate_l@val             cstackCOMRAM 000009
rotate_r@buf             cstackCOMRAM 00000C
rotate_r@buf_255         cstackCOMRAM 00000E
rotate_r@tempa           cstackCOMRAM 000010
rotate_r@tempb           cstackCOMRAM 000016
rotate_r@tempc           cstackCOMRAM 00001C
rotate_r@tempd           cstackCOMRAM 000022
rotate_r@val             cstackCOMRAM 000009
rotate_sidebot@buf       cstackCOMRAM 00000C
rotate_sidebot@buf_355   cstackCOMRAM 00000E
rotate_sidebot@tempa     cstackCOMRAM 000010
rotate_sidebot@tempb     cstackCOMRAM 000016
rotate_sidebot@tempc     cstackCOMRAM 00001C
rotate_sidebot@tempd     cstackCOMRAM 000022
rotate_sidebot@val       cstackCOMRAM 000009
rotate_sidetop@buf       cstackCOMRAM 00000C
rotate_sidetop@buf_335   cstackCOMRAM 00000E
rotate_sidetop@tempa     cstackCOMRAM 000010
rotate_sidetop@tempb     cstackCOMRAM 000016
rotate_sidetop@tempc     cstackCOMRAM 00001C
rotate_sidetop@tempd     cstackCOMRAM 000022
rotate_sidetop@val       cstackCOMRAM 000009
rotate_top@buf           cstackCOMRAM 00000C
rotate_top@buf_295       cstackCOMRAM 00000E
rotate_top@tempa         cstackCOMRAM 000010
rotate_top@tempb         cstackCOMRAM 000016
rotate_top@tempc         cstackCOMRAM 00001C
rotate_top@tempd         cstackCOMRAM 000022
rotate_top@val           cstackCOMRAM 000009
stackhi                  (abs)        0005F3
stacklo                  (abs)        000190
start                    init         000000
start_initialization     cinit        006454


FUNCTION INFORMATION:

 *************** function _main *****************
 Defined at:
		line 416 in file "newmain.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  val             2   52[COMRAM] int 
  val             2   50[COMRAM] int 
  val             2   48[COMRAM] int 
  val             2   46[COMRAM] int 
  val             2   44[COMRAM] int 
  val             2   42[COMRAM] int 
  index           2   56[COMRAM] int 
  temp            2   40[COMRAM] int 
  i               2   60[COMRAM] int 
  turn            2   58[COMRAM] int 
  j               2   54[COMRAM] int 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0       0       0       0       0       0
      Locals:        22       0       0       0       0       0       0
      Temps:          1       0       0       0       0       0       0
      Totals:        23       0       0       0       0       0       0
Total ram usage:       23 bytes
 Hardware stack levels required when called:    2
 This function calls:
		_ADC_Initialize
		_ADC_Read
		___awdiv
		___wmul
		_initial
		_rotate_bot
		_rotate_l
		_rotate_r
		_rotate_sidebot
		_rotate_sidetop
		_rotate_top
 This function is called by:
		Startup code after reset
 This function uses a non-reentrant model


 *************** function _rotate_top *****************
 Defined at:
		line 228 in file "newmain.c"
 Parameters:    Size  Location     Type
  val             2    8[COMRAM] int 
 Auto vars:     Size  Location     Type
  tempd           6   33[COMRAM] struct RGB
  tempc           6   27[COMRAM] struct RGB
  tempb           6   21[COMRAM] struct RGB
  tempa           6   15[COMRAM] struct RGB
  buf             2   13[COMRAM] int 
  buf             2   11[COMRAM] int 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         2       0       0       0       0       0       0
      Locals:        28       0       0       0       0       0       0
      Temps:          1       0       0       0       0       0       0
      Totals:        31       0       0       0       0       0       0
Total ram usage:       31 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _rotate_sidetop *****************
 Defined at:
		line 322 in file "newmain.c"
 Parameters:    Size  Location     Type
  val             2    8[COMRAM] int 
 Auto vars:     Size  Location     Type
  tempd           6   33[COMRAM] struct RGB
  tempc           6   27[COMRAM] struct RGB
  tempb           6   21[COMRAM] struct RGB
  tempa           6   15[COMRAM] struct RGB
  buf             2   13[COMRAM] int 
  buf             2   11[COMRAM] int 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         2       0       0       0       0       0       0
      Locals:        28       0       0       0       0       0       0
      Temps:          1       0       0       0       0       0       0
      Totals:        31       0       0       0       0       0       0
Total ram usage:       31 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _rotate_sidebot *****************
 Defined at:
		line 369 in file "newmain.c"
 Parameters:    Size  Location     Type
  val             2    8[COMRAM] int 
 Auto vars:     Size  Location     Type
  tempd           6   33[COMRAM] struct RGB
  tempc           6   27[COMRAM] struct RGB
  tempb           6   21[COMRAM] struct RGB
  tempa           6   15[COMRAM] struct RGB
  buf             2   13[COMRAM] int 
  buf             2   11[COMRAM] int 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         2       0       0       0       0       0       0
      Locals:        28       0       0       0       0       0       0
      Temps:          1       0       0       0       0       0       0
      Totals:        31       0       0       0       0       0       0
Total ram usage:       31 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _rotate_r *****************
 Defined at:
		line 135 in file "newmain.c"
 Parameters:    Size  Location     Type
  val             2    8[COMRAM] int 
 Auto vars:     Size  Location     Type
  tempd           6   33[COMRAM] struct RGB
  tempc           6   27[COMRAM] struct RGB
  tempb           6   21[COMRAM] struct RGB
  tempa           6   15[COMRAM] struct RGB
  buf             2   13[COMRAM] int 
  buf             2   11[COMRAM] int 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         2       0       0       0       0       0       0
      Locals:        28       0       0       0       0       0       0
      Temps:          1       0       0       0       0       0       0
      Totals:        31       0       0       0       0       0       0
Total ram usage:       31 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _rotate_l *****************
 Defined at:
		line 181 in file "newmain.c"
 Parameters:    Size  Location     Type
  val             2    8[COMRAM] int 
 Auto vars:     Size  Location     Type
  tempd           6   33[COMRAM] struct RGB
  tempc           6   27[COMRAM] struct RGB
  tempb           6   21[COMRAM] struct RGB
  tempa           6   15[COMRAM] struct RGB
  buf             2   13[COMRAM] int 
  buf             2   11[COMRAM] int 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         2       0       0       0       0       0       0
      Locals:        28       0       0       0       0       0       0
      Temps:          1       0       0       0       0       0       0
      Totals:        31       0       0       0       0       0       0
Total ram usage:       31 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _rotate_bot *****************
 Defined at:
		line 275 in file "newmain.c"
 Parameters:    Size  Location     Type
  val             2    8[COMRAM] int 
 Auto vars:     Size  Location     Type
  tempd           6   33[COMRAM] struct RGB
  tempc           6   27[COMRAM] struct RGB
  tempb           6   21[COMRAM] struct RGB
  tempa           6   15[COMRAM] struct RGB
  buf             2   13[COMRAM] int 
  buf             2   11[COMRAM] int 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         2       0       0       0       0       0       0
      Locals:        28       0       0       0       0       0       0
      Temps:          1       0       0       0       0       0       0
      Totals:        31       0       0       0       0       0       0
Total ram usage:       31 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _initial *****************
 Defined at:
		line 102 in file "newmain.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  i               2    6[COMRAM] int 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0       0       0       0       0       0
      Locals:         2       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         2       0       0       0       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		___wmul
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function ___wmul *****************
 Defined at:
		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\Umul16.c"
 Parameters:    Size  Location     Type
  multiplier      2    0[COMRAM] unsigned int 
  multiplicand    2    2[COMRAM] unsigned int 
 Auto vars:     Size  Location     Type
  product         2    4[COMRAM] unsigned int 
 Return value:  Size  Location     Type
                  2    0[COMRAM] unsigned int 
 Registers used:
		wreg, status,2, status,0, prodl, prodh
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         4       0       0       0       0       0       0
      Locals:         2       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         6       0       0       0       0       0       0
Total ram usage:        6 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_initial
		_main
 This function uses a non-reentrant model


 *************** function ___awdiv *****************
 Defined at:
		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\awdiv.c"
 Parameters:    Size  Location     Type
  dividend        2    0[COMRAM] int 
  divisor         2    2[COMRAM] int 
 Auto vars:     Size  Location     Type
  quotient        2    6[COMRAM] int 
  sign            1    5[COMRAM] unsigned char 
  counter         1    4[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  2    0[COMRAM] int 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         4       0       0       0       0       0       0
      Locals:         4       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         8       0       0       0       0       0       0
Total ram usage:        8 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _ADC_Read *****************
 Defined at:
		line 88 in file "newmain.c"
 Parameters:    Size  Location     Type
  channle         2    0[COMRAM] int 
 Auto vars:     Size  Location     Type
  digital         2    4[COMRAM] int 
 Return value:  Size  Location     Type
                  2    0[COMRAM] int 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         2       0       0       0       0       0       0
      Locals:         2       0       0       0       0       0       0
      Temps:          2       0       0       0       0       0       0
      Totals:         6       0       0       0       0       0       0
Total ram usage:        6 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _ADC_Initialize *****************
 Defined at:
		line 78 in file "newmain.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         0       0       0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_main
 This function uses a non-reentrant model



MODULE INFORMATION

Module		Function		Class		Link	Load	Size
C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\awdiv.c
		___awdiv       		CODE           	64DC	0000	197

C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\awdiv.c estimated size: 197

newmain.c
		_rotate_l      		CODE           	682E	0000	655
		_rotate_r      		CODE           	6ABC	0000	655
		_rotate_bot    		CODE           	65A0	0000	655
		_rotate_top    		CODE           	7266	0000	655
		_ADC_Initialize		CODE           	643A	0000	27
		_main          		CODE           	78B6	0000	1291
		_rotate_sidebot		CODE           	6D4A	0000	655
		_rotate_sidetop		CODE           	6FD8	0000	655
		_initial       		CODE           	74F4	0000	963
		_ADC_Read      		CODE           	6498	0000	69

newmain.c estimated size: 6280

shared
		__initialization		CODE           	6454	0000	25

shared estimated size: 25

C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\Umul16.c
		___wmul        		CODE           	6472	0000	39

C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\Umul16.c estimated size: 39

